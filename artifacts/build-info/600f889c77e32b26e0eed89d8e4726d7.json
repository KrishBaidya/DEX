{
	"id": "600f889c77e32b26e0eed89d8e4726d7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"DEX.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"MEME.sol\";\n\ncontract DEX is Pausable, Ownable {\n    struct Stack_Struct {\n        uint256 meme_amount;\n        uint256 eth_amount;\n        uint256 time;\n    }\n    ERC20 meme;\n\n    event Buy(address indexed from, uint256 Meme_amount, uint256 eth_amount);\n    event Sell(address indexed from, uint256 Meme_amount, uint256 eth_amount);\n    event Stack(address indexed from, uint256 Meme_amount, uint256 eth_amount);\n    event UnStack(\n        address indexed from,\n        uint256 Meme_amount,\n        uint256 eth_amount\n    );\n\n    mapping(address => Stack_Struct[]) internal Stacked;\n\n    mapping(uint256 => uint256) internal dailyTax;\n\n    uint256 public stackingRate;\n\n    uint256 internal _k;\n    uint256 internal _x;\n    uint256 internal _y;\n\n    uint256 internal precision = 10e18;\n\n    uint256 internal taxRate = (3 * precision) / 10;\n\n    constructor(address addr) {\n        meme = MEME(addr);\n\n        //_stack(10000000, 10000000);\n    }\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n\n    function _updateK() internal {\n        _k = _x * _y;\n    }\n\n    function getStacks() public view returns (Stack_Struct[] memory) {\n        return Stacked[msg.sender];\n    }\n\n    function stack(uint256 meme_amount) public payable whenNotPaused{\n        require(meme_amount > 0, \"Send more MEME\");\n        require(msg.value > 0, \"Send more ETH\");\n        require(\n            stackingRate <= (msg.value * precision) / meme_amount,\n            \"Stacking Rate not met\"\n        );\n        _stack(meme_amount, msg.value);\n    }\n\n    function unstack(uint256 index) public whenNotPaused{\n        require(index >= 0, \"Index can't be less then 0\");\n        _unstack(index);\n    }\n\n    function _stack(uint256 meme_amount, uint256 eth_amount) internal {\n        meme.transferFrom(msg.sender, address(this), meme_amount);\n        _x += meme_amount;\n        _y += eth_amount;\n\n        Stack_Struct memory ss = Stack_Struct(\n            meme_amount,\n            eth_amount,\n            block.timestamp\n        );\n        Stacked[msg.sender].push(ss);\n\n        stackingRate = ((_y * precision) / _x);\n\n        _updateK();\n        emit Stack(msg.sender, meme_amount, msg.value);\n    }\n\n    function _unstack(uint256 index) internal {\n        Stack_Struct memory ss = Stacked[msg.sender][index];\n\n        uint256 tax = _distributeTax();\n\n        uint256 meme_to_return = ss.meme_amount;\n        uint256 eth_to_return = ss.eth_amount + tax;\n\n        require(\n            meme.balanceOf(address(this)) >= meme_to_return,\n            \"Sorry Currently this contract doesn't have Meme to return, Check back Soon!\"\n        );\n        require(\n            address(this).balance >= eth_to_return,\n            \"Sorry Currently this contract doesn't have Eth to return, Check back Soon!\"\n        );\n\n\n        _x -= meme_to_return;\n        _y -= eth_to_return;\n\n        meme.transfer(msg.sender, meme_to_return);\n        payable(msg.sender).transfer(eth_to_return);\n\n        if (_x == 0) {\n            stackingRate = 0;\n        } else {\n            stackingRate = (_y * precision) / _x;\n        }\n\n        _removeArr(index);\n\n        _updateK();\n        emit UnStack(msg.sender, meme_to_return, eth_to_return);\n    }\n\n    function _removeArr(uint256 index) internal {\n        require(index < Stacked[msg.sender].length, \"Index out of bounds\");\n        for (uint256 i = index; i < Stacked[msg.sender].length - 1; i++) {\n            Stacked[msg.sender][i] = Stacked[msg.sender][i + 1];\n        }\n        Stacked[msg.sender].pop();\n    }\n\n    function _distributeTax() internal view returns (uint256) {\n        uint256 taxShare = 0;\n        if (dailyTax[block.timestamp / 1 days] > 0) {\n            Stack_Struct[] storage stacks = Stacked[msg.sender];\n            uint256 numStacks = stacks.length;\n            uint256 totalStackTime = 0;\n            for (uint256 i = 0; i <= numStacks; i++) {\n                Stack_Struct memory ss = stacks[i];\n                totalStackTime += (block.timestamp - ss.time);\n            }\n            for (uint256 i = 0; i <= numStacks; i++) {\n                Stack_Struct memory ss = stacks[i];\n                uint256 poolShare = ((ss.meme_amount * precision) / _x);\n                uint256 stackTime = (block.timestamp - ss.time);\n                uint256 stackWeight = stackTime / totalStackTime;\n                taxShare +=\n                    (poolShare *\n                        dailyTax[block.timestamp / 1 days] *\n                        stackWeight) /\n                    _k;\n            }\n        }\n        return taxShare;\n    }\n\n    function getMemePrice(uint256 meme_amount) public whenNotPaused view returns (uint256) {\n        require(_k > 0, \"Not enough liquidity\");\n        uint256 dx = 0;\n        uint256 dy = 0;\n        if (_y == 0) {\n            dx = _k / 1 - meme_amount;\n        } else {\n            dx = _k / _y - meme_amount;\n        }\n        if (dx == 0) {\n            dy = _k / 1;\n        } else {\n            dy = _k / dx;\n        }\n        uint256 eth_price_without_tax = dy - _y;\n        uint256 eth_tax = (eth_price_without_tax * taxRate) / precision;\n\n        uint256 eth_price_with_tax = eth_price_without_tax + eth_tax;\n        return eth_price_with_tax;\n    }\n\n    function getETHPrice(uint256 eth_amount) public whenNotPaused view returns (uint256) {\n        require(_k > 0, \"Not enough liquidity\");\n        uint256 dx = 0;\n        uint256 dy = 0;\n        if (_x == 0) {\n            dy = _k / 1 - eth_amount;\n        } else {\n            dy = _k / _x - eth_amount;\n        }\n        if (dy == 0) {\n            dx = _k / 1;\n        } else {\n            dx = _k / dy;\n        }\n        uint256 meme_price_without_tax = dx - _x;\n        uint256 meme_tax = (meme_price_without_tax * taxRate) / precision;\n\n        uint256 meme_price_with_tax = meme_price_without_tax + meme_tax;\n\n        return meme_price_with_tax;\n    }\n\n    function buy(uint256 meme_amount) public whenNotPaused payable {\n        require(meme_amount > 0, \"Send Some Meme\");\n        uint256 meme_price = getMemePrice(meme_amount);\n        require(meme_price <= msg.value, \"Send More ETH\");\n\n        meme.transfer(msg.sender, meme_amount);\n        payable(msg.sender).transfer(msg.value - meme_price);\n\n        dailyTax[block.timestamp / 1 days] +=\n            (meme_amount * (precision + taxRate)) /\n            precision;\n\n        _x -= meme_amount;\n        _y = (_k / _x);\n\n        emit Buy(msg.sender, meme_amount, meme_price);\n    }\n\n    function sell(uint256 eth_amount) public whenNotPaused{\n        require(eth_amount > 0, \"Send Some ETH\");\n        uint256 eth_price = getETHPrice(eth_amount);\n\n        require(eth_price <= meme.balanceOf(msg.sender), \"You don't have enough meme\");\n        meme.transferFrom(msg.sender, address(this), eth_price);\n        payable(msg.sender).transfer(eth_amount);\n\n        dailyTax[block.timestamp / 1 days] +=\n            (eth_price * (precision + taxRate)) /\n            precision;\n\n        _y -= eth_amount;\n        _x = (_k / _y);\n\n        emit Sell(msg.sender, eth_price, eth_amount);\n    }\n\n    // function secondsToDays(uint256 second) public pure returns (uint256) {\n    //     return second / 1 days;\n    // }\n\n    // function check(uint256 index) public view returns (uint256) {\n    //     Stack_Struct memory ss = Stacked[msg.sender][index];\n\n    //     uint256 timestamp = block.timestamp - ss.time;\n    //     uint256 poolShare = ((ss.meme_amount * taxRate * timestamp) / _x);\n\n    //     return poolShare;\n    // }\n}\n\n// pragma solidity ^0.8.9;\n\n// import \"@openzeppelin/contracts/security/Pausable.sol\";\n// import \"@openzeppelin/contracts/access/Ownable.sol\";\n// import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n// import \"MEME.sol\";\n\n// struct Stack_Struct {\n//     uint256 meme_amount;\n//     uint256 eth_amount;\n//     uint256 time;\n//     uint256 stackingRate;\n// }\n\n// contract DEX is Pausable, Ownable {\n//     ERC20 meme;\n\n//     mapping(address => Stack_Struct) public Stacked;\n\n//     uint256 public stackingRate;\n\n//     uint256 public _k;\n//     uint256 public _x;\n//     uint256 public _y;\n\n//     uint256 public precision = 10**18;\n\n//     constructor(address addr) {\n//         meme = MEME(addr);\n\n//         //_stack(10000000, 10000000);\n//     }\n\n//     function pause() public onlyOwner {\n//         _pause();\n//     }\n\n//     function unpause() public onlyOwner {\n//         _unpause();\n//     }\n\n//     function _updateK() internal {\n//         _k = _x * _y;\n//     }\n\n//     function stack(uint256 meme_amount) public payable {\n//         require(0 < msg.value , \"Eth can't be 0\");\n//         require(0 < meme_amount , \"Meme can't be 0\");\n//         // if(Stacked[msg.sender].stackingRate != 0){\n//         // }\n//         require(stackingRate <= ((msg.value * precision) / meme_amount));\n//         _stack(meme_amount);\n//     }\n\n//     function unstack(uint256 meme_amount) public {\n//         require(0 < meme_amount , \"Meme can't be 0\");\n\n//         uint256 eth_amount2 = ((Stacked[msg.sender].stackingRate * meme_amount) / precision);\n//         _unstack(meme_amount, eth_amount2, msg.sender);\n//     }\n\n//     function _stack(uint256 meme_amount) internal {\n//         meme.transferFrom(msg.sender, address(this), meme_amount);\n\n//         _x += meme_amount;\n//         _y += msg.value;\n\n//         Stacked[msg.sender].meme_amount += meme_amount;\n//         Stacked[msg.sender].eth_amount += msg.value;\n//         Stacked[msg.sender].time = block.timestamp;\n\n//         Stacked[msg.sender].stackingRate = ((_y * precision) / _x);\n//         stackingRate = Stacked[msg.sender].stackingRate;\n\n//         _updateK();\n//     }\n\n//     function _unstack(\n//         uint256 meme_amount,\n//         uint256 eth_amount,\n//         address to\n//     ) public {\n//         _x -= meme_amount;\n//         _y -= eth_amount;\n\n//         Stacked[to].meme_amount -= meme_amount;\n//         Stacked[to].eth_amount -= eth_amount;\n//         Stacked[to].time = block.timestamp;\n\n//         meme.transfer(to, meme_amount);\n//         payable(to).transfer(eth_amount);\n\n//         if (_x == 0) {\n//             Stacked[msg.sender].stackingRate = 0;\n//             stackingRate = 0;\n//         } else {\n//             Stacked[msg.sender].stackingRate = (_y * precision) / _x;\n//             stackingRate = Stacked[msg.sender].stackingRate;\n//         }\n\n//         _updateK();\n//     }\n\n//     // function _buy(uint128 meme_amount) public payable {\n//     //     uint dx = meme_amount;\n//     //     uint dy = _y;\n\n//     //     _x += dx;\n//     //     _y = _k / _x;\n\n//     //     dy -= _y;\n\n//     //     memeBalance += dx;\n//     //     ethBalance -= dy;\n//     // }\n\n//     // function _sell(uint128 meme_amount) public payable {\n//     //     uint256 dx = meme_amount;\n//     //     uint256 dy = _y;\n\n//     //     _x -= dx;\n//     //     _y = _k / _x;\n\n//     //     dy = _y - dy;\n\n//     //     memeBalance -= dx;\n//     //     ethBalance += dy;\n//     // }\n// }\n"
			},
			"MEME.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract MEME is ERC20, ERC20Burnable, Pausable, Ownable {\r\n    constructor() ERC20(\"MEME\", \"MEME\") {\r\n        _mint(msg.sender, 50000 * 10 ** decimals());\r\n    }\r\n\r\n    function pause() public onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() public onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    function _beforeTokenTransfer(address from, address to, uint256 amount)\r\n        internal\r\n        whenNotPaused\r\n        override\r\n    {\r\n        super._beforeTokenTransfer(from, to, amount);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2054:2059  name_ */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3170:3172   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3152:3173   */\n      mstore\n        /* \"#utility.yul\":3209:3211   */\n      0x25\n        /* \"#utility.yul\":3189:3207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3182:3212   */\n      mstore\n        /* \"#utility.yul\":3248:3282   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3228:3246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3221:3283   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3299:3317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3292:3327   */\n      mstore\n        /* \"#utility.yul\":3344:3363   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3576:3578   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3558:3579   */\n      mstore\n        /* \"#utility.yul\":3615:3617   */\n      0x24\n        /* \"#utility.yul\":3595:3613   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3588:3618   */\n      mstore\n        /* \"#utility.yul\":3654:3688   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3634:3652   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3627:3689   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3705:3723   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3698:3732   */\n      mstore\n        /* \"#utility.yul\":3749:3768   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3374:3774   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3981:3983   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3963:3984   */\n      mstore\n        /* \"#utility.yul\":4020:4022   */\n      0x22\n        /* \"#utility.yul\":4000:4018   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3993:4023   */\n      mstore\n        /* \"#utility.yul\":4059:4093   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4039:4057   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4032:4094   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4110:4128   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4103:4135   */\n      mstore\n        /* \"#utility.yul\":4152:4171   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3779:4177   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4384:4386   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4366:4387   */\n      mstore\n        /* \"#utility.yul\":4423:4425   */\n      0x1d\n        /* \"#utility.yul\":4403:4421   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4396:4426   */\n      mstore\n        /* \"#utility.yul\":4462:4493   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4442:4460   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4435:4494   */\n      mstore\n        /* \"#utility.yul\":4511:4529   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4182:4535   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4742:4744   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4724:4745   */\n      mstore\n        /* \"#utility.yul\":4781:4783   */\n      0x25\n        /* \"#utility.yul\":4761:4779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4754:4784   */\n      mstore\n        /* \"#utility.yul\":4820:4854   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4800:4818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4793:4855   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4871:4889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4864:4899   */\n      mstore\n        /* \"#utility.yul\":4916:4935   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4540:4941   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5148:5150   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5130:5151   */\n      mstore\n        /* \"#utility.yul\":5187:5189   */\n      0x23\n        /* \"#utility.yul\":5167:5185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5160:5190   */\n      mstore\n        /* \"#utility.yul\":5226:5260   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5206:5224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5199:5261   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5277:5295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5270:5303   */\n      mstore\n        /* \"#utility.yul\":5320:5339   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4946:5345   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5534:5555   */\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x26\n        /* \"#utility.yul\":5571:5589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5564:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5664   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5610:5628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5603:5665   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5681:5699   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5674:5710   */\n      mstore\n        /* \"#utility.yul\":5727:5746   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5350:5752   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_143:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_143)\n    tag_145:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_140:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_147:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_149:\n        /* \"#utility.yul\":913:942   */\n      tag_150\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_140\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_154:\n        /* \"#utility.yul\":1563:1592   */\n      tag_155\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_140\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_156\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_159:\n        /* \"#utility.yul\":2051:2080   */\n      tag_160\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_162:\n        /* \"#utility.yul\":2259:2288   */\n      tag_163\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_140\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_164\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_140\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_166:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_167:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2963   */\n    tag_88:\n        /* \"#utility.yul\":2806:2815   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2827:2837   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2824:2957   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2879:2889   */\n      0x4e487b71\n        /* \"#utility.yul\":2874:2877   */\n      0xe0\n        /* \"#utility.yul\":2870:2890   */\n      shl\n        /* \"#utility.yul\":2867:2868   */\n      0x00\n        /* \"#utility.yul\":2860:2891   */\n      mstore\n        /* \"#utility.yul\":2914:2918   */\n      0x11\n        /* \"#utility.yul\":2911:2912   */\n      0x04\n        /* \"#utility.yul\":2904:2919   */\n      mstore\n        /* \"#utility.yul\":2942:2946   */\n      0x24\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2932:2947   */\n      revert\n\n    auxdata: 0xa2646970667358221220c8a4efa71651392a759eaf68819ccbd8a03150976e28e1192c65cf32565452a964736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_265": {
									"entryPoint": null,
									"id": 265,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 439,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 89,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:9"
															},
															"nodeType": "YulIf",
															"src": "220:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:9",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:9"
															},
															"nodeType": "YulIf",
															"src": "353:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:9"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:9"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:9"
															},
															"nodeType": "YulIf",
															"src": "536:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:9"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:9"
															},
															"nodeType": "YulIf",
															"src": "698:53:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:9"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:9"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:9"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:9",
																"statements": []
															},
															"src": "779:133:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:9"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:9",
														"type": ""
													}
												],
												"src": "146:840:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:9"
															},
															"nodeType": "YulIf",
															"src": "1119:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:9",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:9"
															},
															"nodeType": "YulIf",
															"src": "1256:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:9"
															},
															"nodeType": "YulIf",
															"src": "1429:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:9"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:9",
														"type": ""
													}
												],
												"src": "991:562:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:9"
															},
															"nodeType": "YulIf",
															"src": "1701:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:9"
															},
															"nodeType": "YulIf",
															"src": "1771:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:9",
														"type": ""
													}
												],
												"src": "1558:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:9",
														"type": ""
													}
												],
												"src": "1943:121:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:9"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:9"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:9"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:9",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:9"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:9"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:9"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:9",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:9"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:9"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:9"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:9"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:9"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:9"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:9"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:9"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:9",
																			"statements": []
																		},
																		"src": "2516:82:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:9"
															},
															"nodeType": "YulIf",
															"src": "2160:448:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:9",
														"type": ""
													}
												],
												"src": "2069:545:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:9",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:9"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:9",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:9"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:9"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:9",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:9",
														"type": ""
													}
												],
												"src": "2619:166:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:9"
															},
															"nodeType": "YulIf",
															"src": "2929:56:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:9"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:9"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:9",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:9"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:9"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:9"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:9"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:9"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:9"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:9"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:9",
																					"statements": []
																				},
																				"src": "3376:236:9"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:9",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:9",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:9"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:9"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:9"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:9",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:9"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:9"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:9",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:9"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:9"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:9"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:9"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:9"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:9"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:9"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:9"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:9",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:9"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:9"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:9"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:9"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:9",
														"type": ""
													}
												],
												"src": "2790:1352:9"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162000b0e38038062000b0e833981016040819052620000339162000117565b600362000041838262000209565b50600462000050828262000209565b505050620002d1565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126200007d575f80fd5b81516001600160401b03808211156200009a576200009a62000059565b604051601f8301601f19908116603f01168101908282118183101715620000c557620000c562000059565b81604052838152602092508683858801011115620000e1575f80fd5b5f91505b83821015620001045785820183015181830184015290820190620000e5565b5f93810190920192909252949350505050565b5f806040838503121562000129575f80fd5b82516001600160401b038082111562000140575f80fd5b6200014e868387016200006d565b9350602085015191508082111562000164575f80fd5b5062000173858286016200006d565b9150509250929050565b600181811c908216806200019257607f821691505b602082108103620001b157634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111562000204575f81815260208120601f850160051c81016020861015620001df5750805b601f850160051c820191505b818110156200020057828155600101620001eb565b5050505b505050565b81516001600160401b0381111562000225576200022562000059565b6200023d816200023684546200017d565b84620001b7565b602080601f83116001811462000273575f84156200025b5750858301515b5f19600386901b1c1916600185901b17855562000200565b5f85815260208120601f198616915b82811015620002a35788860151825594840194600190910190840162000282565b5085821015620002c157878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b61082f80620002df5f395ff3fe608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b261019b565b6040516100bf919061068a565b60405180910390f35b6100db6100d63660046106f0565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610718565b610244565b604051601281526020016100bf565b6100db61012d3660046106f0565b610267565b6100ef610140366004610751565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db6101703660046106f0565b610297565b6100db6101833660046106f0565b610316565b6100ef610196366004610771565b610323565b6060600380546101aa906107a2565b80601f01602080910402602001604051908101604052809291908181526020018280546101d6906107a2565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107da565b61034d565b6060600480546101aa906107a2565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e2565b5f6020808352835180828501525f5b818110156106b557858101830151858201604001528201610699565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146106eb575f80fd5b919050565b5f8060408385031215610701575f80fd5b61070a836106d5565b946020939093013593505050565b5f805f6060848603121561072a575f80fd5b610733846106d5565b9250610741602085016106d5565b9150604084013590509250925092565b5f60208284031215610761575f80fd5b61076a826106d5565b9392505050565b5f8060408385031215610782575f80fd5b61078b836106d5565b9150610799602084016106d5565b90509250929050565b600181811c908216806107b657607f821691505b6020821081036107d457634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220c8a4efa71651392a759eaf68819ccbd8a03150976e28e1192c65cf32565452a964736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB0E CODESIZE SUB DUP1 PUSH3 0xB0E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x33 SWAP2 PUSH3 0x117 JUMP JUMPDEST PUSH1 0x3 PUSH3 0x41 DUP4 DUP3 PUSH3 0x209 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x50 DUP3 DUP3 PUSH3 0x209 JUMP JUMPDEST POP POP POP PUSH3 0x2D1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9A JUMPI PUSH3 0x9A PUSH3 0x59 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xC5 JUMPI PUSH3 0xC5 PUSH3 0x59 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x104 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xE5 JUMP JUMPDEST PUSH0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x129 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x140 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH3 0x14E DUP7 DUP4 DUP8 ADD PUSH3 0x6D JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x164 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH3 0x173 DUP6 DUP3 DUP7 ADD PUSH3 0x6D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x192 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1B1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x204 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1DF JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x200 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1EB JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x225 JUMPI PUSH3 0x225 PUSH3 0x59 JUMP JUMPDEST PUSH3 0x23D DUP2 PUSH3 0x236 DUP5 SLOAD PUSH3 0x17D JUMP JUMPDEST DUP5 PUSH3 0x1B7 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x273 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x25B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x200 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2A3 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x282 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2C1 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x82F DUP1 PUSH3 0x2DF PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x718 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x751 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7A2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x7A2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7DA JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7A2 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6B5 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x699 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6EB JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x701 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x70A DUP4 PUSH2 0x6D5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x72A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x733 DUP5 PUSH2 0x6D5 JUMP JUMPDEST SWAP3 POP PUSH2 0x741 PUSH1 0x20 DUP6 ADD PUSH2 0x6D5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x761 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x76A DUP3 PUSH2 0x6D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x782 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x78B DUP4 PUSH2 0x6D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x799 PUSH1 0x20 DUP5 ADD PUSH2 0x6D5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7B6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7D4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 LOG4 0xEF 0xA7 AND MLOAD CODECOPY 0x2A PUSH22 0x9EAF68819CCBD8A03150976E28E1192C65CF32565452 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "1532:11312:2:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:5;:13;2054:5;2046;:13;:::i;:::-;-1:-1:-1;2069:7:2;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;1532:11312;;14:127:9;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:9;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:9;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:9:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:9;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:9;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:9;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:9;;;3992:26;3943:89;-1:-1:-1;;2747:1:9;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:9;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:9;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:9;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:9:o;:::-;1532:11312:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_806": {
									"entryPoint": null,
									"id": 806,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_741": {
									"entryPoint": 845,
									"id": 741,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_795": {
									"entryPoint": null,
									"id": 795,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_966": {
									"entryPoint": null,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_784": {
									"entryPoint": 1136,
									"id": 784,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_567": {
									"entryPoint": 1256,
									"id": 567,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_362": {
									"entryPoint": 803,
									"id": 362,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_387": {
									"entryPoint": 555,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_319": {
									"entryPoint": null,
									"id": 319,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_295": {
									"entryPoint": null,
									"id": 295,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_490": {
									"entryPoint": 663,
									"id": 490,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_449": {
									"entryPoint": 615,
									"id": 449,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_275": {
									"entryPoint": 411,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_285": {
									"entryPoint": 648,
									"id": 285,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_305": {
									"entryPoint": null,
									"id": 305,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_420": {
									"entryPoint": 580,
									"id": 420,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_344": {
									"entryPoint": 790,
									"id": 344,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2010,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5754:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:9",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:9"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:9",
																"statements": []
															},
															"src": "294:140:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:9"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:9",
														"type": ""
													}
												],
												"src": "14:548:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:9"
															},
															"nodeType": "YulIf",
															"src": "664:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:9",
														"type": ""
													}
												],
												"src": "567:173:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:9"
															},
															"nodeType": "YulIf",
															"src": "842:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:9",
														"type": ""
													}
												],
												"src": "745:254:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:9",
														"type": ""
													}
												],
												"src": "1004:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:9",
														"type": ""
													}
												],
												"src": "1196:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:9"
															},
															"nodeType": "YulIf",
															"src": "1492:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:9",
														"type": ""
													}
												],
												"src": "1378:328:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:9",
														"type": ""
													}
												],
												"src": "1711:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:9"
															},
															"nodeType": "YulIf",
															"src": "1980:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:9",
														"type": ""
													}
												],
												"src": "1900:186:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:173:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2224:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:32:9"
															},
															"nodeType": "YulIf",
															"src": "2188:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2297:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2136:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2147:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2159:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2167:6:9",
														"type": ""
													}
												],
												"src": "2091:260:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2529:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2531:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:26:9"
															},
															"nodeType": "YulIf",
															"src": "2499:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2619:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:38:9"
															},
															"nodeType": "YulIf",
															"src": "2569:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2391:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2400:6:9",
														"type": ""
													}
												],
												"src": "2356:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2789:174:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2799:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2810:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2813:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2806:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2799:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2846:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2867:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2874:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2879:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2870:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2870:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2860:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2860:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2914:4:9",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2904:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2904:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2904:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2939:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2942:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2932:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2932:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2830:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2827:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:10:9"
															},
															"nodeType": "YulIf",
															"src": "2824:133:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2772:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2775:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2781:3:9",
														"type": ""
													}
												],
												"src": "2741:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3142:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3152:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3152:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3193:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3204:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3209:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3182:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3243:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3228:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3228:18:9"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3248:34:9",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3221:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3221:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3303:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3314:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:18:9"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3319:7:9",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3292:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3336:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3359:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3344:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3336:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3119:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3133:4:9",
														"type": ""
													}
												],
												"src": "2968:401:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:226:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3565:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3558:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3558:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3599:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3610:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3595:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3615:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3588:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3588:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3638:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3649:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3634:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3634:18:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3654:34:9",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3627:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3705:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3705:18:9"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3725:6:9",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3698:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3698:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3698:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3741:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3753:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3764:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3741:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3525:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3539:4:9",
														"type": ""
													}
												],
												"src": "3374:400:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3953:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3970:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3963:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3963:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4000:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4020:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3993:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4043:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4054:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4039:18:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4059:34:9",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4032:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4032:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4114:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4125:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4110:18:9"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4130:4:9",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4103:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4144:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4156:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4167:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4152:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4152:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3944:4:9",
														"type": ""
													}
												],
												"src": "3779:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4356:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4373:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4366:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4366:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4403:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4396:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:9"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4462:31:9",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:59:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:59:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4503:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4515:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4526:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4511:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4503:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4333:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4347:4:9",
														"type": ""
													}
												],
												"src": "4182:353:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4714:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4731:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4724:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4765:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4776:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4761:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4815:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4800:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4820:34:9",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4793:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4793:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4875:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4886:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4871:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4871:18:9"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4891:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4864:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4864:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4908:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4920:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4931:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4916:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4908:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4691:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4705:4:9",
														"type": ""
													}
												],
												"src": "4540:401:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:225:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5130:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5171:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5182:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5167:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5160:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5160:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5160:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5210:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5221:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5206:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5226:34:9",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5199:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5199:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:9"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5297:5:9",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5270:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5312:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5324:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5335:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5320:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5320:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5312:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5097:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5111:4:9",
														"type": ""
													}
												],
												"src": "4946:399:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5524:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5534:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5575:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5586:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5571:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5571:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5564:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5614:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5625:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5630:34:9",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5603:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5603:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5685:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5696:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5681:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5681:18:9"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5701:8:9",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5674:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5719:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5731:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5742:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5727:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5719:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5501:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5515:4:9",
														"type": ""
													}
												],
												"src": "5350:402:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f80fd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f80fd5b6100b261019b565b6040516100bf919061068a565b60405180910390f35b6100db6100d63660046106f0565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b366004610718565b610244565b604051601281526020016100bf565b6100db61012d3660046106f0565b610267565b6100ef610140366004610751565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db6101703660046106f0565b610297565b6100db6101833660046106f0565b610316565b6100ef610196366004610771565b610323565b6060600380546101aa906107a2565b80601f01602080910402602001604051908101604052809291908181526020018280546101d6906107a2565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107da565b61034d565b6060600480546101aa906107a2565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104e2565b5f6020808352835180828501525f5b818110156106b557858101830151858201604001528201610699565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b03811681146106eb575f80fd5b919050565b5f8060408385031215610701575f80fd5b61070a836106d5565b946020939093013593505050565b5f805f6060848603121561072a575f80fd5b610733846106d5565b9250610741602085016106d5565b9150604084013590509250925092565b5f60208284031215610761575f80fd5b61076a826106d5565b9392505050565b5f8060408385031215610782575f80fd5b61078b836106d5565b9150610799602084016106d5565b90509250929050565b600181811c908216806107b657607f821691505b6020821081036107d457634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea2646970667358221220c8a4efa71651392a759eaf68819ccbd8a03150976e28e1192c65cf32565452a964736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x68A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x718 JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x751 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x6F0 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x771 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7A2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x7A2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7DA JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7A2 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6B5 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x699 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6EB JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x701 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x70A DUP4 PUSH2 0x6D5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x72A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x733 DUP5 PUSH2 0x6D5 JUMP JUMPDEST SWAP3 POP PUSH2 0x741 PUSH1 0x20 DUP6 ADD PUSH2 0x6D5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x761 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x76A DUP3 PUSH2 0x6D5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x782 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x78B DUP4 PUSH2 0x6D5 JUMP JUMPDEST SWAP2 POP PUSH2 0x799 PUSH1 0x20 DUP5 ADD PUSH2 0x6D5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7B6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7D4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 LOG4 0xEF 0xA7 AND MLOAD CODECOPY 0x2A PUSH22 0x9EAF68819CCBD8A03150976E28E1192C65CF32565452 0xA9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "1532:11312:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:9;;1162:22;1144:41;;1132:2;1117:18;4444:197:2;1004:187:9;3255:106:2;3342:12;;3255:106;;;1342:25:9;;;1330:2;1315:18;3255:106:2;1196:177:9;5203:256:2;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1853:36:9;;1841:2;1826:18;3104:91:2;1711:184:9;5854:234:2;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:2;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:6;4581:32:2;719:10:6;4597:7:2;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:6;5356:38:2;5372:4;719:10:6;5387:6:2;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:2;;5203:256;-1:-1:-1;;;;5203:256:2:o;5854:234::-;5942:4;719:10:6;5996:64:2;719:10:6;6012:7:2;6049:10;6021:25;719:10:6;6012:7:2;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:6;6668:4:2;6749:25;719:10:6;6766:7:2;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:2;;3170:2:9;6784:85:2;;;3152:21:9;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:9;;;3292:35;3344:19;;6784:85:2;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:6;3873:28:2;719:10:6;3890:2:2;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:2;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:2;;10550:68;;;;-1:-1:-1;;;10550:68:2;;3576:2:9;10550:68:2;;;3558:21:9;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:9;;;3698:34;3749:19;;10550:68:2;3374:400:9;10550:68:2;-1:-1:-1;;;;;10636:21:2;;10628:68;;;;-1:-1:-1;;;10628:68:2;;3981:2:9;10628:68:2;;;3963:21:9;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:9;;;4103:32;4152:19;;10628:68:2;3779:398:9;10628:68:2;-1:-1:-1;;;;;10707:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:9;;;10758:32:2;;1315:18:9;10758:32:2;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:2;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:2;;4384:2:9;11297:68:2;;;4366:21:9;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11297:68:2;4182:353:9;11297:68:2;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:2;;7544:68;;;;-1:-1:-1;;;7544:68:2;;4742:2:9;7544:68:2;;;4724:21:9;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:9;;;4864:35;4916:19;;7544:68:2;4540:401:9;7544:68:2;-1:-1:-1;;;;;7630:16:2;;7622:64;;;;-1:-1:-1;;;7622:64:2;;5148:2:9;7622:64:2;;;5130:21:9;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:9;;;5270:33;5320:19;;7622:64:2;4946:399:9;7622:64:2;-1:-1:-1;;;;;7768:15:2;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:2;;5552:2:9;7793:72:2;;;5534:21:9;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:9;;;5674:36;5727:19;;7793:72:2;5350:402:9;7793:72:2;-1:-1:-1;;;;;7899:15:2;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:9;;;8114:13:2;;8163:26;;1315:18:9;8163:26:2;;;;;;;8200:37;12073:91;14:548:9;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:9;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:9:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:9:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "419000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24624",
								"balanceOf(address)": "2559",
								"decimals()": "265",
								"decreaseAllowance(address,uint256)": "27011",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "51133",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1980,
									"end": 2093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2054,
									"end": 2059,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2069,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 9,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 9,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c8a4efa71651392a759eaf68819ccbd8a03150976e28e1192c65cf32565452a964736f6c63430008140033",
									".code": [
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3419,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4581,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5356,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5404,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6021,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6021,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5996,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2450,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6749,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3173,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3182,
											"end": 3212,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3221,
											"end": 3283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3327,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 6903,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3873,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3558,
											"end": 3579,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3654,
											"end": 3688,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3627,
											"end": 3689,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 3732,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3374,
											"end": 3774,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3981,
											"end": 3983,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3963,
											"end": 3984,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3993,
											"end": 4023,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4059,
											"end": 4093,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3779,
											"end": 4177,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 11205,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4384,
											"end": 4386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4387,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4396,
											"end": 4426,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4462,
											"end": 4493,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4435,
											"end": 4494,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4182,
											"end": 4535,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 11407,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4742,
											"end": 4744,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4724,
											"end": 4745,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4820,
											"end": 4854,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4793,
											"end": 4855,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4864,
											"end": 4899,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4540,
											"end": 4941,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5130,
											"end": 5151,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5160,
											"end": 5190,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5226,
											"end": 5260,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5261,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5270,
											"end": 5303,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4946,
											"end": 5345,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5534,
											"end": 5555,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5564,
											"end": 5594,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5630,
											"end": 5664,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5350,
											"end": 5752,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2879,
											"end": 2889,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 2874,
											"end": 2877,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2870,
											"end": 2890,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2891,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2919,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2942,
											"end": 2946,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2947,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"DEX.sol",
								"MEME.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 236,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 242,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 244,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 246,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 236,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 242,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 244,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 246,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"DEX.sol": {
				"DEX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "Meme_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "Buy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "Meme_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "Sell",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "Meme_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "Stack",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "Meme_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "UnStack",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "meme_amount",
									"type": "uint256"
								}
							],
							"name": "buy",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "getETHPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "meme_amount",
									"type": "uint256"
								}
							],
							"name": "getMemePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStacks",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "meme_amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "eth_amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "time",
											"type": "uint256"
										}
									],
									"internalType": "struct DEX.Stack_Struct[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "sell",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "meme_amount",
									"type": "uint256"
								}
							],
							"name": "stack",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stackingRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "unstack",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DEX.sol\":243:7791  contract DEX is Pausable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"DEX.sol\":1010:1015  10e18 */\n  0x8ac7230489e80000\n    /* \"DEX.sol\":981:1015  uint256 internal precision = 10e18 */\n  0x08\n  sstore\n    /* \"DEX.sol\":1067:1069  10 */\n  0x0a\n    /* \"DEX.sol\":1054:1063  precision */\n  sload(0x08)\n    /* \"DEX.sol\":1050:1051  3 */\n  0x03\n    /* \"DEX.sol\":1050:1063  3 * precision */\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"DEX.sol\":1049:1069  (3 * precision) / 10 */\n  tag_3\n  swap2\n  swap1\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"DEX.sol\":1022:1069  uint256 internal taxRate = (3 * precision) / 10 */\n  0x09\n  sstore\n    /* \"DEX.sol\":1076:1175  constructor(address addr) {... */\n  callvalue\n  dup1\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_6\n  swap2\n  tag_7\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_13\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_13:\n    /* \"DEX.sol\":1112:1116  meme */\n  0x01\n    /* \"DEX.sol\":1112:1129  meme = MEME(addr) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"DEX.sol\":243:7791  contract DEX is Pausable, Ownable {... */\n  jump(tag_21)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  0x0100\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup2\n  dup2\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  dup6\n  and\n  or\n  dup6\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  swap4\n  div\n  swap2\n  swap1\n  swap2\n  and\n  swap3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  swap1\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:279   */\ntag_2:\n    /* \"#utility.yul\":87:96   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":118:127   */\n  dup2\n  iszero\n    /* \"#utility.yul\":135:150   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":129:151   */\n  dup5\n  eq\n    /* \"#utility.yul\":115:152   */\n  or\n    /* \"#utility.yul\":105:273   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":195:205   */\n  0x4e487b71\n    /* \"#utility.yul\":190:193   */\n  0xe0\n    /* \"#utility.yul\":186:206   */\n  shl\n    /* \"#utility.yul\":183:184   */\n  0x00\n    /* \"#utility.yul\":176:207   */\n  mstore\n    /* \"#utility.yul\":230:234   */\n  0x11\n    /* \"#utility.yul\":227:228   */\n  0x04\n    /* \"#utility.yul\":220:235   */\n  mstore\n    /* \"#utility.yul\":258:262   */\n  0x24\n    /* \"#utility.yul\":255:256   */\n  0x00\n    /* \"#utility.yul\":248:263   */\n  revert\n    /* \"#utility.yul\":105:273   */\ntag_23:\n    /* \"#utility.yul\":14:279   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":284:501   */\ntag_4:\n    /* \"#utility.yul\":324:325   */\n  0x00\n    /* \"#utility.yul\":350:351   */\n  dup3\n    /* \"#utility.yul\":340:472   */\n  tag_25\n  jumpi\n    /* \"#utility.yul\":394:404   */\n  0x4e487b71\n    /* \"#utility.yul\":389:392   */\n  0xe0\n    /* \"#utility.yul\":385:405   */\n  shl\n    /* \"#utility.yul\":382:383   */\n  0x00\n    /* \"#utility.yul\":375:406   */\n  mstore\n    /* \"#utility.yul\":429:433   */\n  0x12\n    /* \"#utility.yul\":426:427   */\n  0x04\n    /* \"#utility.yul\":419:434   */\n  mstore\n    /* \"#utility.yul\":457:461   */\n  0x24\n    /* \"#utility.yul\":454:455   */\n  0x00\n    /* \"#utility.yul\":447:462   */\n  revert\n    /* \"#utility.yul\":340:472   */\ntag_25:\n  pop\n    /* \"#utility.yul\":486:495   */\n  div\n  swap1\n    /* \"#utility.yul\":284:501   */\n  jump\t// out\n    /* \"#utility.yul\":506:796   */\ntag_7:\n    /* \"#utility.yul\":576:582   */\n  0x00\n    /* \"#utility.yul\":629:631   */\n  0x20\n    /* \"#utility.yul\":617:626   */\n  dup3\n    /* \"#utility.yul\":608:615   */\n  dup5\n    /* \"#utility.yul\":604:627   */\n  sub\n    /* \"#utility.yul\":600:632   */\n  slt\n    /* \"#utility.yul\":597:649   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":645:646   */\n  0x00\n    /* \"#utility.yul\":642:643   */\n  dup1\n    /* \"#utility.yul\":635:647   */\n  revert\n    /* \"#utility.yul\":597:649   */\ntag_27:\n    /* \"#utility.yul\":671:687   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":716:747   */\n  dup2\n  and\n    /* \"#utility.yul\":706:748   */\n  dup2\n  eq\n    /* \"#utility.yul\":696:766   */\n  tag_28\n  jumpi\n    /* \"#utility.yul\":762:763   */\n  0x00\n    /* \"#utility.yul\":759:760   */\n  dup1\n    /* \"#utility.yul\":752:764   */\n  revert\n    /* \"#utility.yul\":696:766   */\ntag_28:\n    /* \"#utility.yul\":785:790   */\n  swap4\n    /* \"#utility.yul\":506:796   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_21:\n    /* \"DEX.sol\":243:7791  contract DEX is Pausable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"DEX.sol\":243:7791  contract DEX is Pausable, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xdc9031c4\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xdc9031c4\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xe4849b32\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe8bca8b8\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x9c74f05d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd96a094a\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x5c572ed0\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x5c572ed0\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x1a753fed\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x200061df\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"DEX.sol\":5519:6172  function getETHPrice(uint256 eth_amount) public whenNotPaused view returns (uint256) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"DEX.sol\":5519:6172  function getETHPrice(uint256 eth_amount) public whenNotPaused view returns (uint256) {... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DEX.sol\":1842:1985  function unstack(uint256 index) public whenNotPaused{... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_28:\n      tag_29\n      jump\t// in\n    tag_27:\n      stop\n        /* \"DEX.sol\":1246:1309  function unpause() public onlyOwner {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_27\n      tag_32\n      jump\t// in\n        /* \"DEX.sol\":4864:5513  function getMemePrice(uint256 meme_amount) public whenNotPaused view returns (uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_20\n      tag_35\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      mload(0x40)\n        /* \"#utility.yul\":546:560   */\n      swap1\n      iszero\n        /* \"#utility.yul\":539:561   */\n      iszero\n        /* \"#utility.yul\":521:562   */\n      dup2\n      mstore\n        /* \"#utility.yul\":509:511   */\n      0x20\n        /* \"#utility.yul\":494:512   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      tag_24\n        /* \"#utility.yul\":381:568   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      tag_27\n      tag_45\n      jump\t// in\n        /* \"DEX.sol\":1181:1240  function pause() public onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_27\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":737:769   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":719:770   */\n      dup2\n      mstore\n        /* \"#utility.yul\":707:709   */\n      0x20\n        /* \"#utility.yul\":692:710   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":573:776   */\n      jump\n        /* \"DEX.sol\":871:898  uint256 public stackingRate */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_20\n      sload(0x04)\n      dup2\n      jump\n        /* \"DEX.sol\":6178:6756  function buy(uint256 meme_amount) public whenNotPaused payable {... */\n    tag_11:\n      tag_27\n      tag_59\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"DEX.sol\":1493:1836  function stack(uint256 meme_amount) public payable whenNotPaused{... */\n    tag_12:\n      tag_27\n      tag_62\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_62:\n      tag_63\n      jump\t// in\n        /* \"DEX.sol\":6762:7356  function sell(uint256 eth_amount) public whenNotPaused{... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_27\n      tag_66\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n        /* \"DEX.sol\":1379:1487  function getStacks() public view returns (Stack_Struct[] memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_27\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"DEX.sol\":5519:6172  function getETHPrice(uint256 eth_amount) public whenNotPaused view returns (uint256) {... */\n    tag_23:\n        /* \"DEX.sol\":5595:5602  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_79\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_80\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_79:\n        /* \"DEX.sol\":5627:5628  0 */\n      0x00\n        /* \"DEX.sol\":5622:5624  _k */\n      sload(0x05)\n        /* \"DEX.sol\":5622:5628  _k > 0 */\n      gt\n        /* \"DEX.sol\":5614:5653  require(_k > 0, \"Not enough liquidity\") */\n      tag_82\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2130:2132   */\n      0x20\n        /* \"DEX.sol\":5614:5653  require(_k > 0, \"Not enough liquidity\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2112:2133   */\n      mstore\n        /* \"#utility.yul\":2169:2171   */\n      0x14\n        /* \"#utility.yul\":2149:2167   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2142:2172   */\n      mstore\n      shl(0x60, 0x4e6f7420656e6f756768206c6971756964697479)\n        /* \"#utility.yul\":2188:2206   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2181:2231   */\n      mstore\n        /* \"#utility.yul\":2248:2266   */\n      0x64\n      add\n        /* \"DEX.sol\":5614:5653  require(_k > 0, \"Not enough liquidity\") */\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_82:\n        /* \"DEX.sol\":5663:5673  uint256 dx */\n      0x00\n        /* \"DEX.sol\":5687:5697  uint256 dy */\n      dup1\n        /* \"DEX.sol\":5715:5717  _x */\n      sload(0x06)\n        /* \"DEX.sol\":5721:5722  0 */\n      0x00\n        /* \"DEX.sol\":5715:5722  _x == 0 */\n      sub\n        /* \"DEX.sol\":5711:5829  if (_x == 0) {... */\n      tag_85\n      jumpi\n        /* \"DEX.sol\":5752:5762  eth_amount */\n      dup4\n        /* \"DEX.sol\":5748:5749  1 */\n      0x01\n        /* \"DEX.sol\":5743:5745  _k */\n      sload(0x05)\n        /* \"DEX.sol\":5743:5749  _k / 1 */\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n        /* \"DEX.sol\":5743:5762  _k / 1 - eth_amount */\n      tag_88\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"DEX.sol\":5738:5762  dy = _k / 1 - eth_amount */\n      swap1\n      pop\n        /* \"DEX.sol\":5711:5829  if (_x == 0) {... */\n      jump(tag_90)\n    tag_85:\n        /* \"DEX.sol\":5808:5818  eth_amount */\n      dup4\n        /* \"DEX.sol\":5803:5805  _x */\n      sload(0x06)\n        /* \"DEX.sol\":5798:5800  _k */\n      sload(0x05)\n        /* \"DEX.sol\":5798:5805  _k / _x */\n      tag_91\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_91:\n        /* \"DEX.sol\":5798:5818  _k / _x - eth_amount */\n      tag_92\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_92:\n        /* \"DEX.sol\":5793:5818  dy = _k / _x - eth_amount */\n      swap1\n      pop\n        /* \"DEX.sol\":5711:5829  if (_x == 0) {... */\n    tag_90:\n        /* \"DEX.sol\":5842:5844  dy */\n      dup1\n        /* \"DEX.sol\":5848:5849  0 */\n      0x00\n        /* \"DEX.sol\":5842:5849  dy == 0 */\n      sub\n        /* \"DEX.sol\":5838:5930  if (dy == 0) {... */\n      tag_93\n      jumpi\n        /* \"DEX.sol\":5875:5876  1 */\n      0x01\n        /* \"DEX.sol\":5870:5872  _k */\n      sload(0x05)\n        /* \"DEX.sol\":5870:5876  _k / 1 */\n      tag_94\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_94:\n        /* \"DEX.sol\":5865:5876  dx = _k / 1 */\n      swap2\n      pop\n        /* \"DEX.sol\":5838:5930  if (dy == 0) {... */\n      jump(tag_95)\n    tag_93:\n        /* \"DEX.sol\":5917:5919  dy */\n      dup1\n        /* \"DEX.sol\":5912:5914  _k */\n      sload(0x05)\n        /* \"DEX.sol\":5912:5919  _k / dy */\n      tag_96\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_96:\n        /* \"DEX.sol\":5907:5919  dx = _k / dy */\n      swap2\n      pop\n        /* \"DEX.sol\":5838:5930  if (dy == 0) {... */\n    tag_95:\n        /* \"DEX.sol\":5939:5969  uint256 meme_price_without_tax */\n      0x00\n        /* \"DEX.sol\":5977:5979  _x */\n      sload(0x06)\n        /* \"DEX.sol\":5972:5974  dx */\n      dup4\n        /* \"DEX.sol\":5972:5979  dx - _x */\n      tag_97\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_97:\n        /* \"DEX.sol\":5939:5979  uint256 meme_price_without_tax = dx - _x */\n      swap1\n      pop\n        /* \"DEX.sol\":5989:6005  uint256 meme_tax */\n      0x00\n        /* \"DEX.sol\":6045:6054  precision */\n      sload(0x08)\n        /* \"DEX.sol\":6034:6041  taxRate */\n      sload(0x09)\n        /* \"DEX.sol\":6009:6031  meme_price_without_tax */\n      dup4\n        /* \"DEX.sol\":6009:6041  meme_price_without_tax * taxRate */\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n        /* \"DEX.sol\":6008:6054  (meme_price_without_tax * taxRate) / precision */\n      tag_100\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_100:\n        /* \"DEX.sol\":5989:6054  uint256 meme_tax = (meme_price_without_tax * taxRate) / precision */\n      swap1\n      pop\n        /* \"DEX.sol\":6065:6092  uint256 meme_price_with_tax */\n      0x00\n        /* \"DEX.sol\":6095:6128  meme_price_without_tax + meme_tax */\n      tag_101\n        /* \"DEX.sol\":5989:6054  uint256 meme_tax = (meme_price_without_tax * taxRate) / precision */\n      dup3\n        /* \"DEX.sol\":6095:6117  meme_price_without_tax */\n      dup5\n        /* \"DEX.sol\":6095:6128  meme_price_without_tax + meme_tax */\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"DEX.sol\":6065:6128  uint256 meme_price_with_tax = meme_price_without_tax + meme_tax */\n      swap8\n        /* \"DEX.sol\":5519:6172  function getETHPrice(uint256 eth_amount) public whenNotPaused view returns (uint256) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DEX.sol\":1842:1985  function unstack(uint256 index) public whenNotPaused{... */\n    tag_29:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_104\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_80\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_104:\n        /* \"DEX.sol\":1963:1978  _unstack(index) */\n      tag_109\n        /* \"DEX.sol\":1972:1977  index */\n      dup2\n        /* \"DEX.sol\":1963:1971  _unstack */\n      tag_110\n        /* \"DEX.sol\":1963:1978  _unstack(index) */\n      jump\t// in\n    tag_109:\n        /* \"DEX.sol\":1842:1985  function unstack(uint256 index) public whenNotPaused{... */\n      pop\n      jump\t// out\n        /* \"DEX.sol\":1246:1309  function unpause() public onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_112:\n        /* \"DEX.sol\":1292:1302  _unpause() */\n      tag_115\n        /* \"DEX.sol\":1292:1300  _unpause */\n      tag_116\n        /* \"DEX.sol\":1292:1302  _unpause() */\n      jump\t// in\n    tag_115:\n        /* \"DEX.sol\":1246:1309  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"DEX.sol\":4864:5513  function getMemePrice(uint256 meme_amount) public whenNotPaused view returns (uint256) {... */\n    tag_36:\n        /* \"DEX.sol\":4942:4949  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_118\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_80\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_118:\n        /* \"DEX.sol\":4974:4975  0 */\n      0x00\n        /* \"DEX.sol\":4969:4971  _k */\n      sload(0x05)\n        /* \"DEX.sol\":4969:4975  _k > 0 */\n      gt\n        /* \"DEX.sol\":4961:5000  require(_k > 0, \"Not enough liquidity\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2130:2132   */\n      0x20\n        /* \"DEX.sol\":4961:5000  require(_k > 0, \"Not enough liquidity\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2112:2133   */\n      mstore\n        /* \"#utility.yul\":2169:2171   */\n      0x14\n        /* \"#utility.yul\":2149:2167   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2142:2172   */\n      mstore\n      shl(0x60, 0x4e6f7420656e6f756768206c6971756964697479)\n        /* \"#utility.yul\":2188:2206   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2181:2231   */\n      mstore\n        /* \"#utility.yul\":2248:2266   */\n      0x64\n      add\n        /* \"DEX.sol\":4961:5000  require(_k > 0, \"Not enough liquidity\") */\n      tag_83\n        /* \"#utility.yul\":1928:2272   */\n      jump\n        /* \"DEX.sol\":4961:5000  require(_k > 0, \"Not enough liquidity\") */\n    tag_120:\n        /* \"DEX.sol\":5010:5020  uint256 dx */\n      0x00\n        /* \"DEX.sol\":5034:5044  uint256 dy */\n      dup1\n        /* \"DEX.sol\":5062:5064  _y */\n      sload(0x07)\n        /* \"DEX.sol\":5068:5069  0 */\n      0x00\n        /* \"DEX.sol\":5062:5069  _y == 0 */\n      sub\n        /* \"DEX.sol\":5058:5178  if (_y == 0) {... */\n      tag_122\n      jumpi\n        /* \"DEX.sol\":5099:5110  meme_amount */\n      dup4\n        /* \"DEX.sol\":5095:5096  1 */\n      0x01\n        /* \"DEX.sol\":5090:5092  _k */\n      sload(0x05)\n        /* \"DEX.sol\":5090:5096  _k / 1 */\n      tag_123\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_123:\n        /* \"DEX.sol\":5090:5110  _k / 1 - meme_amount */\n      tag_124\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_124:\n        /* \"DEX.sol\":5085:5110  dx = _k / 1 - meme_amount */\n      swap2\n      pop\n        /* \"DEX.sol\":5058:5178  if (_y == 0) {... */\n      jump(tag_125)\n    tag_122:\n        /* \"DEX.sol\":5156:5167  meme_amount */\n      dup4\n        /* \"DEX.sol\":5151:5153  _y */\n      sload(0x07)\n        /* \"DEX.sol\":5146:5148  _k */\n      sload(0x05)\n        /* \"DEX.sol\":5146:5153  _k / _y */\n      tag_126\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_126:\n        /* \"DEX.sol\":5146:5167  _k / _y - meme_amount */\n      tag_127\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_127:\n        /* \"DEX.sol\":5141:5167  dx = _k / _y - meme_amount */\n      swap2\n      pop\n        /* \"DEX.sol\":5058:5178  if (_y == 0) {... */\n    tag_125:\n        /* \"DEX.sol\":5191:5193  dx */\n      dup2\n        /* \"DEX.sol\":5197:5198  0 */\n      0x00\n        /* \"DEX.sol\":5191:5198  dx == 0 */\n      sub\n        /* \"DEX.sol\":5187:5279  if (dx == 0) {... */\n      tag_128\n      jumpi\n        /* \"DEX.sol\":5224:5225  1 */\n      0x01\n        /* \"DEX.sol\":5219:5221  _k */\n      sload(0x05)\n        /* \"DEX.sol\":5219:5225  _k / 1 */\n      tag_129\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_129:\n        /* \"DEX.sol\":5214:5225  dy = _k / 1 */\n      swap1\n      pop\n        /* \"DEX.sol\":5187:5279  if (dx == 0) {... */\n      jump(tag_130)\n    tag_128:\n        /* \"DEX.sol\":5266:5268  dx */\n      dup2\n        /* \"DEX.sol\":5261:5263  _k */\n      sload(0x05)\n        /* \"DEX.sol\":5261:5268  _k / dx */\n      tag_131\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_131:\n        /* \"DEX.sol\":5256:5268  dy = _k / dx */\n      swap1\n      pop\n        /* \"DEX.sol\":5187:5279  if (dx == 0) {... */\n    tag_130:\n        /* \"DEX.sol\":5288:5317  uint256 eth_price_without_tax */\n      0x00\n        /* \"DEX.sol\":5325:5327  _y */\n      sload(0x07)\n        /* \"DEX.sol\":5320:5322  dy */\n      dup3\n        /* \"DEX.sol\":5320:5327  dy - _y */\n      tag_97\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_115\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"DEX.sol\":1181:1240  function pause() public onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_143\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_143:\n        /* \"DEX.sol\":1225:1233  _pause() */\n      tag_115\n        /* \"DEX.sol\":1225:1231  _pause */\n      tag_146\n        /* \"DEX.sol\":1225:1233  _pause() */\n      jump\t// in\n        /* \"DEX.sol\":6178:6756  function buy(uint256 meme_amount) public whenNotPaused payable {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_149\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_80\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_149:\n        /* \"DEX.sol\":6273:6274  0 */\n      0x00\n        /* \"DEX.sol\":6259:6270  meme_amount */\n      dup2\n        /* \"DEX.sol\":6259:6274  meme_amount > 0 */\n      gt\n        /* \"DEX.sol\":6251:6293  require(meme_amount > 0, \"Send Some Meme\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3624:3626   */\n      0x20\n        /* \"DEX.sol\":6251:6293  require(meme_amount > 0, \"Send Some Meme\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3606:3627   */\n      mstore\n        /* \"#utility.yul\":3663:3665   */\n      0x0e\n        /* \"#utility.yul\":3643:3661   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3636:3666   */\n      mstore\n      shl(0x90, 0x53656e6420536f6d65204d656d65)\n        /* \"#utility.yul\":3682:3700   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3675:3719   */\n      mstore\n        /* \"#utility.yul\":3736:3754   */\n      0x64\n      add\n        /* \"DEX.sol\":6251:6293  require(meme_amount > 0, \"Send Some Meme\") */\n      tag_83\n        /* \"#utility.yul\":3422:3760   */\n      jump\n        /* \"DEX.sol\":6251:6293  require(meme_amount > 0, \"Send Some Meme\") */\n    tag_151:\n        /* \"DEX.sol\":6303:6321  uint256 meme_price */\n      0x00\n        /* \"DEX.sol\":6324:6349  getMemePrice(meme_amount) */\n      tag_154\n        /* \"DEX.sol\":6337:6348  meme_amount */\n      dup3\n        /* \"DEX.sol\":6324:6336  getMemePrice */\n      tag_36\n        /* \"DEX.sol\":6324:6349  getMemePrice(meme_amount) */\n      jump\t// in\n    tag_154:\n        /* \"DEX.sol\":6303:6349  uint256 meme_price = getMemePrice(meme_amount) */\n      swap1\n      pop\n        /* \"DEX.sol\":6381:6390  msg.value */\n      callvalue\n        /* \"DEX.sol\":6367:6377  meme_price */\n      dup2\n        /* \"DEX.sol\":6367:6390  meme_price <= msg.value */\n      gt\n      iszero\n        /* \"DEX.sol\":6359:6408  require(meme_price <= msg.value, \"Send More ETH\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3967:3969   */\n      0x20\n        /* \"DEX.sol\":6359:6408  require(meme_price <= msg.value, \"Send More ETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3949:3970   */\n      mstore\n        /* \"#utility.yul\":4006:4008   */\n      0x0d\n        /* \"#utility.yul\":3986:4004   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3979:4009   */\n      mstore\n      shl(0x9b, 0x0a6cadcc8409adee4ca408aa89)\n        /* \"#utility.yul\":4025:4043   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4018:4061   */\n      mstore\n        /* \"#utility.yul\":4078:4096   */\n      0x64\n      add\n        /* \"DEX.sol\":6359:6408  require(meme_price <= msg.value, \"Send More ETH\") */\n      tag_83\n        /* \"#utility.yul\":3765:4102   */\n      jump\n        /* \"DEX.sol\":6359:6408  require(meme_price <= msg.value, \"Send More ETH\") */\n    tag_155:\n        /* \"DEX.sol\":6419:6423  meme */\n      sload(0x01)\n        /* \"DEX.sol\":6419:6457  meme.transfer(msg.sender, meme_amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"DEX.sol\":6433:6443  msg.sender */\n      caller\n        /* \"DEX.sol\":6419:6457  meme.transfer(msg.sender, meme_amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4281:4332   */\n      mstore\n        /* \"#utility.yul\":4348:4366   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4341:4375   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol\":6419:6423  meme */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DEX.sol\":6419:6432  meme.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4254:4272   */\n      0x44\n      add\n        /* \"DEX.sol\":6419:6457  meme.transfer(msg.sender, meme_amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      pop\n        /* \"DEX.sol\":6475:6485  msg.sender */\n      caller\n        /* \"DEX.sol\":6467:6519  payable(msg.sender).transfer(msg.value - meme_price) */\n      0x08fc\n        /* \"DEX.sol\":6496:6518  msg.value - meme_price */\n      tag_164\n        /* \"DEX.sol\":6508:6518  meme_price */\n      dup4\n        /* \"DEX.sol\":6496:6505  msg.value */\n      callvalue\n        /* \"DEX.sol\":6496:6518  msg.value - meme_price */\n      tag_89\n      jump\t// in\n    tag_164:\n        /* \"DEX.sol\":6467:6519  payable(msg.sender).transfer(msg.value - meme_price) */\n      mload(0x40)\n      dup2\n      iszero\n      swap1\n      swap3\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_166\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_166:\n      pop\n        /* \"DEX.sol\":6632:6641  precision */\n      sload(0x08)\n        /* \"DEX.sol\":6608:6615  taxRate */\n      sload(0x09)\n        /* \"DEX.sol\":6596:6615  precision + taxRate */\n      tag_167\n      swap1\n        /* \"DEX.sol\":6632:6641  precision */\n      dup3\n        /* \"DEX.sol\":6596:6615  precision + taxRate */\n      tag_102\n      jump\t// in\n    tag_167:\n        /* \"DEX.sol\":6581:6616  meme_amount * (precision + taxRate) */\n      tag_168\n      swap1\n        /* \"DEX.sol\":6581:6592  meme_amount */\n      dup5\n        /* \"DEX.sol\":6581:6616  meme_amount * (precision + taxRate) */\n      tag_99\n      jump\t// in\n    tag_168:\n        /* \"DEX.sol\":6580:6641  (meme_amount * (precision + taxRate)) /... */\n      tag_169\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_169:\n        /* \"DEX.sol\":6530:6538  dailyTax */\n      0x03\n        /* \"DEX.sol\":6530:6564  dailyTax[block.timestamp / 1 days] */\n      0x00\n        /* \"DEX.sol\":6539:6563  block.timestamp / 1 days */\n      tag_170\n        /* \"DEX.sol\":6557:6563  1 days */\n      0x015180\n        /* \"DEX.sol\":6539:6554  block.timestamp */\n      timestamp\n        /* \"DEX.sol\":6539:6563  block.timestamp / 1 days */\n      tag_87\n      jump\t// in\n    tag_170:\n        /* \"DEX.sol\":6530:6564  dailyTax[block.timestamp / 1 days] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"DEX.sol\":6530:6641  dailyTax[block.timestamp / 1 days] +=... */\n      dup3\n      dup3\n      sload\n      tag_171\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_171:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DEX.sol\":6658:6669  meme_amount */\n      dup2\n        /* \"DEX.sol\":6652:6654  _x */\n      0x06\n      0x00\n        /* \"DEX.sol\":6652:6669  _x -= meme_amount */\n      dup3\n      dup3\n      sload\n      tag_172\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_172:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DEX.sol\":6690:6692  _x */\n      sload(0x06)\n        /* \"DEX.sol\":6685:6687  _k */\n      sload(0x05)\n        /* \"DEX.sol\":6685:6692  _k / _x */\n      tag_173\n      swap2\n        /* \"DEX.sol\":6690:6692  _x */\n      swap1\n        /* \"DEX.sol\":6685:6692  _k / _x */\n      tag_87\n      jump\t// in\n    tag_173:\n        /* \"DEX.sol\":6679:6681  _y */\n      0x07\n        /* \"DEX.sol\":6679:6693  _y = (_k / _x) */\n      sstore\n        /* \"DEX.sol\":6709:6749  Buy(msg.sender, meme_amount, meme_price) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4842:4867   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":4898:4900   */\n      0x20\n        /* \"#utility.yul\":4883:4901   */\n      dup2\n      add\n        /* \"#utility.yul\":4876:4910   */\n      dup4\n      swap1\n      mstore\n        /* \"DEX.sol\":6713:6723  msg.sender */\n      caller\n      swap2\n        /* \"DEX.sol\":6709:6749  Buy(msg.sender, meme_amount, meme_price) */\n      0x1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed\n      swap2\n        /* \"#utility.yul\":4815:4833   */\n      add\n        /* \"DEX.sol\":6709:6749  Buy(msg.sender, meme_amount, meme_price) */\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"DEX.sol\":6241:6756  {... */\n      pop\n        /* \"DEX.sol\":6178:6756  function buy(uint256 meme_amount) public whenNotPaused payable {... */\n      pop\n      jump\t// out\n        /* \"DEX.sol\":1493:1836  function stack(uint256 meme_amount) public payable whenNotPaused{... */\n    tag_63:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_177\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_80\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_177:\n        /* \"DEX.sol\":1589:1590  0 */\n      0x00\n        /* \"DEX.sol\":1575:1586  meme_amount */\n      dup2\n        /* \"DEX.sol\":1575:1590  meme_amount > 0 */\n      gt\n        /* \"DEX.sol\":1567:1609  require(meme_amount > 0, \"Send more MEME\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5123:5125   */\n      0x20\n        /* \"DEX.sol\":1567:1609  require(meme_amount > 0, \"Send more MEME\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5105:5126   */\n      mstore\n        /* \"#utility.yul\":5162:5164   */\n      0x0e\n        /* \"#utility.yul\":5142:5160   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5135:5165   */\n      mstore\n      shl(0x90, 0x53656e64206d6f7265204d454d45)\n        /* \"#utility.yul\":5181:5199   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5174:5218   */\n      mstore\n        /* \"#utility.yul\":5235:5253   */\n      0x64\n      add\n        /* \"DEX.sol\":1567:1609  require(meme_amount > 0, \"Send more MEME\") */\n      tag_83\n        /* \"#utility.yul\":4921:5259   */\n      jump\n        /* \"DEX.sol\":1567:1609  require(meme_amount > 0, \"Send more MEME\") */\n    tag_179:\n        /* \"DEX.sol\":1639:1640  0 */\n      0x00\n        /* \"DEX.sol\":1627:1636  msg.value */\n      callvalue\n        /* \"DEX.sol\":1627:1640  msg.value > 0 */\n      gt\n        /* \"DEX.sol\":1619:1658  require(msg.value > 0, \"Send more ETH\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5466:5468   */\n      0x20\n        /* \"DEX.sol\":1619:1658  require(msg.value > 0, \"Send more ETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5448:5469   */\n      mstore\n        /* \"#utility.yul\":5505:5507   */\n      0x0d\n        /* \"#utility.yul\":5485:5503   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5478:5508   */\n      mstore\n      shl(0x9b, 0x0a6cadcc840dadee4ca408aa89)\n        /* \"#utility.yul\":5524:5542   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5517:5560   */\n      mstore\n        /* \"#utility.yul\":5577:5595   */\n      0x64\n      add\n        /* \"DEX.sol\":1619:1658  require(msg.value > 0, \"Send more ETH\") */\n      tag_83\n        /* \"#utility.yul\":5264:5601   */\n      jump\n        /* \"DEX.sol\":1619:1658  require(msg.value > 0, \"Send more ETH\") */\n    tag_182:\n        /* \"DEX.sol\":1731:1742  meme_amount */\n      dup1\n        /* \"DEX.sol\":1718:1727  precision */\n      sload(0x08)\n        /* \"DEX.sol\":1706:1715  msg.value */\n      callvalue\n        /* \"DEX.sol\":1706:1727  msg.value * precision */\n      tag_185\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_185:\n        /* \"DEX.sol\":1705:1742  (msg.value * precision) / meme_amount */\n      tag_186\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_186:\n        /* \"DEX.sol\":1689:1701  stackingRate */\n      sload(0x04)\n        /* \"DEX.sol\":1689:1742  stackingRate <= (msg.value * precision) / meme_amount */\n      gt\n      iszero\n        /* \"DEX.sol\":1668:1789  require(... */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5808:5810   */\n      0x20\n        /* \"DEX.sol\":1668:1789  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5790:5811   */\n      mstore\n        /* \"#utility.yul\":5847:5849   */\n      0x15\n        /* \"#utility.yul\":5827:5845   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5820:5850   */\n      mstore\n      shl(0x5a, 0x14dd1858dada5b99c814985d19481b9bdd081b595d)\n        /* \"#utility.yul\":5866:5884   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5859:5910   */\n      mstore\n        /* \"#utility.yul\":5927:5945   */\n      0x64\n      add\n        /* \"DEX.sol\":1668:1789  require(... */\n      tag_83\n        /* \"#utility.yul\":5606:5951   */\n      jump\n        /* \"DEX.sol\":1668:1789  require(... */\n    tag_187:\n        /* \"DEX.sol\":1799:1829  _stack(meme_amount, msg.value) */\n      tag_109\n        /* \"DEX.sol\":1806:1817  meme_amount */\n      dup2\n        /* \"DEX.sol\":1819:1828  msg.value */\n      callvalue\n        /* \"DEX.sol\":1799:1805  _stack */\n      tag_191\n        /* \"DEX.sol\":1799:1829  _stack(meme_amount, msg.value) */\n      jump\t// in\n        /* \"DEX.sol\":6762:7356  function sell(uint256 eth_amount) public whenNotPaused{... */\n    tag_67:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_193\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_80\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_193:\n        /* \"DEX.sol\":6847:6848  0 */\n      0x00\n        /* \"DEX.sol\":6834:6844  eth_amount */\n      dup2\n        /* \"DEX.sol\":6834:6848  eth_amount > 0 */\n      gt\n        /* \"DEX.sol\":6826:6866  require(eth_amount > 0, \"Send Some ETH\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6158:6160   */\n      0x20\n        /* \"DEX.sol\":6826:6866  require(eth_amount > 0, \"Send Some ETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6140:6161   */\n      mstore\n        /* \"#utility.yul\":6197:6199   */\n      0x0d\n        /* \"#utility.yul\":6177:6195   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6170:6200   */\n      mstore\n      shl(0x9b, 0x0a6cadcc840a6dedaca408aa89)\n        /* \"#utility.yul\":6216:6234   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6209:6252   */\n      mstore\n        /* \"#utility.yul\":6269:6287   */\n      0x64\n      add\n        /* \"DEX.sol\":6826:6866  require(eth_amount > 0, \"Send Some ETH\") */\n      tag_83\n        /* \"#utility.yul\":5956:6293   */\n      jump\n        /* \"DEX.sol\":6826:6866  require(eth_amount > 0, \"Send Some ETH\") */\n    tag_195:\n        /* \"DEX.sol\":6876:6893  uint256 eth_price */\n      0x00\n        /* \"DEX.sol\":6896:6919  getETHPrice(eth_amount) */\n      tag_198\n        /* \"DEX.sol\":6908:6918  eth_amount */\n      dup3\n        /* \"DEX.sol\":6896:6907  getETHPrice */\n      tag_23\n        /* \"DEX.sol\":6896:6919  getETHPrice(eth_amount) */\n      jump\t// in\n    tag_198:\n        /* \"DEX.sol\":6951:6955  meme */\n      sload(0x01)\n        /* \"DEX.sol\":6951:6977  meme.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"DEX.sol\":6966:6976  msg.sender */\n      caller\n        /* \"DEX.sol\":6951:6977  meme.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":719:770   */\n      mstore\n        /* \"DEX.sol\":6876:6919  uint256 eth_price = getETHPrice(eth_amount) */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol\":6951:6955  meme */\n      and\n      swap1\n        /* \"DEX.sol\":6951:6965  meme.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":692:710   */\n      0x24\n      add\n        /* \"DEX.sol\":6951:6977  meme.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_201:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_202\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"DEX.sol\":6938:6947  eth_price */\n      dup2\n        /* \"DEX.sol\":6938:6977  eth_price <= meme.balanceOf(msg.sender) */\n      gt\n      iszero\n        /* \"DEX.sol\":6930:7008  require(eth_price <= meme.balanceOf(msg.sender), \"You don't have enough meme\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6689:6691   */\n      0x20\n        /* \"DEX.sol\":6930:7008  require(eth_price <= meme.balanceOf(msg.sender), \"You don't have enough meme\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6671:6692   */\n      mstore\n        /* \"#utility.yul\":6728:6730   */\n      0x1a\n        /* \"#utility.yul\":6708:6726   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6701:6731   */\n      mstore\n        /* \"#utility.yul\":6767:6795   */\n      0x596f7520646f6e2774206861766520656e6f756768206d656d65000000000000\n        /* \"#utility.yul\":6747:6765   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6740:6796   */\n      mstore\n        /* \"#utility.yul\":6813:6831   */\n      0x64\n      add\n        /* \"DEX.sol\":6930:7008  require(eth_price <= meme.balanceOf(msg.sender), \"You don't have enough meme\") */\n      tag_83\n        /* \"#utility.yul\":6487:6837   */\n      jump\n        /* \"DEX.sol\":6930:7008  require(eth_price <= meme.balanceOf(msg.sender), \"You don't have enough meme\") */\n    tag_204:\n        /* \"DEX.sol\":7018:7022  meme */\n      sload(0x01)\n        /* \"DEX.sol\":7018:7073  meme.transferFrom(msg.sender, address(this), eth_price) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"DEX.sol\":7036:7046  msg.sender */\n      caller\n        /* \"DEX.sol\":7018:7073  meme.transferFrom(msg.sender, address(this), eth_price) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7082:7116   */\n      mstore\n        /* \"DEX.sol\":7056:7060  this */\n      address\n        /* \"#utility.yul\":7132:7150   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7125:7168   */\n      mstore\n        /* \"#utility.yul\":7184:7202   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7177:7211   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol\":7018:7022  meme */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DEX.sol\":7018:7035  meme.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":7017:7035   */\n      0x64\n      add\n        /* \"DEX.sol\":7018:7073  meme.transferFrom(msg.sender, address(this), eth_price) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_210\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_210:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_211\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_211:\n      pop\n        /* \"DEX.sol\":7083:7123  payable(msg.sender).transfer(eth_amount) */\n      mload(0x40)\n        /* \"DEX.sol\":7091:7101  msg.sender */\n      caller\n      swap1\n        /* \"DEX.sol\":7083:7123  payable(msg.sender).transfer(eth_amount) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"DEX.sol\":7112:7122  eth_amount */\n      dup5\n      swap1\n        /* \"DEX.sol\":7083:7123  payable(msg.sender).transfer(eth_amount) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"DEX.sol\":7112:7122  eth_amount */\n      dup6\n        /* \"DEX.sol\":7091:7101  msg.sender */\n      dup9\n        /* \"DEX.sol\":7083:7123  payable(msg.sender).transfer(eth_amount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_213:\n      pop\n        /* \"DEX.sol\":7234:7243  precision */\n      sload(0x08)\n        /* \"DEX.sol\":7210:7217  taxRate */\n      sload(0x09)\n        /* \"DEX.sol\":7198:7217  precision + taxRate */\n      tag_214\n      swap1\n        /* \"DEX.sol\":7234:7243  precision */\n      dup3\n        /* \"DEX.sol\":7198:7217  precision + taxRate */\n      tag_102\n      jump\t// in\n    tag_214:\n        /* \"DEX.sol\":7185:7218  eth_price * (precision + taxRate) */\n      tag_215\n      swap1\n        /* \"DEX.sol\":7185:7194  eth_price */\n      dup4\n        /* \"DEX.sol\":7185:7218  eth_price * (precision + taxRate) */\n      tag_99\n      jump\t// in\n    tag_215:\n        /* \"DEX.sol\":7184:7243  (eth_price * (precision + taxRate)) /... */\n      tag_216\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_216:\n        /* \"DEX.sol\":7134:7142  dailyTax */\n      0x03\n        /* \"DEX.sol\":7134:7168  dailyTax[block.timestamp / 1 days] */\n      0x00\n        /* \"DEX.sol\":7143:7167  block.timestamp / 1 days */\n      tag_217\n        /* \"DEX.sol\":7161:7167  1 days */\n      0x015180\n        /* \"DEX.sol\":7143:7158  block.timestamp */\n      timestamp\n        /* \"DEX.sol\":7143:7167  block.timestamp / 1 days */\n      tag_87\n      jump\t// in\n    tag_217:\n        /* \"DEX.sol\":7134:7168  dailyTax[block.timestamp / 1 days] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"DEX.sol\":7134:7243  dailyTax[block.timestamp / 1 days] +=... */\n      dup3\n      dup3\n      sload\n      tag_218\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_218:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DEX.sol\":7260:7270  eth_amount */\n      dup2\n        /* \"DEX.sol\":7254:7256  _y */\n      0x07\n      0x00\n        /* \"DEX.sol\":7254:7270  _y -= eth_amount */\n      dup3\n      dup3\n      sload\n      tag_219\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_219:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DEX.sol\":7291:7293  _y */\n      sload(0x07)\n        /* \"DEX.sol\":7286:7288  _k */\n      sload(0x05)\n        /* \"DEX.sol\":7286:7293  _k / _y */\n      tag_220\n      swap2\n        /* \"DEX.sol\":7291:7293  _y */\n      swap1\n        /* \"DEX.sol\":7286:7293  _k / _y */\n      tag_87\n      jump\t// in\n    tag_220:\n        /* \"DEX.sol\":7280:7282  _x */\n      0x06\n        /* \"DEX.sol\":7280:7294  _x = (_k / _y) */\n      sstore\n        /* \"DEX.sol\":7310:7349  Sell(msg.sender, eth_price, eth_amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4842:4867   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":4898:4900   */\n      0x20\n        /* \"#utility.yul\":4883:4901   */\n      dup2\n      add\n        /* \"#utility.yul\":4876:4910   */\n      dup5\n      swap1\n      mstore\n        /* \"DEX.sol\":7315:7325  msg.sender */\n      caller\n      swap2\n        /* \"DEX.sol\":7310:7349  Sell(msg.sender, eth_price, eth_amount) */\n      0xed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a\n      swap2\n        /* \"#utility.yul\":4815:4833   */\n      add\n        /* \"DEX.sol\":7310:7349  Sell(msg.sender, eth_price, eth_amount) */\n      tag_174\n        /* \"#utility.yul\":4668:4916   */\n      jump\n        /* \"DEX.sol\":1379:1487  function getStacks() public view returns (Stack_Struct[] memory) {... */\n    tag_70:\n        /* \"DEX.sol\":1469:1479  msg.sender */\n      caller\n        /* \"DEX.sol\":1461:1480  Stacked[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol\":1461:1468  Stacked */\n      0x02\n        /* \"DEX.sol\":1461:1480  Stacked[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DEX.sol\":1454:1480  return Stacked[msg.sender] */\n      dup1\n      sload\n      dup3\n      mload\n      dup2\n      dup6\n      mul\n      dup2\n      add\n      dup6\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      dup4\n      mstore\n        /* \"DEX.sol\":1421:1442  Stack_Struct[] memory */\n      0x60\n      swap5\n        /* \"DEX.sol\":1454:1480  return Stacked[msg.sender] */\n      swap3\n      swap4\n        /* \"DEX.sol\":1461:1480  Stacked[msg.sender] */\n      swap2\n      swap3\n        /* \"DEX.sol\":1454:1480  return Stacked[msg.sender] */\n      swap1\n      swap2\n      dup5\n      add\n    tag_223:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_224\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_223)\n    tag_224:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"DEX.sol\":1379:1487  function getStacks() public view returns (Stack_Struct[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_227\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_227:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7424:7426   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7406:7427   */\n      mstore\n        /* \"#utility.yul\":7463:7465   */\n      0x26\n        /* \"#utility.yul\":7443:7461   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7436:7466   */\n      mstore\n        /* \"#utility.yul\":7502:7536   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":7482:7500   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7475:7537   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":7553:7571   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7546:7582   */\n      mstore\n        /* \"#utility.yul\":7599:7618   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_83\n        /* \"#utility.yul\":7222:7624   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_229:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7831:7833   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7813:7834   */\n      mstore\n        /* \"#utility.yul\":7870:7872   */\n      0x10\n        /* \"#utility.yul\":7850:7868   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7843:7873   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":7889:7907   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7882:7928   */\n      mstore\n        /* \"#utility.yul\":7945:7963   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_83\n        /* \"#utility.yul\":7629:7969   */\n      jump\n        /* \"DEX.sol\":2490:3504  function _unstack(uint256 index) internal {... */\n    tag_110:\n        /* \"DEX.sol\":2575:2585  msg.sender */\n      caller\n        /* \"DEX.sol\":2542:2564  Stack_Struct memory ss */\n      0x00\n        /* \"DEX.sol\":2567:2586  Stacked[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol\":2567:2574  Stacked */\n      0x02\n        /* \"DEX.sol\":2567:2586  Stacked[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DEX.sol\":2567:2593  Stacked[msg.sender][index] */\n      dup1\n      sload\n        /* \"DEX.sol\":2587:2592  index */\n      dup4\n      swap1\n        /* \"DEX.sol\":2567:2593  Stacked[msg.sender][index] */\n      dup2\n      lt\n      tag_240\n      jumpi\n      tag_240\n      tag_241\n      jump\t// in\n    tag_240:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"DEX.sol\":2542:2593  Stack_Struct memory ss = Stacked[msg.sender][index] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"DEX.sol\":2604:2615  uint256 tax */\n      0x00\n        /* \"DEX.sol\":2618:2634  _distributeTax() */\n      tag_243\n        /* \"DEX.sol\":2618:2632  _distributeTax */\n      tag_244\n        /* \"DEX.sol\":2618:2634  _distributeTax() */\n      jump\t// in\n    tag_243:\n        /* \"DEX.sol\":2670:2684  ss.meme_amount */\n      dup3\n      mload\n        /* \"DEX.sol\":2718:2731  ss.eth_amount */\n      0x20\n      dup5\n      add\n      mload\n        /* \"DEX.sol\":2604:2634  uint256 tax = _distributeTax() */\n      swap2\n      swap3\n      pop\n        /* \"DEX.sol\":2670:2684  ss.meme_amount */\n      swap1\n        /* \"DEX.sol\":2645:2667  uint256 meme_to_return */\n      0x00\n      swap1\n        /* \"DEX.sol\":2718:2737  ss.eth_amount + tax */\n      tag_245\n      swap1\n        /* \"DEX.sol\":2604:2634  uint256 tax = _distributeTax() */\n      dup5\n      swap1\n        /* \"DEX.sol\":2718:2737  ss.eth_amount + tax */\n      tag_102\n      jump\t// in\n    tag_245:\n        /* \"DEX.sol\":2769:2773  meme */\n      sload(0x01)\n        /* \"DEX.sol\":2769:2798  meme.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"DEX.sol\":2792:2796  this */\n      address\n        /* \"DEX.sol\":2769:2798  meme.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":719:770   */\n      mstore\n        /* \"DEX.sol\":2694:2737  uint256 eth_to_return = ss.eth_amount + tax */\n      swap2\n      swap3\n      pop\n        /* \"DEX.sol\":2802:2816  meme_to_return */\n      dup4\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol\":2769:2773  meme */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DEX.sol\":2769:2783  meme.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":692:710   */\n      0x24\n      add\n        /* \"DEX.sol\":2769:2798  meme.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_248\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_248:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_249\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_249:\n        /* \"DEX.sol\":2769:2816  meme.balanceOf(address(this)) >= meme_to_return */\n      lt\n      iszero\n        /* \"DEX.sol\":2748:2917  require(... */\n      tag_250\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8308:8310   */\n      0x20\n        /* \"DEX.sol\":2748:2917  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8290:8311   */\n      mstore\n        /* \"#utility.yul\":8347:8349   */\n      0x4b\n        /* \"#utility.yul\":8327:8345   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8320:8350   */\n      mstore\n        /* \"#utility.yul\":8386:8420   */\n      0x536f7272792043757272656e746c79207468697320636f6e747261637420646f\n        /* \"#utility.yul\":8366:8384   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8359:8421   */\n      mstore\n        /* \"#utility.yul\":8457:8491   */\n      0x65736e27742068617665204d656d6520746f2072657475726e2c20436865636b\n        /* \"#utility.yul\":8437:8455   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8430:8492   */\n      mstore\n      shl(0xa8, 0x206261636b20536f6f6e21)\n        /* \"#utility.yul\":8508:8527   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":8501:8543   */\n      mstore\n        /* \"#utility.yul\":8560:8579   */\n      0xa4\n      add\n        /* \"DEX.sol\":2748:2917  require(... */\n      tag_83\n        /* \"#utility.yul\":8106:8585   */\n      jump\n        /* \"DEX.sol\":2748:2917  require(... */\n    tag_250:\n        /* \"DEX.sol\":2973:2986  eth_to_return */\n      dup1\n        /* \"DEX.sol\":2948:2969  address(this).balance */\n      selfbalance\n        /* \"DEX.sol\":2948:2986  address(this).balance >= eth_to_return */\n      lt\n      iszero\n        /* \"DEX.sol\":2927:3086  require(... */\n      tag_253\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8792:8794   */\n      0x20\n        /* \"DEX.sol\":2927:3086  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8774:8795   */\n      mstore\n        /* \"#utility.yul\":8831:8833   */\n      0x4a\n        /* \"#utility.yul\":8811:8829   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8804:8834   */\n      mstore\n        /* \"#utility.yul\":8870:8904   */\n      0x536f7272792043757272656e746c79207468697320636f6e747261637420646f\n        /* \"#utility.yul\":8850:8868   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8843:8905   */\n      mstore\n        /* \"#utility.yul\":8941:8975   */\n      0x65736e277420686176652045746820746f2072657475726e2c20436865636b20\n        /* \"#utility.yul\":8921:8939   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8914:8976   */\n      mstore\n      shl(0xb0, 0x6261636b20536f6f6e21)\n        /* \"#utility.yul\":8992:9011   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":8985:9026   */\n      mstore\n        /* \"#utility.yul\":9043:9062   */\n      0xa4\n      add\n        /* \"DEX.sol\":2927:3086  require(... */\n      tag_83\n        /* \"#utility.yul\":8590:9068   */\n      jump\n        /* \"DEX.sol\":2927:3086  require(... */\n    tag_253:\n        /* \"DEX.sol\":3104:3118  meme_to_return */\n      dup2\n        /* \"DEX.sol\":3098:3100  _x */\n      0x06\n      0x00\n        /* \"DEX.sol\":3098:3118  _x -= meme_to_return */\n      dup3\n      dup3\n      sload\n      tag_256\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_256:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DEX.sol\":3134:3147  eth_to_return */\n      dup1\n        /* \"DEX.sol\":3128:3130  _y */\n      0x07\n      0x00\n        /* \"DEX.sol\":3128:3147  _y -= eth_to_return */\n      dup3\n      dup3\n      sload\n      tag_257\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_257:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DEX.sol\":3158:3162  meme */\n      sload(0x01)\n        /* \"DEX.sol\":3158:3199  meme.transfer(msg.sender, meme_to_return) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"DEX.sol\":3172:3182  msg.sender */\n      caller\n        /* \"DEX.sol\":3158:3199  meme.transfer(msg.sender, meme_to_return) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4281:4332   */\n      mstore\n        /* \"#utility.yul\":4348:4366   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4341:4375   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol\":3158:3162  meme */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DEX.sol\":3158:3171  meme.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4254:4272   */\n      0x44\n      add\n        /* \"DEX.sol\":3158:3199  meme.transfer(msg.sender, meme_to_return) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_260\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_260:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_261\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_261:\n      pop\n        /* \"DEX.sol\":3209:3252  payable(msg.sender).transfer(eth_to_return) */\n      mload(0x40)\n        /* \"DEX.sol\":3217:3227  msg.sender */\n      caller\n      swap1\n        /* \"DEX.sol\":3209:3252  payable(msg.sender).transfer(eth_to_return) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"DEX.sol\":3238:3251  eth_to_return */\n      dup4\n      swap1\n        /* \"DEX.sol\":3209:3252  payable(msg.sender).transfer(eth_to_return) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"DEX.sol\":3238:3251  eth_to_return */\n      dup6\n        /* \"DEX.sol\":3217:3227  msg.sender */\n      dup9\n        /* \"DEX.sol\":3209:3252  payable(msg.sender).transfer(eth_to_return) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_263\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_263:\n      pop\n        /* \"DEX.sol\":3267:3269  _x */\n      sload(0x06)\n        /* \"DEX.sol\":3273:3274  0 */\n      0x00\n        /* \"DEX.sol\":3267:3274  _x == 0 */\n      sub\n        /* \"DEX.sol\":3263:3384  if (_x == 0) {... */\n      tag_264\n      jumpi\n        /* \"DEX.sol\":3305:3306  0 */\n      0x00\n        /* \"DEX.sol\":3290:3302  stackingRate */\n      0x04\n        /* \"DEX.sol\":3290:3306  stackingRate = 0 */\n      sstore\n        /* \"DEX.sol\":3263:3384  if (_x == 0) {... */\n      jump(tag_265)\n    tag_264:\n        /* \"DEX.sol\":3371:3373  _x */\n      sload(0x06)\n        /* \"DEX.sol\":3358:3367  precision */\n      sload(0x08)\n        /* \"DEX.sol\":3353:3355  _y */\n      sload(0x07)\n        /* \"DEX.sol\":3353:3367  _y * precision */\n      tag_266\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_266:\n        /* \"DEX.sol\":3352:3373  (_y * precision) / _x */\n      tag_267\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_267:\n        /* \"DEX.sol\":3337:3349  stackingRate */\n      0x04\n        /* \"DEX.sol\":3337:3373  stackingRate = (_y * precision) / _x */\n      sstore\n        /* \"DEX.sol\":3263:3384  if (_x == 0) {... */\n    tag_265:\n        /* \"DEX.sol\":3394:3411  _removeArr(index) */\n      tag_268\n        /* \"DEX.sol\":3405:3410  index */\n      dup6\n        /* \"DEX.sol\":3394:3404  _removeArr */\n      tag_269\n        /* \"DEX.sol\":3394:3411  _removeArr(index) */\n      jump\t// in\n    tag_268:\n        /* \"DEX.sol\":3422:3432  _updateK() */\n      tag_270\n        /* \"DEX.sol\":3422:3430  _updateK */\n      tag_271\n        /* \"DEX.sol\":3422:3432  _updateK() */\n      jump\t// in\n    tag_270:\n        /* \"DEX.sol\":3447:3497  UnStack(msg.sender, meme_to_return, eth_to_return) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4842:4867   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":4898:4900   */\n      0x20\n        /* \"#utility.yul\":4883:4901   */\n      dup2\n      add\n        /* \"#utility.yul\":4876:4910   */\n      dup4\n      swap1\n      mstore\n        /* \"DEX.sol\":3455:3465  msg.sender */\n      caller\n      swap2\n        /* \"DEX.sol\":3447:3497  UnStack(msg.sender, meme_to_return, eth_to_return) */\n      0xbb564df1f5d4ebb97b073adcab505c7796a37035ac5d14f51269660939c39cf4\n      swap2\n        /* \"#utility.yul\":4815:4833   */\n      add\n        /* \"DEX.sol\":3447:3497  UnStack(msg.sender, meme_to_return, eth_to_return) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"DEX.sol\":2532:3504  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"DEX.sol\":2490:3504  function _unstack(uint256 index) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9275:9277   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9257:9278   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9294:9312   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9287:9317   */\n      mstore\n        /* \"#utility.yul\":9353:9387   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9333:9351   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9326:9388   */\n      mstore\n        /* \"#utility.yul\":9405:9423   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_83\n        /* \"#utility.yul\":9073:9429   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_281\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_282\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n    tag_284:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":737:769   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":719:770   */\n      dup2\n      mstore\n        /* \"#utility.yul\":707:709   */\n      0x20\n        /* \"#utility.yul\":692:710   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      0x0100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      dup6\n      and\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      swap4\n      div\n      swap2\n      swap1\n      swap2\n      and\n      swap3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_288\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_80\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_284\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"DEX.sol\":1991:2484  function _stack(uint256 meme_amount, uint256 eth_amount) internal {... */\n    tag_191:\n        /* \"DEX.sol\":2067:2071  meme */\n      sload(0x01)\n        /* \"DEX.sol\":2067:2124  meme.transferFrom(msg.sender, address(this), meme_amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"DEX.sol\":2085:2095  msg.sender */\n      caller\n        /* \"DEX.sol\":2067:2124  meme.transferFrom(msg.sender, address(this), meme_amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7082:7116   */\n      mstore\n        /* \"DEX.sol\":2105:2109  this */\n      address\n        /* \"#utility.yul\":7132:7150   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7125:7168   */\n      mstore\n        /* \"#utility.yul\":7184:7202   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":7177:7211   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol\":2067:2071  meme */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DEX.sol\":2067:2084  meme.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":7017:7035   */\n      0x64\n      add\n        /* \"DEX.sol\":2067:2124  meme.transferFrom(msg.sender, address(this), meme_amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_295\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_295:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_296\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_296:\n      pop\n        /* \"DEX.sol\":2140:2151  meme_amount */\n      dup2\n        /* \"DEX.sol\":2134:2136  _x */\n      0x06\n      0x00\n        /* \"DEX.sol\":2134:2151  _x += meme_amount */\n      dup3\n      dup3\n      sload\n      tag_297\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_297:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DEX.sol\":2167:2177  eth_amount */\n      dup1\n        /* \"DEX.sol\":2161:2163  _y */\n      0x07\n      0x00\n        /* \"DEX.sol\":2161:2177  _y += eth_amount */\n      dup3\n      dup3\n      sload\n      tag_298\n      swap2\n      swap1\n      tag_102\n      jump\t// in\n    tag_298:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DEX.sol\":2213:2313  Stack_Struct(... */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      dup4\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup5\n      dup2\n      mstore\n        /* \"DEX.sol\":2288:2303  block.timestamp */\n      timestamp\n        /* \"DEX.sol\":2213:2313  Stack_Struct(... */\n      dup4\n      dup6\n      add\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol\":2331:2341  msg.sender */\n      caller\n        /* \"DEX.sol\":2188:2210  Stack_Struct memory ss */\n      0x00\n        /* \"DEX.sol\":2323:2342  Stacked[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol\":2323:2330  Stacked */\n      0x02\n        /* \"DEX.sol\":2323:2342  Stacked[msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap6\n      dup2\n      keccak256\n        /* \"DEX.sol\":2323:2351  Stacked[msg.sender].push(ss) */\n      dup1\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup4\n      sstore\n      swap2\n      dup4\n      mstore\n      swap5\n      swap1\n      swap2\n      keccak256\n      dup6\n      mload\n      0x03\n      swap1\n      swap6\n      mul\n      add\n      swap4\n      dup5\n      sstore\n      swap2\n      mload\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      mload\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"DEX.sol\":2397:2399  _x */\n      sload(0x06)\n        /* \"DEX.sol\":2384:2393  precision */\n      sload(0x08)\n        /* \"DEX.sol\":2379:2381  _y */\n      sload(0x07)\n        /* \"DEX.sol\":2379:2393  _y * precision */\n      tag_300\n      swap2\n        /* \"DEX.sol\":2384:2393  precision */\n      swap1\n        /* \"DEX.sol\":2379:2393  _y * precision */\n      tag_99\n      jump\t// in\n    tag_300:\n        /* \"DEX.sol\":2378:2399  (_y * precision) / _x */\n      tag_301\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_301:\n        /* \"DEX.sol\":2362:2374  stackingRate */\n      0x04\n        /* \"DEX.sol\":2362:2400  stackingRate = ((_y * precision) / _x) */\n      sstore\n        /* \"DEX.sol\":2411:2421  _updateK() */\n      tag_302\n        /* \"DEX.sol\":2411:2419  _updateK */\n      tag_271\n        /* \"DEX.sol\":2411:2421  _updateK() */\n      jump\t// in\n    tag_302:\n        /* \"DEX.sol\":2436:2477  Stack(msg.sender, meme_amount, msg.value) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4842:4867   */\n      dup5\n      dup2\n      mstore\n        /* \"DEX.sol\":2467:2476  msg.value */\n      callvalue\n        /* \"#utility.yul\":4898:4900   */\n      0x20\n        /* \"#utility.yul\":4883:4901   */\n      dup3\n      add\n        /* \"#utility.yul\":4876:4910   */\n      mstore\n        /* \"DEX.sol\":2442:2452  msg.sender */\n      caller\n      swap2\n        /* \"DEX.sol\":2436:2477  Stack(msg.sender, meme_amount, msg.value) */\n      0x5caad8f5613b6f1d592fc8c69d8f0999453740f0806c754f20cc92f3d4b2b1b6\n      swap2\n        /* \"#utility.yul\":4815:4833   */\n      add\n        /* \"DEX.sol\":2436:2477  Stack(msg.sender, meme_amount, msg.value) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"DEX.sol\":2057:2484  {... */\n      pop\n        /* \"DEX.sol\":1991:2484  function _stack(uint256 meme_amount, uint256 eth_amount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DEX.sol\":3828:4858  function _distributeTax() internal view returns (uint256) {... */\n    tag_244:\n        /* \"DEX.sol\":3877:3884  uint256 */\n      0x00\n      dup1\n      dup1\n        /* \"DEX.sol\":3930:3938  dailyTax */\n      0x03\n        /* \"DEX.sol\":3877:3884  uint256 */\n      dup2\n        /* \"DEX.sol\":3939:3963  block.timestamp / 1 days */\n      tag_305\n        /* \"DEX.sol\":3957:3963  1 days */\n      0x015180\n        /* \"DEX.sol\":3939:3954  block.timestamp */\n      timestamp\n        /* \"DEX.sol\":3939:3963  block.timestamp / 1 days */\n      tag_87\n      jump\t// in\n    tag_305:\n        /* \"DEX.sol\":3930:3964  dailyTax[block.timestamp / 1 days] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DEX.sol\":3930:3968  dailyTax[block.timestamp / 1 days] > 0 */\n      gt\n        /* \"DEX.sol\":3926:4827  if (dailyTax[block.timestamp / 1 days] > 0) {... */\n      iszero\n      tag_306\n      jumpi\n        /* \"DEX.sol\":4024:4034  msg.sender */\n      caller\n        /* \"DEX.sol\":3984:4013  Stack_Struct[] storage stacks */\n      0x00\n        /* \"DEX.sol\":4016:4035  Stacked[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol\":4016:4023  Stacked */\n      0x02\n        /* \"DEX.sol\":4016:4035  Stacked[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DEX.sol\":4069:4082  stacks.length */\n      dup1\n      sload\n        /* \"DEX.sol\":4016:4035  Stacked[msg.sender] */\n      swap1\n      swap2\n        /* \"DEX.sol\":3984:4013  Stack_Struct[] storage stacks */\n      dup1\n        /* \"DEX.sol\":4136:4307  for (uint256 i = 0; i <= numStacks; i++) {... */\n    tag_307:\n        /* \"DEX.sol\":4161:4170  numStacks */\n      dup3\n        /* \"DEX.sol\":4156:4157  i */\n      dup2\n        /* \"DEX.sol\":4156:4170  i <= numStacks */\n      gt\n        /* \"DEX.sol\":4136:4307  for (uint256 i = 0; i <= numStacks; i++) {... */\n      tag_308\n      jumpi\n        /* \"DEX.sol\":4195:4217  Stack_Struct memory ss */\n      0x00\n        /* \"DEX.sol\":4220:4226  stacks */\n      dup5\n        /* \"DEX.sol\":4227:4228  i */\n      dup3\n        /* \"DEX.sol\":4220:4229  stacks[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_311\n      jumpi\n      tag_311\n      tag_241\n      jump\t// in\n    tag_311:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"DEX.sol\":4195:4229  Stack_Struct memory ss = stacks[i] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"DEX.sol\":4284:4286  ss */\n      dup1\n        /* \"DEX.sol\":4284:4291  ss.time */\n      0x40\n      add\n      mload\n        /* \"DEX.sol\":4266:4281  block.timestamp */\n      timestamp\n        /* \"DEX.sol\":4266:4291  block.timestamp - ss.time */\n      tag_313\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_313:\n        /* \"DEX.sol\":4247:4292  totalStackTime += (block.timestamp - ss.time) */\n      tag_314\n      swap1\n      dup5\n      tag_102\n      jump\t// in\n    tag_314:\n      swap3\n      pop\n        /* \"DEX.sol\":4177:4307  {... */\n      pop\n        /* \"DEX.sol\":4172:4175  i++ */\n      dup1\n      dup1\n      tag_315\n      swap1\n      tag_316\n      jump\t// in\n    tag_315:\n      swap2\n      pop\n      pop\n        /* \"DEX.sol\":4136:4307  for (uint256 i = 0; i <= numStacks; i++) {... */\n      jump(tag_307)\n    tag_308:\n      pop\n        /* \"DEX.sol\":4325:4334  uint256 i */\n      0x00\n        /* \"DEX.sol\":4320:4817  for (uint256 i = 0; i <= numStacks; i++) {... */\n    tag_317:\n        /* \"DEX.sol\":4345:4354  numStacks */\n      dup3\n        /* \"DEX.sol\":4340:4341  i */\n      dup2\n        /* \"DEX.sol\":4340:4354  i <= numStacks */\n      gt\n        /* \"DEX.sol\":4320:4817  for (uint256 i = 0; i <= numStacks; i++) {... */\n      tag_318\n      jumpi\n        /* \"DEX.sol\":4379:4401  Stack_Struct memory ss */\n      0x00\n        /* \"DEX.sol\":4404:4410  stacks */\n      dup5\n        /* \"DEX.sol\":4411:4412  i */\n      dup3\n        /* \"DEX.sol\":4404:4413  stacks[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_321\n      jumpi\n      tag_321\n      tag_241\n      jump\t// in\n    tag_321:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"DEX.sol\":4379:4413  Stack_Struct memory ss = stacks[i] */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n        /* \"DEX.sol\":4404:4413  stacks[i] */\n      0x03\n      swap1\n      swap5\n      mul\n      swap1\n      swap2\n      add\n        /* \"DEX.sol\":4379:4413  Stack_Struct memory ss = stacks[i] */\n      dup1\n      sload\n      dup1\n      dup6\n      mstore\n      0x01\n      dup3\n      add\n      sload\n      swap4\n      dup6\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      add\n      sload\n      swap1\n      dup4\n      add\n      mstore\n        /* \"DEX.sol\":4483:4485  _x */\n      sload(0x06)\n        /* \"DEX.sol\":4470:4479  precision */\n      sload(0x08)\n        /* \"DEX.sol\":4379:4413  Stack_Struct memory ss = stacks[i] */\n      swap3\n      swap5\n      pop\n        /* \"DEX.sol\":4483:4485  _x */\n      swap2\n        /* \"DEX.sol\":4453:4479  ss.meme_amount * precision */\n      tag_323\n      swap2\n      tag_99\n      jump\t// in\n    tag_323:\n        /* \"DEX.sol\":4452:4485  (ss.meme_amount * precision) / _x */\n      tag_324\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_324:\n        /* \"DEX.sol\":4431:4486  uint256 poolShare = ((ss.meme_amount * precision) / _x) */\n      swap1\n      pop\n        /* \"DEX.sol\":4504:4521  uint256 stackTime */\n      0x00\n        /* \"DEX.sol\":4543:4545  ss */\n      dup3\n        /* \"DEX.sol\":4543:4550  ss.time */\n      0x40\n      add\n      mload\n        /* \"DEX.sol\":4525:4540  block.timestamp */\n      timestamp\n        /* \"DEX.sol\":4525:4550  block.timestamp - ss.time */\n      tag_325\n      swap2\n      swap1\n      tag_89\n      jump\t// in\n    tag_325:\n        /* \"DEX.sol\":4504:4551  uint256 stackTime = (block.timestamp - ss.time) */\n      swap1\n      pop\n        /* \"DEX.sol\":4569:4588  uint256 stackWeight */\n      0x00\n        /* \"DEX.sol\":4591:4617  stackTime / totalStackTime */\n      tag_326\n        /* \"DEX.sol\":4603:4617  totalStackTime */\n      dup7\n        /* \"DEX.sol\":4504:4551  uint256 stackTime = (block.timestamp - ss.time) */\n      dup4\n        /* \"DEX.sol\":4591:4617  stackTime / totalStackTime */\n      tag_87\n      jump\t// in\n    tag_326:\n        /* \"DEX.sol\":4800:4802  _k */\n      sload(0x05)\n        /* \"DEX.sol\":4569:4617  uint256 stackWeight = stackTime / totalStackTime */\n      swap1\n      swap2\n      pop\n      dup2\n        /* \"DEX.sol\":4704:4712  dailyTax */\n      0x03\n        /* \"DEX.sol\":4704:4738  dailyTax[block.timestamp / 1 days] */\n      0x00\n        /* \"DEX.sol\":4713:4737  block.timestamp / 1 days */\n      tag_327\n        /* \"DEX.sol\":4731:4737  1 days */\n      0x015180\n        /* \"DEX.sol\":4713:4728  block.timestamp */\n      timestamp\n        /* \"DEX.sol\":4713:4737  block.timestamp / 1 days */\n      tag_87\n      jump\t// in\n    tag_327:\n        /* \"DEX.sol\":4704:4738  dailyTax[block.timestamp / 1 days] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DEX.sol\":4668:4677  poolShare */\n      dup6\n        /* \"DEX.sol\":4668:4738  poolShare *... */\n      tag_328\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_328:\n        /* \"DEX.sol\":4668:4776  poolShare *... */\n      tag_329\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_329:\n        /* \"DEX.sol\":4667:4802  (poolShare *... */\n      tag_330\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_330:\n        /* \"DEX.sol\":4635:4802  taxShare +=... */\n      tag_331\n      swap1\n      dup11\n      tag_102\n      jump\t// in\n    tag_331:\n      swap9\n      pop\n        /* \"DEX.sol\":4361:4817  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"DEX.sol\":4356:4359  i++ */\n      dup1\n      dup1\n      tag_332\n      swap1\n      tag_316\n      jump\t// in\n    tag_332:\n      swap2\n      pop\n      pop\n        /* \"DEX.sol\":4320:4817  for (uint256 i = 0; i <= numStacks; i++) {... */\n      jump(tag_317)\n    tag_318:\n      pop\n        /* \"DEX.sol\":3970:4827  {... */\n      pop\n      pop\n      pop\n        /* \"DEX.sol\":3926:4827  if (dailyTax[block.timestamp / 1 days] > 0) {... */\n    tag_306:\n        /* \"DEX.sol\":4843:4851  taxShare */\n      swap2\n        /* \"DEX.sol\":3828:4858  function _distributeTax() internal view returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"DEX.sol\":3510:3822  function _removeArr(uint256 index) internal {... */\n    tag_269:\n        /* \"DEX.sol\":3588:3598  msg.sender */\n      caller\n        /* \"DEX.sol\":3580:3599  Stacked[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol\":3580:3587  Stacked */\n      0x02\n        /* \"DEX.sol\":3580:3599  Stacked[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DEX.sol\":3580:3606  Stacked[msg.sender].length */\n      sload\n        /* \"DEX.sol\":3572:3606  index < Stacked[msg.sender].length */\n      dup2\n      lt\n        /* \"DEX.sol\":3564:3630  require(index < Stacked[msg.sender].length, \"Index out of bounds\") */\n      tag_334\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9776:9778   */\n      0x20\n        /* \"DEX.sol\":3564:3630  require(index < Stacked[msg.sender].length, \"Index out of bounds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9758:9779   */\n      mstore\n        /* \"#utility.yul\":9815:9817   */\n      0x13\n        /* \"#utility.yul\":9795:9813   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9788:9818   */\n      mstore\n      shl(0x68, 0x496e646578206f7574206f6620626f756e6473)\n        /* \"#utility.yul\":9834:9852   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9827:9876   */\n      mstore\n        /* \"#utility.yul\":9893:9911   */\n      0x64\n      add\n        /* \"DEX.sol\":3564:3630  require(index < Stacked[msg.sender].length, \"Index out of bounds\") */\n      tag_83\n        /* \"#utility.yul\":9574:9917   */\n      jump\n        /* \"DEX.sol\":3564:3630  require(index < Stacked[msg.sender].length, \"Index out of bounds\") */\n    tag_334:\n        /* \"DEX.sol\":3657:3662  index */\n      dup1\n        /* \"DEX.sol\":3640:3781  for (uint256 i = index; i < Stacked[msg.sender].length - 1; i++) {... */\n    tag_337:\n        /* \"DEX.sol\":3676:3686  msg.sender */\n      caller\n        /* \"DEX.sol\":3668:3687  Stacked[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol\":3668:3675  Stacked */\n      0x02\n        /* \"DEX.sol\":3668:3687  Stacked[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DEX.sol\":3668:3694  Stacked[msg.sender].length */\n      sload\n        /* \"DEX.sol\":3668:3698  Stacked[msg.sender].length - 1 */\n      tag_340\n      swap1\n        /* \"DEX.sol\":3697:3698  1 */\n      0x01\n      swap1\n        /* \"DEX.sol\":3668:3698  Stacked[msg.sender].length - 1 */\n      tag_89\n      jump\t// in\n    tag_340:\n        /* \"DEX.sol\":3664:3665  i */\n      dup2\n        /* \"DEX.sol\":3664:3698  i < Stacked[msg.sender].length - 1 */\n      lt\n        /* \"DEX.sol\":3640:3781  for (uint256 i = index; i < Stacked[msg.sender].length - 1; i++) {... */\n      iszero\n      tag_338\n      jumpi\n        /* \"DEX.sol\":3752:3762  msg.sender */\n      caller\n        /* \"DEX.sol\":3744:3763  Stacked[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol\":3744:3751  Stacked */\n      0x02\n        /* \"DEX.sol\":3744:3763  Stacked[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DEX.sol\":3764:3769  i + 1 */\n      tag_341\n        /* \"DEX.sol\":3764:3765  i */\n      dup3\n        /* \"DEX.sol\":3768:3769  1 */\n      0x01\n        /* \"DEX.sol\":3764:3769  i + 1 */\n      tag_102\n      jump\t// in\n    tag_341:\n        /* \"DEX.sol\":3744:3770  Stacked[msg.sender][i + 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_343\n      jumpi\n      tag_343\n      tag_241\n      jump\t// in\n    tag_343:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"DEX.sol\":3719:3726  Stacked */\n      0x02\n        /* \"DEX.sol\":3719:3738  Stacked[msg.sender] */\n      0x00\n        /* \"DEX.sol\":3727:3737  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol\":3719:3738  Stacked[msg.sender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DEX.sol\":3739:3740  i */\n      dup3\n        /* \"DEX.sol\":3719:3741  Stacked[msg.sender][i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_346\n      jumpi\n      tag_346\n      tag_241\n      jump\t// in\n    tag_346:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"DEX.sol\":3719:3770  Stacked[msg.sender][i] = Stacked[msg.sender][i + 1] */\n      dup3\n      sload\n        /* \"DEX.sol\":3719:3741  Stacked[msg.sender][i] */\n      0x03\n      swap1\n      swap3\n      mul\n      add\n        /* \"DEX.sol\":3719:3770  Stacked[msg.sender][i] = Stacked[msg.sender][i + 1] */\n      swap1\n      dup2\n      sstore\n      0x01\n      dup1\n      dup4\n      add\n      sload\n      swap1\n      dup3\n      add\n      sstore\n      0x02\n      swap2\n      dup3\n      add\n      sload\n      swap2\n      add\n      sstore\n        /* \"DEX.sol\":3700:3703  i++ */\n      dup1\n      tag_348\n      dup2\n      tag_316\n      jump\t// in\n    tag_348:\n      swap2\n      pop\n      pop\n        /* \"DEX.sol\":3640:3781  for (uint256 i = index; i < Stacked[msg.sender].length - 1; i++) {... */\n      jump(tag_337)\n    tag_338:\n      pop\n        /* \"DEX.sol\":3798:3808  msg.sender */\n      caller\n        /* \"DEX.sol\":3790:3809  Stacked[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol\":3790:3797  Stacked */\n      0x02\n        /* \"DEX.sol\":3790:3809  Stacked[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DEX.sol\":3790:3815  Stacked[msg.sender].pop() */\n      dup1\n      sload\n      dup1\n      tag_350\n      jumpi\n      tag_350\n      tag_351\n      jump\t// in\n    tag_350:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      keccak256\n      0x03\n      not(0x00)\n      swap1\n      swap4\n      add\n      swap3\n      dup4\n      mul\n      add\n      dup2\n      dup2\n      sstore\n      0x01\n      dup2\n      add\n      dup3\n      swap1\n      sstore\n      0x02\n      add\n      sstore\n      swap1\n      sstore\n      pop\n        /* \"DEX.sol\":3510:3822  function _removeArr(uint256 index) internal {... */\n      jump\t// out\n        /* \"DEX.sol\":1315:1373  function _updateK() internal {... */\n    tag_271:\n        /* \"DEX.sol\":1364:1366  _y */\n      sload(0x07)\n        /* \"DEX.sol\":1359:1361  _x */\n      sload(0x06)\n        /* \"DEX.sol\":1359:1366  _x * _y */\n      tag_354\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_354:\n        /* \"DEX.sol\":1354:1356  _k */\n      0x05\n        /* \"DEX.sol\":1354:1366  _k = _x * _y */\n      sstore\n        /* \"DEX.sol\":1315:1373  function _updateK() internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10256:10258   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10238:10259   */\n      mstore\n        /* \"#utility.yul\":10295:10297   */\n      0x14\n        /* \"#utility.yul\":10275:10293   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10268:10298   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":10314:10332   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10307:10357   */\n      mstore\n        /* \"#utility.yul\":10374:10392   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_83\n        /* \"#utility.yul\":10054:10398   */\n      jump\n        /* \"#utility.yul\":14:194   */\n    tag_22:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_364:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":781:1632   */\n    tag_72:\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1062:1083   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1132:1145   */\n      dup3\n      mload\n        /* \"#utility.yul\":1035:1053   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1154:1176   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":981:985   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1010:1012   */\n      swap1\n        /* \"#utility.yul\":1195:1197   */\n      0x40\n      swap1\n        /* \"#utility.yul\":1213:1231   */\n      dup2\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1254:1269   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":981:985   */\n      dup6\n        /* \"#utility.yul\":1297:1606   */\n    tag_369:\n        /* \"#utility.yul\":1311:1317   */\n      dup3\n        /* \"#utility.yul\":1308:1309   */\n      dup2\n        /* \"#utility.yul\":1305:1318   */\n      lt\n        /* \"#utility.yul\":1297:1606   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":1370:1383   */\n      dup2\n      mload\n        /* \"#utility.yul\":1408:1417   */\n      dup1\n      mload\n        /* \"#utility.yul\":1396:1418   */\n      dup6\n      mstore\n        /* \"#utility.yul\":1458:1469   */\n      dup7\n      dup2\n      add\n        /* \"#utility.yul\":1452:1470   */\n      mload\n        /* \"#utility.yul\":1438:1450   */\n      dup8\n      dup7\n      add\n        /* \"#utility.yul\":1431:1471   */\n      mstore\n        /* \"#utility.yul\":1511:1522   */\n      dup6\n      add\n        /* \"#utility.yul\":1505:1523   */\n      mload\n        /* \"#utility.yul\":1491:1503   */\n      dup6\n      dup6\n      add\n        /* \"#utility.yul\":1484:1524   */\n      mstore\n        /* \"#utility.yul\":1553:1557   */\n      0x60\n        /* \"#utility.yul\":1544:1558   */\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":1581:1596   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":1333:1334   */\n      0x01\n        /* \"#utility.yul\":1326:1335   */\n      add\n        /* \"#utility.yul\":1297:1606   */\n      jump(tag_369)\n    tag_371:\n      pop\n        /* \"#utility.yul\":1623:1626   */\n      swap2\n      swap8\n        /* \"#utility.yul\":781:1632   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1637:1923   */\n    tag_76:\n        /* \"#utility.yul\":1696:1702   */\n      0x00\n        /* \"#utility.yul\":1749:1751   */\n      0x20\n        /* \"#utility.yul\":1737:1746   */\n      dup3\n        /* \"#utility.yul\":1728:1735   */\n      dup5\n        /* \"#utility.yul\":1724:1747   */\n      sub\n        /* \"#utility.yul\":1720:1752   */\n      slt\n        /* \"#utility.yul\":1717:1769   */\n      iszero\n      tag_373\n      jumpi\n        /* \"#utility.yul\":1765:1766   */\n      0x00\n        /* \"#utility.yul\":1762:1763   */\n      dup1\n        /* \"#utility.yul\":1755:1767   */\n      revert\n        /* \"#utility.yul\":1717:1769   */\n    tag_373:\n        /* \"#utility.yul\":1791:1814   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1843:1874   */\n      dup2\n      and\n        /* \"#utility.yul\":1833:1875   */\n      dup2\n      eq\n        /* \"#utility.yul\":1823:1893   */\n      tag_374\n      jumpi\n        /* \"#utility.yul\":1889:1890   */\n      0x00\n        /* \"#utility.yul\":1886:1887   */\n      dup1\n        /* \"#utility.yul\":1879:1891   */\n      revert\n        /* \"#utility.yul\":1823:1893   */\n    tag_374:\n        /* \"#utility.yul\":1912:1917   */\n      swap4\n        /* \"#utility.yul\":1637:1923   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2277:2404   */\n    tag_361:\n        /* \"#utility.yul\":2338:2348   */\n      0x4e487b71\n        /* \"#utility.yul\":2333:2336   */\n      0xe0\n        /* \"#utility.yul\":2329:2349   */\n      shl\n        /* \"#utility.yul\":2326:2327   */\n      0x00\n        /* \"#utility.yul\":2319:2350   */\n      mstore\n        /* \"#utility.yul\":2369:2373   */\n      0x11\n        /* \"#utility.yul\":2366:2367   */\n      0x04\n        /* \"#utility.yul\":2359:2374   */\n      mstore\n        /* \"#utility.yul\":2393:2397   */\n      0x24\n        /* \"#utility.yul\":2390:2391   */\n      0x00\n        /* \"#utility.yul\":2383:2398   */\n      revert\n        /* \"#utility.yul\":2409:2626   */\n    tag_87:\n        /* \"#utility.yul\":2449:2450   */\n      0x00\n        /* \"#utility.yul\":2475:2476   */\n      dup3\n        /* \"#utility.yul\":2465:2597   */\n      tag_378\n      jumpi\n        /* \"#utility.yul\":2519:2529   */\n      0x4e487b71\n        /* \"#utility.yul\":2514:2517   */\n      0xe0\n        /* \"#utility.yul\":2510:2530   */\n      shl\n        /* \"#utility.yul\":2507:2508   */\n      0x00\n        /* \"#utility.yul\":2500:2531   */\n      mstore\n        /* \"#utility.yul\":2554:2558   */\n      0x12\n        /* \"#utility.yul\":2551:2552   */\n      0x04\n        /* \"#utility.yul\":2544:2559   */\n      mstore\n        /* \"#utility.yul\":2582:2586   */\n      0x24\n        /* \"#utility.yul\":2579:2580   */\n      0x00\n        /* \"#utility.yul\":2572:2587   */\n      revert\n        /* \"#utility.yul\":2465:2597   */\n    tag_378:\n      pop\n        /* \"#utility.yul\":2611:2620   */\n      div\n      swap1\n        /* \"#utility.yul\":2409:2626   */\n      jump\t// out\n        /* \"#utility.yul\":2631:2759   */\n    tag_89:\n        /* \"#utility.yul\":2698:2707   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2719:2730   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2716:2753   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":2733:2751   */\n      tag_381\n      tag_361\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":2631:2759   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2764:2932   */\n    tag_99:\n        /* \"#utility.yul\":2837:2846   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":2868:2877   */\n      dup2\n      iszero\n        /* \"#utility.yul\":2885:2900   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":2879:2901   */\n      dup5\n      eq\n        /* \"#utility.yul\":2865:2902   */\n      or\n        /* \"#utility.yul\":2855:2926   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":2906:2924   */\n      tag_381\n      tag_361\n      jump\t// in\n        /* \"#utility.yul\":2937:3062   */\n    tag_102:\n        /* \"#utility.yul\":3002:3011   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3023:3033   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3020:3056   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":3036:3054   */\n      tag_381\n      tag_361\n      jump\t// in\n        /* \"#utility.yul\":4386:4663   */\n    tag_163:\n        /* \"#utility.yul\":4453:4459   */\n      0x00\n        /* \"#utility.yul\":4506:4508   */\n      0x20\n        /* \"#utility.yul\":4494:4503   */\n      dup3\n        /* \"#utility.yul\":4485:4492   */\n      dup5\n        /* \"#utility.yul\":4481:4504   */\n      sub\n        /* \"#utility.yul\":4477:4509   */\n      slt\n        /* \"#utility.yul\":4474:4526   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":4522:4523   */\n      0x00\n        /* \"#utility.yul\":4519:4520   */\n      dup1\n        /* \"#utility.yul\":4512:4524   */\n      revert\n        /* \"#utility.yul\":4474:4526   */\n    tag_393:\n        /* \"#utility.yul\":4554:4563   */\n      dup2\n        /* \"#utility.yul\":4548:4564   */\n      mload\n        /* \"#utility.yul\":4607:4612   */\n      dup1\n        /* \"#utility.yul\":4600:4613   */\n      iszero\n        /* \"#utility.yul\":4593:4614   */\n      iszero\n        /* \"#utility.yul\":4586:4591   */\n      dup2\n        /* \"#utility.yul\":4583:4615   */\n      eq\n        /* \"#utility.yul\":4573:4633   */\n      tag_374\n      jumpi\n        /* \"#utility.yul\":4629:4630   */\n      0x00\n        /* \"#utility.yul\":4626:4627   */\n      dup1\n        /* \"#utility.yul\":4619:4631   */\n      revert\n        /* \"#utility.yul\":6298:6482   */\n    tag_203:\n        /* \"#utility.yul\":6368:6374   */\n      0x00\n        /* \"#utility.yul\":6421:6423   */\n      0x20\n        /* \"#utility.yul\":6409:6418   */\n      dup3\n        /* \"#utility.yul\":6400:6407   */\n      dup5\n        /* \"#utility.yul\":6396:6419   */\n      sub\n        /* \"#utility.yul\":6392:6424   */\n      slt\n        /* \"#utility.yul\":6389:6441   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":6437:6438   */\n      0x00\n        /* \"#utility.yul\":6434:6435   */\n      dup1\n        /* \"#utility.yul\":6427:6439   */\n      revert\n        /* \"#utility.yul\":6389:6441   */\n    tag_401:\n      pop\n        /* \"#utility.yul\":6460:6476   */\n      mload\n      swap2\n        /* \"#utility.yul\":6298:6482   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7974:8101   */\n    tag_241:\n        /* \"#utility.yul\":8035:8045   */\n      0x4e487b71\n        /* \"#utility.yul\":8030:8033   */\n      0xe0\n        /* \"#utility.yul\":8026:8046   */\n      shl\n        /* \"#utility.yul\":8023:8024   */\n      0x00\n        /* \"#utility.yul\":8016:8047   */\n      mstore\n        /* \"#utility.yul\":8066:8070   */\n      0x32\n        /* \"#utility.yul\":8063:8064   */\n      0x04\n        /* \"#utility.yul\":8056:8071   */\n      mstore\n        /* \"#utility.yul\":8090:8094   */\n      0x24\n        /* \"#utility.yul\":8087:8088   */\n      0x00\n        /* \"#utility.yul\":8080:8095   */\n      revert\n        /* \"#utility.yul\":9434:9569   */\n    tag_316:\n        /* \"#utility.yul\":9473:9476   */\n      0x00\n        /* \"#utility.yul\":9494:9511   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":9491:9534   */\n      tag_412\n      jumpi\n        /* \"#utility.yul\":9514:9532   */\n      tag_412\n      tag_361\n      jump\t// in\n    tag_412:\n      pop\n        /* \"#utility.yul\":9561:9562   */\n      0x01\n        /* \"#utility.yul\":9550:9563   */\n      add\n      swap1\n        /* \"#utility.yul\":9434:9569   */\n      jump\t// out\n        /* \"#utility.yul\":9922:10049   */\n    tag_351:\n        /* \"#utility.yul\":9983:9993   */\n      0x4e487b71\n        /* \"#utility.yul\":9978:9981   */\n      0xe0\n        /* \"#utility.yul\":9974:9994   */\n      shl\n        /* \"#utility.yul\":9971:9972   */\n      0x00\n        /* \"#utility.yul\":9964:9995   */\n      mstore\n        /* \"#utility.yul\":10014:10018   */\n      0x31\n        /* \"#utility.yul\":10011:10012   */\n      0x04\n        /* \"#utility.yul\":10004:10019   */\n      mstore\n        /* \"#utility.yul\":10038:10042   */\n      0x24\n        /* \"#utility.yul\":10035:10036   */\n      0x00\n        /* \"#utility.yul\":10028:10043   */\n      revert\n\n    auxdata: 0xa2646970667358221220c72032e6ecbf6c4ac3929d7553730789b0ff574d3ec0cd0e3262f9ab8aac6e7664736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1069": {
									"entryPoint": null,
									"id": 1069,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_139": {
									"entryPoint": null,
									"id": 139,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_966": {
									"entryPoint": null,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 155,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:798:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:213:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "76:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "91:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "94:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "87:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "76:7:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "162:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "183:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "190:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "195:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "186:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "186:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "176:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "176:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "176:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "227:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "230:4:9",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "220:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "220:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "220:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "255:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "258:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "248:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "248:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "248:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "125:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "118:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "118:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "132:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "139:7:9"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "148:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "135:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "135:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "129:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "129:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "115:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "115:37:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "108:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:45:9"
															},
															"nodeType": "YulIf",
															"src": "105:168:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "45:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "48:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "54:7:9",
														"type": ""
													}
												],
												"src": "14:265:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "330:171:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "361:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "382:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "389:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "394:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "385:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "385:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "375:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "375:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "375:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "426:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "429:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "419:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "419:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "419:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "454:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "457:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "447:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "447:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "447:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "350:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:9:9"
															},
															"nodeType": "YulIf",
															"src": "340:132:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "481:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "490:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "493:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "486:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "486:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "481:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "315:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "318:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "324:1:9",
														"type": ""
													}
												],
												"src": "284:217:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:209:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "633:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "642:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "645:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "635:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "635:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "635:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "608:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "617:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "604:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "604:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "629:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "600:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "600:32:9"
															},
															"nodeType": "YulIf",
															"src": "597:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "658:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "677:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "671:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "671:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "662:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "750:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "759:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "762:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "752:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "752:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "752:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "709:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "720:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "735:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "740:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "731:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "731:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "744:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "727:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "727:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "716:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "716:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "706:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "706:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "699:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "699:50:9"
															},
															"nodeType": "YulIf",
															"src": "696:70:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "775:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "785:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "775:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "553:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "564:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "576:6:9",
														"type": ""
													}
												],
												"src": "506:290:9"
											}
										]
									},
									"contents": "{\n    { }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x))))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0x8AC7230489E80000 PUSH1 0x8 SSTORE PUSH1 0xA PUSH1 0x8 SLOAD PUSH1 0x3 PUSH3 0x23 SWAP2 SWAP1 PUSH3 0xF3 JUMP JUMPDEST PUSH3 0x2F SWAP2 SWAP1 PUSH3 0x11D JUMP JUMPDEST PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x3E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x17D9 CODESIZE SUB DUP1 PUSH3 0x17D9 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x61 SWAP2 PUSH3 0x13D JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH3 0x75 CALLER PUSH3 0x9B JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x16C JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR DUP6 SSTORE PUSH1 0x40 MLOAD SWAP4 DIV SWAP2 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x117 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x138 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x14E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x165 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x165F DUP1 PUSH3 0x17A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD9 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDC9031C4 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xDC9031C4 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xE8BCA8B8 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x9C74F05D EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x1F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C572ED0 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x5C572ED0 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x198 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A753FED EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x200061DF EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x130 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x3A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x3B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x48B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x49C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST PUSH2 0x12E PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x799 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0x1510 JUMP JUMPDEST PUSH2 0xA83 JUMP JUMPDEST PUSH0 PUSH2 0x283 PUSH2 0xAF9 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD GT PUSH2 0x2D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F7420656E6F756768206C6971756964697479 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x6 SLOAD PUSH0 SUB PUSH2 0x2FC JUMPI DUP4 PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST SWAP1 POP PUSH2 0x31A JUMP JUMPDEST DUP4 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x337 JUMPI PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH2 0x348 JUMP JUMPDEST DUP1 PUSH1 0x5 SLOAD PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH0 PUSH1 0x6 SLOAD DUP4 PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD DUP4 PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x382 DUP3 DUP5 PUSH2 0x15A0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x395 PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x39E DUP2 PUSH2 0xB3E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3A9 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x3B1 PUSH2 0xEE6 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x3BC PUSH2 0xAF9 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD GT PUSH2 0x404 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F7420656E6F756768206C6971756964697479 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x7 SLOAD PUSH0 SUB PUSH2 0x430 JUMPI DUP4 PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST SWAP2 POP PUSH2 0x44E JUMP JUMPDEST DUP4 PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH2 0x44B SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP2 PUSH0 SUB PUSH2 0x46B JUMPI PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST SWAP1 POP PUSH2 0x47C JUMP JUMPDEST DUP2 PUSH1 0x5 SLOAD PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH2 0x493 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x3B1 PUSH0 PUSH2 0xF37 JUMP JUMPDEST PUSH2 0x4A4 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x3B1 PUSH2 0xF8F JUMP JUMPDEST PUSH2 0x4B4 PUSH2 0xAF9 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x4F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x53656E6420536F6D65204D656D65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST PUSH0 PUSH2 0x4FE DUP3 PUSH2 0x3B3 JUMP JUMPDEST SWAP1 POP CALLVALUE DUP2 GT ISZERO PUSH2 0x540 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA6CADCC8409ADEE4CA408AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x15B3 JUMP JUMPDEST POP CALLER PUSH2 0x8FC PUSH2 0x5C1 DUP4 CALLVALUE PUSH2 0x1570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5E6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x5F7 SWAP1 DUP3 PUSH2 0x15A0 JUMP JUMPDEST PUSH2 0x601 SWAP1 DUP5 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x3 PUSH0 PUSH2 0x61B PUSH3 0x15180 TIMESTAMP PUSH2 0x1551 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x636 SWAP2 SWAP1 PUSH2 0x15A0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x64E SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x663 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x1CBC5AB135991BD2B6A4B034A04AA2AA086DAC1371CB9B16B8B5E2ED6B036BED SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x6AE PUSH2 0xAF9 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x53656E64206D6F7265204D454D45 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x72D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA6CADCC840DADEE4CA408AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST DUP1 PUSH1 0x8 SLOAD CALLVALUE PUSH2 0x73C SWAP2 SWAP1 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x4 SLOAD GT ISZERO PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14DD1858DADA5B99C814985D19481B9BDD081B595D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST PUSH2 0x39E DUP2 CALLVALUE PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x7A1 PUSH2 0xAF9 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x7E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA6CADCC840A6DEDACA408AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST PUSH0 PUSH2 0x7EA DUP3 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x831 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x855 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x8A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F756768206D656D65000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91C SWAP2 SWAP1 PUSH2 0x15B3 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x947 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x958 SWAP1 DUP3 PUSH2 0x15A0 JUMP JUMPDEST PUSH2 0x962 SWAP1 DUP4 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x96C SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x3 PUSH0 PUSH2 0x97C PUSH3 0x15180 TIMESTAMP PUSH2 0x1551 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x997 SWAP2 SWAP1 PUSH2 0x15A0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9AF SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH2 0x9C4 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xED7A144FAD14804D5C249145E3E0E2B63A9EB455B76AEE5BC92D711E9BBA3E4A SWAP2 ADD PUSH2 0x69A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xA7A JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA2D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA8B PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C7 JUMP JUMPDEST PUSH2 0x39E DUP2 PUSH2 0xF37 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xB5E JUMPI PUSH2 0xB5E PUSH2 0x15E9 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH2 0xB9D PUSH2 0x112D JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD SWAP2 SWAP3 POP SWAP1 PUSH0 SWAP1 PUSH2 0xBB5 SWAP1 DUP5 SWAP1 PUSH2 0x15A0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC00 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC24 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST LT ISZERO PUSH2 0xCAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792043757272656E746C79207468697320636F6E747261637420646F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65736E27742068617665204D656D6520746F2072657475726E2C20436865636B PUSH1 0x64 DUP3 ADD MSTORE PUSH11 0x206261636B20536F6F6E21 PUSH1 0xA8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x2C7 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0xD35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792043757272656E746C79207468697320636F6E747261637420646F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65736E277420686176652045746820746F2072657475726E2C20436865636B20 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0x6261636B20536F6F6E21 PUSH1 0xB0 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x2C7 JUMP JUMPDEST DUP2 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD46 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD5E SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDB1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDD5 SWAP2 SWAP1 PUSH2 0x15B3 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xE00 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH0 SUB PUSH2 0xE13 JUMPI PUSH0 PUSH1 0x4 SSTORE PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0xE26 SWAP2 SWAP1 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0xE30 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMPDEST PUSH2 0xE3D DUP6 PUSH2 0x12E7 JUMP JUMPDEST PUSH2 0xE45 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xBB564DF1F5D4EBB97B073ADCAB505C7796A37035AC5D14F51269660939C39CF4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x3B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST PUSH2 0xEEE PUSH2 0x1459 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR DUP6 SSTORE PUSH1 0x40 MLOAD SWAP4 DIV SWAP2 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF97 PUSH2 0xAF9 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xF1A CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x101F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x15B3 JUMP JUMPDEST POP DUP2 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1055 SWAP2 SWAP1 PUSH2 0x15A0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x106D SWAP2 SWAP1 PUSH2 0x15A0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE TIMESTAMP DUP4 DUP6 ADD SWAP1 DUP2 MSTORE CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP1 DUP6 MSTORE SWAP6 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP4 MSTORE SWAP5 SWAP1 SWAP2 KECCAK256 DUP6 MLOAD PUSH1 0x3 SWAP1 SWAP6 MUL ADD SWAP4 DUP5 SSTORE SWAP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0x10D9 SWAP2 SWAP1 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x10E3 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0x10EE PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0x5CAAD8F5613B6F1D592FC8C69D8F0999453740F0806C754F20CC92F3D4B2B1B6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH1 0x3 DUP2 PUSH2 0x1140 PUSH3 0x15180 TIMESTAMP PUSH2 0x1551 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0x12E2 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP1 JUMPDEST DUP3 DUP2 GT PUSH2 0x11E8 JUMPI PUSH0 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1182 JUMPI PUSH2 0x1182 PUSH2 0x15E9 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x11C8 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH2 0x11D2 SWAP1 DUP5 PUSH2 0x15A0 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x11E0 SWAP1 PUSH2 0x15FD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1168 JUMP JUMPDEST POP PUSH0 JUMPDEST DUP3 DUP2 GT PUSH2 0x12DD JUMPI PUSH0 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1205 JUMPI PUSH2 0x1205 PUSH2 0x15E9 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP1 DUP6 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 ADD SLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD SWAP3 SWAP5 POP SWAP2 PUSH2 0x124C SWAP2 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x1256 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x1269 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1276 DUP7 DUP4 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x128D PUSH3 0x15180 TIMESTAMP PUSH2 0x1551 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP6 PUSH2 0x12A6 SWAP2 SWAP1 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x12B0 SWAP2 SWAP1 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x12BA SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH2 0x12C4 SWAP1 DUP11 PUSH2 0x15A0 JUMP JUMPDEST SWAP9 POP POP POP POP POP DUP1 DUP1 PUSH2 0x12D5 SWAP1 PUSH2 0x15FD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11EB JUMP JUMPDEST POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT PUSH2 0x133A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST DUP1 JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1357 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1570 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1400 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1377 DUP3 PUSH1 0x1 PUSH2 0x15A0 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1387 JUMPI PUSH2 0x1387 PUSH2 0x15E9 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 PUSH0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x13C7 JUMPI PUSH2 0x13C7 PUSH2 0x15E9 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x2 SWAP2 DUP3 ADD SLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0x13F8 DUP2 PUSH2 0x15FD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x133C JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x141E JUMPI PUSH2 0x141E PUSH2 0x1615 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x3 PUSH0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x2 ADD SSTORE SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0x1454 SWAP2 SWAP1 PUSH2 0x1589 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND PUSH2 0x3B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1503 JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 ADD MLOAD DUP6 DUP6 ADD MSTORE PUSH1 0x60 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x14D4 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1520 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1536 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x156B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1583 JUMPI PUSH2 0x1583 PUSH2 0x153D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1583 JUMPI PUSH2 0x1583 PUSH2 0x153D JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1583 JUMPI PUSH2 0x1583 PUSH2 0x153D JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1536 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x160E JUMPI PUSH2 0x160E PUSH2 0x153D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 KECCAK256 ORIGIN 0xE6 0xEC 0xBF PUSH13 0x4AC3929D7553730789B0FF574D RETURNDATACOPY 0xC0 0xCD 0xE ORIGIN PUSH3 0xF9AB8A 0xAC PUSH15 0x7664736F6C63430008140033000000 ",
							"sourceMap": "243:7548:7:-:0;;;1010:5;981:34;;1067:2;1054:9;;1050:1;:13;;;;:::i;:::-;1049:20;;;;:::i;:::-;1022:47;;1076:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1006:5:1;996:15;;-1:-1:-1;;996:15:1;;;936:32:0;719:10:6;936:18:0;:32::i;:::-;1112:4:7;:17;;-1:-1:-1;;;;;;1112:17:7;-1:-1:-1;;;;;1112:17:7;;;;;;;;;;243:7548;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;2518:6;2534:17;;;-1:-1:-1;;;;;;2534:17:0;;;;;2566:40;;2518:6;;;;;;;2534:17;;2518:6;;2566:40;;;2489:124;2426:187;:::o;14:265:9:-;87:9;;;118;;135:15;;;129:22;;115:37;105:168;;195:10;190:3;186:20;183:1;176:31;230:4;227:1;220:15;258:4;255:1;248:15;105:168;14:265;;;;:::o;284:217::-;324:1;350;340:132;;394:10;389:3;385:20;382:1;375:31;429:4;426:1;419:15;457:4;454:1;447:15;340:132;-1:-1:-1;486:9:9;;284:217::o;506:290::-;576:6;629:2;617:9;608:7;604:23;600:32;597:52;;;645:1;642;635:12;597:52;671:16;;-1:-1:-1;;;;;716:31:9;;706:42;;696:70;;762:1;759;752:12;696:70;785:5;506:290;-1:-1:-1;;;506:290:9:o;:::-;243:7548:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 3719,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_distributeTax_1541": {
									"entryPoint": 4397,
									"id": 1541,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_966": {
									"entryPoint": null,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_203": {
									"entryPoint": 3983,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_removeArr_1411": {
									"entryPoint": 4839,
									"id": 1411,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_requireNotPaused_176": {
									"entryPoint": 2809,
									"id": 176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_187": {
									"entryPoint": 5209,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_stack_1238": {
									"entryPoint": 4043,
									"id": 1238,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 3895,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_219": {
									"entryPoint": 3814,
									"id": 219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_unstack_1353": {
									"entryPoint": 2878,
									"id": 1353,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateK_1097": {
									"entryPoint": 5188,
									"id": 1097,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buy_1801": {
									"entryPoint": 1196,
									"id": 1801,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getETHPrice_1717": {
									"entryPoint": 634,
									"id": 1717,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMemePrice_1629": {
									"entryPoint": 947,
									"id": 1629,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getStacks_1110": {
									"entryPoint": 2559,
									"id": 1110,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1078": {
									"entryPoint": 1180,
									"id": 1078,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_164": {
									"entryPoint": null,
									"id": 164,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 1163,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sell_1889": {
									"entryPoint": 1945,
									"id": 1889,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stack_1152": {
									"entryPoint": 1702,
									"id": 1152,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stackingRate_1040": {
									"entryPoint": null,
									"id": 1040,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 2691,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_1087": {
									"entryPoint": 929,
									"id": 1087,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unstack_1171": {
									"entryPoint": 909,
									"id": 1171,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Stack_Struct_$993_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stack_Struct_$993_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 5304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3a2fd18a5236a01c14eabb339146d9a0f8ce497bbcbaf2cfc134e83398c0726e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_420e5b55c2a1e24d83b9e05813ebfcbc021e37999e94a679003aeae679b03f0b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4a553fec1f423c8cd4748b1aaff7e9000972fd303793b6f6abe7b83513bc6b9a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5f3a7037a6f515e768f09bbd7b942e7ec8e428cdd68ed2428de9d02c6ace4c1a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_78b7994db21b321ba8531e19f302fa7a3e3fe17bff2fbaa020f4bcef4cd665f8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1e959a285e43b242539206d7aeb580dab96669d53083eb53a901cc352065b41__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a846ae426b95dae7130b856727d5256e6d2011b269481b9be8507efe8d0d207e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b99b2e78c78f1318a3232374cbc7b00c7eadb27370706844a7052723adaf5ddc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ca05f8819ffb49eed362c8482e2f89607806b624518b85b488890406834d3efe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f217f4029b3c2ea1dfaeee069952be2dcf9aed543c82bb251eb99c6e5f4f6f3d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 5629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5437,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 5653,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 5609,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10400:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:9"
															},
															"nodeType": "YulIf",
															"src": "94:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:9",
														"type": ""
													}
												],
												"src": "14:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "310:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "333:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "363:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "345:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "269:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "280:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "291:4:9",
														"type": ""
													}
												],
												"src": "199:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "476:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "486:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "498:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "509:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "494:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "486:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "528:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "553:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "546:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "546:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "539:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "539:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "521:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "521:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "445:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "456:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "467:4:9",
														"type": ""
													}
												],
												"src": "381:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "674:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "684:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "696:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "707:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "692:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "692:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "684:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "726:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "741:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "757:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "762:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "753:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "753:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "766:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "749:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "749:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "737:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "737:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "719:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "719:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "643:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "654:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "665:4:9",
														"type": ""
													}
												],
												"src": "573:203:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "990:642:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1000:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1010:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1004:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1021:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1039:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1050:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1035:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1035:18:9"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "1025:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1069:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1080:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1062:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1062:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1062:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1092:17:9",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "1103:6:9"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "1096:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1118:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1138:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1132:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1122:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "1161:6:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1169:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1154:22:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1185:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1195:2:9",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1189:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1206:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1217:9:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1228:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1213:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1213:18:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1206:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1240:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1258:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1266:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1254:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1254:15:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1244:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1278:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1287:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1282:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1346:260:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1360:23:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1376:6:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1370:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1370:13:9"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "1364:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1403:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "1414:2:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1408:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1408:9:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1396:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1396:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1396:22:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1442:3:9"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1447:2:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1438:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1438:12:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "1462:2:9"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1466:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1458:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1458:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1452:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1452:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1431:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1431:40:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1431:40:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "1495:3:9"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "1500:2:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1491:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1491:12:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "1515:2:9"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "1519:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1511:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1511:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1505:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1505:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1484:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1484:40:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1484:40:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1537:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1548:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1553:4:9",
																					"type": "",
																					"value": "0x60"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1544:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1544:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1537:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1571:25:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1585:6:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1593:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1581:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1581:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1571:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1308:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1311:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1305:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1305:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1319:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1321:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1330:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1333:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1326:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1326:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1321:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1301:3:9",
																"statements": []
															},
															"src": "1297:309:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1615:11:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "1623:3:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1615:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Stack_Struct_$993_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stack_Struct_$993_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "959:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "970:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "981:4:9",
														"type": ""
													}
												],
												"src": "781:851:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1707:216:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1753:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1762:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1765:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1755:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1755:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1755:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1728:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1737:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1724:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1724:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1749:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1720:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:32:9"
															},
															"nodeType": "YulIf",
															"src": "1717:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1778:36:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1804:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1791:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1791:23:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1782:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1877:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1836:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1847:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1862:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1867:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1858:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1858:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1871:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "1854:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1854:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1843:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1843:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1833:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1833:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1826:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:50:9"
															},
															"nodeType": "YulIf",
															"src": "1823:70:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1902:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1912:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1902:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1673:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1684:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1696:6:9",
														"type": ""
													}
												],
												"src": "1637:286:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2102:170:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2119:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2130:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2112:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2112:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2153:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2164:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2149:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2149:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2169:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2142:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2142:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2142:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2192:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2203:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2188:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2188:18:9"
																	},
																	{
																		"hexValue": "4e6f7420656e6f756768206c6971756964697479",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2208:22:9",
																		"type": "",
																		"value": "Not enough liquidity"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2181:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2181:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2240:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2252:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2263:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2248:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2240:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2079:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2093:4:9",
														"type": ""
													}
												],
												"src": "1928:344:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2309:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2326:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2333:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2338:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2329:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2329:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2319:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2319:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2319:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2366:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2369:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2359:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2359:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2359:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2390:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2393:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2383:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2383:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2383:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2277:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2455:171:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2486:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2507:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2514:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2519:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2510:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2510:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2500:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2500:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2500:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2551:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2554:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2544:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2544:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2544:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2579:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2582:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2572:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2572:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2572:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2475:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2468:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2468:9:9"
															},
															"nodeType": "YulIf",
															"src": "2465:132:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2606:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2615:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2618:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2611:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2611:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2606:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2440:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2443:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2449:1:9",
														"type": ""
													}
												],
												"src": "2409:217:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2680:79:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2690:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2702:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2705:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2698:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2698:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "2690:4:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2731:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2733:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2733:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2733:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "2722:4:9"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2728:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2719:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2719:11:9"
															},
															"nodeType": "YulIf",
															"src": "2716:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2662:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2665:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "2671:4:9",
														"type": ""
													}
												],
												"src": "2631:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2816:116:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2826:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2841:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2844:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2837:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2837:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2826:7:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2904:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2906:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2906:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2906:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2875:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2868:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2868:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "2882:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "2889:7:9"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "2898:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "2885:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2885:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "2879:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2879:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2865:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2865:37:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2858:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2858:45:9"
															},
															"nodeType": "YulIf",
															"src": "2855:71:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2795:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2798:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2804:7:9",
														"type": ""
													}
												],
												"src": "2764:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2985:77:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2995:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3006:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3009:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3002:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3002:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2995:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3034:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3036:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3036:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3036:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3026:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3029:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3023:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3023:10:9"
															},
															"nodeType": "YulIf",
															"src": "3020:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2968:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2971:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2977:3:9",
														"type": ""
													}
												],
												"src": "2937:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3241:176:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3258:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3269:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3251:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3251:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3251:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3292:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3303:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3288:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3288:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3308:2:9",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3281:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3281:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3281:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3331:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3342:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3327:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3327:18:9"
																	},
																	{
																		"hexValue": "496e6465782063616e2774206265206c657373207468656e2030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3347:28:9",
																		"type": "",
																		"value": "Index can't be less then 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3320:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3320:56:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3320:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3385:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3397:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3408:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3393:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3393:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3385:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3a2fd18a5236a01c14eabb339146d9a0f8ce497bbcbaf2cfc134e83398c0726e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3218:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3232:4:9",
														"type": ""
													}
												],
												"src": "3067:350:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:164:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3613:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3624:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3606:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3606:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3647:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3658:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3643:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3643:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3663:2:9",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3636:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3636:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3636:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3686:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3697:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3682:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3682:18:9"
																	},
																	{
																		"hexValue": "53656e6420536f6d65204d656d65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3702:16:9",
																		"type": "",
																		"value": "Send Some Meme"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3675:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3675:44:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3675:44:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3728:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3740:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3751:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3736:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3736:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3728:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1e959a285e43b242539206d7aeb580dab96669d53083eb53a901cc352065b41__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3573:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3587:4:9",
														"type": ""
													}
												],
												"src": "3422:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3939:163:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3956:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3967:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3949:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3949:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3949:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3990:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4001:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3986:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3986:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4006:2:9",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3979:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3979:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3979:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4029:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4040:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4025:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4025:18:9"
																	},
																	{
																		"hexValue": "53656e64204d6f726520455448",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4045:15:9",
																		"type": "",
																		"value": "Send More ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4018:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4018:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4018:43:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4070:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4082:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4093:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4078:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4078:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4070:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f217f4029b3c2ea1dfaeee069952be2dcf9aed543c82bb251eb99c6e5f4f6f3d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3916:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3930:4:9",
														"type": ""
													}
												],
												"src": "3765:337:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4236:145:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4246:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4258:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4269:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4254:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4254:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4246:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4288:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4303:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4319:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4324:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4315:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4315:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4328:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4311:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4311:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4299:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4299:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4281:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4281:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4281:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4352:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4363:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4348:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4348:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4368:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4341:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4341:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4341:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4197:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4208:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4216:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4227:4:9",
														"type": ""
													}
												],
												"src": "4107:274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4464:199:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4510:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4519:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4522:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4512:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4512:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4512:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4485:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4494:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4481:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4481:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4506:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4477:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4477:32:9"
															},
															"nodeType": "YulIf",
															"src": "4474:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4535:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4554:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4548:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4548:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4539:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4617:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4626:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4629:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4619:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4619:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4619:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4586:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4607:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4600:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4600:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4593:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4593:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4583:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4583:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4576:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4576:40:9"
															},
															"nodeType": "YulIf",
															"src": "4573:60:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4642:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4652:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4642:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4430:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4441:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4453:6:9",
														"type": ""
													}
												],
												"src": "4386:277:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4797:119:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4807:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4819:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4830:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4815:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4815:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4807:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4849:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4860:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4842:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4842:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4842:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4887:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4898:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4883:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4883:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4903:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4876:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4876:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4876:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4758:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4769:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4777:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4788:4:9",
														"type": ""
													}
												],
												"src": "4668:248:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5095:164:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5112:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5123:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5105:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5105:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5105:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5146:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5157:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5142:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5142:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5162:2:9",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5135:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5135:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5135:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5185:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5196:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5181:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5181:18:9"
																	},
																	{
																		"hexValue": "53656e64206d6f7265204d454d45",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5201:16:9",
																		"type": "",
																		"value": "Send more MEME"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5174:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5174:44:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5174:44:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5227:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5239:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5250:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5235:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5235:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5227:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a846ae426b95dae7130b856727d5256e6d2011b269481b9be8507efe8d0d207e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5072:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5086:4:9",
														"type": ""
													}
												],
												"src": "4921:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5438:163:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5455:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5466:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5448:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5448:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5448:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5489:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5500:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5485:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5485:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5505:2:9",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5478:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5478:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5478:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5528:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5539:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5524:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5524:18:9"
																	},
																	{
																		"hexValue": "53656e64206d6f726520455448",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5544:15:9",
																		"type": "",
																		"value": "Send more ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5517:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5517:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5517:43:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5569:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5581:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5592:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5577:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5577:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5569:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_78b7994db21b321ba8531e19f302fa7a3e3fe17bff2fbaa020f4bcef4cd665f8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5415:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5429:4:9",
														"type": ""
													}
												],
												"src": "5264:337:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5780:171:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5797:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5808:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5790:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5790:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5790:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5831:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5842:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5827:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5827:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5847:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5820:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5820:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5820:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5870:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5881:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5866:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5866:18:9"
																	},
																	{
																		"hexValue": "537461636b696e672052617465206e6f74206d6574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5886:23:9",
																		"type": "",
																		"value": "Stacking Rate not met"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5859:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5859:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5859:51:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5919:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5931:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5942:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5927:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5927:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5919:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5f3a7037a6f515e768f09bbd7b942e7ec8e428cdd68ed2428de9d02c6ace4c1a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5757:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5771:4:9",
														"type": ""
													}
												],
												"src": "5606:345:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6130:163:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6147:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6158:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6140:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6140:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6140:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6181:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6192:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6177:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6177:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6197:2:9",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6170:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6170:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6170:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6220:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6231:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6216:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6216:18:9"
																	},
																	{
																		"hexValue": "53656e6420536f6d6520455448",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6236:15:9",
																		"type": "",
																		"value": "Send Some ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6209:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6209:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6209:43:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6261:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6273:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6284:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6269:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6269:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6261:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ca05f8819ffb49eed362c8482e2f89607806b624518b85b488890406834d3efe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6107:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6121:4:9",
														"type": ""
													}
												],
												"src": "5956:337:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6379:103:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6425:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6434:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6437:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6427:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6427:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6427:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6400:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6409:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6396:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6396:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6421:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6392:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:32:9"
															},
															"nodeType": "YulIf",
															"src": "6389:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6450:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6466:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6460:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6460:16:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6450:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6345:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6356:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6368:6:9",
														"type": ""
													}
												],
												"src": "6298:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6661:176:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6678:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6689:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6671:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6671:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6671:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6712:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6723:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6708:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6708:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6728:2:9",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6701:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6701:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6701:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6751:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6762:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6747:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6747:18:9"
																	},
																	{
																		"hexValue": "596f7520646f6e2774206861766520656e6f756768206d656d65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6767:28:9",
																		"type": "",
																		"value": "You don't have enough meme"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6740:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6740:56:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6740:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6805:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6817:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6828:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6813:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6813:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6805:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b99b2e78c78f1318a3232374cbc7b00c7eadb27370706844a7052723adaf5ddc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6638:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6652:4:9",
														"type": ""
													}
												],
												"src": "6487:350:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6999:218:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7009:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7021:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7032:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7017:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7017:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7009:4:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7044:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7062:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7067:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7058:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7058:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7071:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7054:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7054:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7048:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7089:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7104:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7112:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7100:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7100:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7082:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7082:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7082:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7136:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7147:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7132:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7132:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7156:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7164:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7152:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7152:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7125:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7125:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7125:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7188:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7199:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7184:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7184:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7204:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7177:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7177:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7177:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6952:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6963:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6971:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6979:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6990:4:9",
														"type": ""
													}
												],
												"src": "6842:375:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7396:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7413:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7424:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7406:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7406:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7406:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7447:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7458:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7443:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7443:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7463:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7436:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7436:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7436:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7486:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7497:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7482:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7482:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7502:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7475:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7475:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7475:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7557:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7568:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7553:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7553:18:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7573:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7546:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7591:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7603:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7614:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7599:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7599:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7591:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7373:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7387:4:9",
														"type": ""
													}
												],
												"src": "7222:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7803:166:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7820:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7831:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7813:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7813:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7813:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7854:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7865:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7850:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7850:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7870:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7843:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7843:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7843:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7893:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7904:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7889:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7889:18:9"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7909:18:9",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7882:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7882:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7882:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7937:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7949:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7960:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7945:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7945:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7937:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7780:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7794:4:9",
														"type": ""
													}
												],
												"src": "7629:340:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8006:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8023:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8030:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8035:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8026:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8026:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8016:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8016:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8016:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8063:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8066:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8056:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8056:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8056:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8087:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8090:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8080:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8080:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8080:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "7974:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8280:305:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8297:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8308:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8290:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8290:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8290:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8331:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8342:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8327:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8327:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8347:2:9",
																		"type": "",
																		"value": "75"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8320:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8320:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8320:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8370:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8381:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8366:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8366:18:9"
																	},
																	{
																		"hexValue": "536f7272792043757272656e746c79207468697320636f6e747261637420646f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8386:34:9",
																		"type": "",
																		"value": "Sorry Currently this contract do"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8359:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8359:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8359:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8441:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8452:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8437:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8437:18:9"
																	},
																	{
																		"hexValue": "65736e27742068617665204d656d6520746f2072657475726e2c20436865636b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8457:34:9",
																		"type": "",
																		"value": "esn't have Meme to return, Check"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8430:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8430:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8430:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8512:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8523:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8508:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8508:19:9"
																	},
																	{
																		"hexValue": "206261636b20536f6f6e21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8529:13:9",
																		"type": "",
																		"value": " back Soon!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8501:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:42:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8501:42:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8552:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8564:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8575:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8560:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8560:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8552:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_420e5b55c2a1e24d83b9e05813ebfcbc021e37999e94a679003aeae679b03f0b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8257:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8271:4:9",
														"type": ""
													}
												],
												"src": "8106:479:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8764:304:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8781:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8792:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8774:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8774:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8774:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8815:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8826:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8811:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8811:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8831:2:9",
																		"type": "",
																		"value": "74"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8804:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8804:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8804:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8854:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8865:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8850:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8850:18:9"
																	},
																	{
																		"hexValue": "536f7272792043757272656e746c79207468697320636f6e747261637420646f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8870:34:9",
																		"type": "",
																		"value": "Sorry Currently this contract do"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8843:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8843:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8843:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8925:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8936:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8921:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8921:18:9"
																	},
																	{
																		"hexValue": "65736e277420686176652045746820746f2072657475726e2c20436865636b20",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8941:34:9",
																		"type": "",
																		"value": "esn't have Eth to return, Check "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8914:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8914:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8996:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9007:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8992:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8992:19:9"
																	},
																	{
																		"hexValue": "6261636b20536f6f6e21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9013:12:9",
																		"type": "",
																		"value": "back Soon!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8985:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8985:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8985:41:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9035:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9047:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9058:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9043:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9043:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9035:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4a553fec1f423c8cd4748b1aaff7e9000972fd303793b6f6abe7b83513bc6b9a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8741:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8755:4:9",
														"type": ""
													}
												],
												"src": "8590:478:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9247:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9264:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9275:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9257:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9257:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9257:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9298:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9309:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9294:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9294:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9314:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9287:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9287:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9287:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9337:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9348:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9333:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9333:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9353:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9326:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9326:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9326:62:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9397:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9409:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9420:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9405:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9405:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9397:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9224:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9238:4:9",
														"type": ""
													}
												],
												"src": "9073:356:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9481:88:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9512:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9514:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9514:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9514:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9497:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9508:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9504:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9504:6:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9494:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9494:17:9"
															},
															"nodeType": "YulIf",
															"src": "9491:43:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9543:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9554:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9561:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9550:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9550:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "9543:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9463:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9473:3:9",
														"type": ""
													}
												],
												"src": "9434:135:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9748:169:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9765:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9776:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9758:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9758:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9758:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9799:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9810:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9795:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9795:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9815:2:9",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9788:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9788:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9788:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9838:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9849:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9834:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9834:18:9"
																	},
																	{
																		"hexValue": "496e646578206f7574206f6620626f756e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9854:21:9",
																		"type": "",
																		"value": "Index out of bounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9827:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9827:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9827:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9885:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9897:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9908:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9893:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9893:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9885:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9725:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9739:4:9",
														"type": ""
													}
												],
												"src": "9574:343:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9954:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9971:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9978:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9983:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9974:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9974:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9964:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9964:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9964:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10011:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10014:4:9",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10004:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10004:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10004:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10035:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10038:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10028:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10028:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10028:15:9"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "9922:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10228:170:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10245:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10256:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10238:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10238:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10238:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10279:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10290:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10275:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10275:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10295:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10268:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10268:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10268:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10318:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10329:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10314:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10314:18:9"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10334:22:9",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10307:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10307:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10307:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10366:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10378:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10389:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10374:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10374:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10366:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10205:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10219:4:9",
														"type": ""
													}
												],
												"src": "10054:344:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Stack_Struct_$993_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stack_Struct_$993_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, mload(_3))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            pos := add(pos, 0x60)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Not enough liquidity\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_3a2fd18a5236a01c14eabb339146d9a0f8ce497bbcbaf2cfc134e83398c0726e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Index can't be less then 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a1e959a285e43b242539206d7aeb580dab96669d53083eb53a901cc352065b41__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Send Some Meme\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f217f4029b3c2ea1dfaeee069952be2dcf9aed543c82bb251eb99c6e5f4f6f3d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Send More ETH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_a846ae426b95dae7130b856727d5256e6d2011b269481b9be8507efe8d0d207e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Send more MEME\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_78b7994db21b321ba8531e19f302fa7a3e3fe17bff2fbaa020f4bcef4cd665f8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Send more ETH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5f3a7037a6f515e768f09bbd7b942e7ec8e428cdd68ed2428de9d02c6ace4c1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Stacking Rate not met\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ca05f8819ffb49eed362c8482e2f89607806b624518b85b488890406834d3efe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Send Some ETH\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_b99b2e78c78f1318a3232374cbc7b00c7eadb27370706844a7052723adaf5ddc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"You don't have enough meme\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_420e5b55c2a1e24d83b9e05813ebfcbc021e37999e94a679003aeae679b03f0b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 75)\n        mstore(add(headStart, 64), \"Sorry Currently this contract do\")\n        mstore(add(headStart, 96), \"esn't have Meme to return, Check\")\n        mstore(add(headStart, 128), \" back Soon!\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_4a553fec1f423c8cd4748b1aaff7e9000972fd303793b6f6abe7b83513bc6b9a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"Sorry Currently this contract do\")\n        mstore(add(headStart, 96), \"esn't have Eth to return, Check \")\n        mstore(add(headStart, 128), \"back Soon!\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Index out of bounds\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100d9575f3560e01c80638da5cb5b1161007c578063dc9031c411610057578063dc9031c414610208578063e4849b321461021b578063e8bca8b81461023a578063f2fde38b1461025b575f80fd5b80638da5cb5b146101ac5780639c74f05d146101e0578063d96a094a146101f5575f80fd5b80635c572ed0116100b75780635c572ed0146101445780635c975abb14610163578063715018a6146101845780638456cb5914610198575f80fd5b80631a753fed146100dd578063200061df1461010f5780633f4ba83a14610130575b5f80fd5b3480156100e8575f80fd5b506100fc6100f73660046114a1565b61027a565b6040519081526020015b60405180910390f35b34801561011a575f80fd5b5061012e6101293660046114a1565b61038d565b005b34801561013b575f80fd5b5061012e6103a1565b34801561014f575f80fd5b506100fc61015e3660046114a1565b6103b3565b34801561016e575f80fd5b505f5460ff166040519015158152602001610106565b34801561018f575f80fd5b5061012e61048b565b3480156101a3575f80fd5b5061012e61049c565b3480156101b7575f80fd5b505f5461010090046001600160a01b03166040516001600160a01b039091168152602001610106565b3480156101eb575f80fd5b506100fc60045481565b61012e6102033660046114a1565b6104ac565b61012e6102163660046114a1565b6106a6565b348015610226575f80fd5b5061012e6102353660046114a1565b610799565b348015610245575f80fd5b5061024e6109ff565b60405161010691906114b8565b348015610266575f80fd5b5061012e610275366004611510565b610a83565b5f610283610af9565b5f600554116102d05760405162461bcd60e51b81526020600482015260146024820152734e6f7420656e6f756768206c697175696469747960601b60448201526064015b60405180910390fd5b5f806006545f036102fc578360016005546102eb9190611551565b6102f59190611570565b905061031a565b8360065460055461030d9190611551565b6103179190611570565b90505b805f036103375760016005546103309190611551565b9150610348565b806005546103459190611551565b91505b5f600654836103579190611570565b90505f6008546009548361036b9190611589565b6103759190611551565b90505f61038282846115a0565b979650505050505050565b610395610af9565b61039e81610b3e565b50565b6103a9610e87565b6103b1610ee6565b565b5f6103bc610af9565b5f600554116104045760405162461bcd60e51b81526020600482015260146024820152734e6f7420656e6f756768206c697175696469747960601b60448201526064016102c7565b5f806007545f036104305783600160055461041f9190611551565b6104299190611570565b915061044e565b836007546005546104419190611551565b61044b9190611570565b91505b815f0361046b5760016005546104649190611551565b905061047c565b816005546104799190611551565b90505b5f600754826103579190611570565b610493610e87565b6103b15f610f37565b6104a4610e87565b6103b1610f8f565b6104b4610af9565b5f81116104f45760405162461bcd60e51b815260206004820152600e60248201526d53656e6420536f6d65204d656d6560901b60448201526064016102c7565b5f6104fe826103b3565b9050348111156105405760405162461bcd60e51b815260206004820152600d60248201526c0a6cadcc8409adee4ca408aa89609b1b60448201526064016102c7565b60015460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303815f875af115801561058e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105b291906115b3565b50336108fc6105c18334611570565b6040518115909202915f818181858888f193505050501580156105e6573d5f803e3d5ffd5b506008546009546105f790826115a0565b6106019084611589565b61060b9190611551565b60035f61061b6201518042611551565b81526020019081526020015f205f82825461063691906115a0565b925050819055508160065f82825461064e9190611570565b90915550506006546005546106639190611551565b600755604080518381526020810183905233917f1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed91015b60405180910390a25050565b6106ae610af9565b5f81116106ee5760405162461bcd60e51b815260206004820152600e60248201526d53656e64206d6f7265204d454d4560901b60448201526064016102c7565b5f341161072d5760405162461bcd60e51b815260206004820152600d60248201526c0a6cadcc840dadee4ca408aa89609b1b60448201526064016102c7565b806008543461073c9190611589565b6107469190611551565b600454111561078f5760405162461bcd60e51b815260206004820152601560248201527414dd1858dada5b99c814985d19481b9bdd081b595d605a1b60448201526064016102c7565b61039e8134610fcb565b6107a1610af9565b5f81116107e05760405162461bcd60e51b815260206004820152600d60248201526c0a6cadcc840a6dedaca408aa89609b1b60448201526064016102c7565b5f6107ea8261027a565b6001546040516370a0823160e01b81523360048201529192506001600160a01b0316906370a0823190602401602060405180830381865afa158015610831573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061085591906115d2565b8111156108a45760405162461bcd60e51b815260206004820152601a60248201527f596f7520646f6e2774206861766520656e6f756768206d656d6500000000000060448201526064016102c7565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303815f875af11580156108f8573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061091c91906115b3565b50604051339083156108fc029084905f818181858888f19350505050158015610947573d5f803e3d5ffd5b5060085460095461095890826115a0565b6109629083611589565b61096c9190611551565b60035f61097c6201518042611551565b81526020019081526020015f205f82825461099791906115a0565b925050819055508160075f8282546109af9190611570565b90915550506007546005546109c49190611551565b600655604080518281526020810184905233917fed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a910161069a565b335f908152600260209081526040808320805482518185028101850190935280835260609492939192909184015b82821015610a7a578382905f5260205f2090600302016040518060600160405290815f82015481526020016001820154815260200160028201548152505081526020019060010190610a2d565b50505050905090565b610a8b610e87565b6001600160a01b038116610af05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102c7565b61039e81610f37565b5f5460ff16156103b15760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016102c7565b335f908152600260205260408120805483908110610b5e57610b5e6115e9565b905f5260205f2090600302016040518060600160405290815f82015481526020016001820154815260200160028201548152505090505f610b9d61112d565b82516020840151919250905f90610bb59084906115a0565b6001546040516370a0823160e01b815230600482015291925083916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610c00573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c2491906115d2565b1015610cac5760405162461bcd60e51b815260206004820152604b60248201527f536f7272792043757272656e746c79207468697320636f6e747261637420646f60448201527f65736e27742068617665204d656d6520746f2072657475726e2c20436865636b60648201526a206261636b20536f6f6e2160a81b608482015260a4016102c7565b80471015610d355760405162461bcd60e51b815260206004820152604a60248201527f536f7272792043757272656e746c79207468697320636f6e747261637420646f60448201527f65736e277420686176652045746820746f2072657475726e2c20436865636b206064820152696261636b20536f6f6e2160b01b608482015260a4016102c7565b8160065f828254610d469190611570565b925050819055508060075f828254610d5e9190611570565b909155505060015460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303815f875af1158015610db1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dd591906115b3565b50604051339082156108fc029083905f818181858888f19350505050158015610e00573d5f803e3d5ffd5b506006545f03610e13575f600455610e34565b600654600854600754610e269190611589565b610e309190611551565b6004555b610e3d856112e7565b610e45611444565b604080518381526020810183905233917fbb564df1f5d4ebb97b073adcab505c7796a37035ac5d14f51269660939c39cf4910160405180910390a25050505050565b5f546001600160a01b036101009091041633146103b15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102c7565b610eee611459565b5f805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b5f80546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b610f97610af9565b5f805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f1a3390565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303815f875af115801561101f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061104391906115b3565b508160065f82825461105591906115a0565b925050819055508060075f82825461106d91906115a0565b909155505060408051606081018252838152602080820184815242838501908152335f9081526002808552958120805460018181018355918352949091208551600390950201938455915191830191909155519201919091556006546008546007546110d99190611589565b6110e39190611551565b6004556110ee611444565b6040805184815234602082015233917f5caad8f5613b6f1d592fc8c69d8f0999453740f0806c754f20cc92f3d4b2b1b6910160405180910390a2505050565b5f80806003816111406201518042611551565b81526020019081526020015f205411156112e257335f90815260026020526040812080549091805b8281116111e8575f848281548110611182576111826115e9565b905f5260205f2090600302016040518060600160405290815f82015481526020016001820154815260200160028201548152505090508060400151426111c89190611570565b6111d290846115a0565b92505080806111e0906115fd565b915050611168565b505f5b8281116112dd575f848281548110611205576112056115e9565b5f9182526020808320604080516060810182526003909402909101805480855260018201549385019390935260020154908301526006546008549294509161124c91611589565b6112569190611551565b90505f8260400151426112699190611570565b90505f6112768683611551565b6005549091508160035f61128d6201518042611551565b81526020019081526020015f2054856112a69190611589565b6112b09190611589565b6112ba9190611551565b6112c4908a6115a0565b98505050505080806112d5906115fd565b9150506111eb565b505050505b919050565b335f90815260026020526040902054811061133a5760405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b60448201526064016102c7565b805b335f9081526002602052604090205461135790600190611570565b81101561140057335f9081526002602052604090206113778260016115a0565b81548110611387576113876115e9565b905f5260205f20906003020160025f336001600160a01b03166001600160a01b031681526020019081526020015f2082815481106113c7576113c76115e9565b5f9182526020909120825460039092020190815560018083015490820155600291820154910155806113f8816115fd565b91505061133c565b50335f90815260026020526040902080548061141e5761141e611615565b5f8281526020812060035f19909301928302018181556001810182905560020155905550565b6007546006546114549190611589565b600555565b5f5460ff166103b15760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016102c7565b5f602082840312156114b1575f80fd5b5035919050565b602080825282518282018190525f919060409081850190868401855b8281101561150357815180518552868101518786015285015185850152606090930192908501906001016114d4565b5091979650505050505050565b5f60208284031215611520575f80fd5b81356001600160a01b0381168114611536575f80fd5b9392505050565b634e487b7160e01b5f52601160045260245ffd5b5f8261156b57634e487b7160e01b5f52601260045260245ffd5b500490565b818103818111156115835761158361153d565b92915050565b80820281158282048414176115835761158361153d565b808201808211156115835761158361153d565b5f602082840312156115c3575f80fd5b81518015158114611536575f80fd5b5f602082840312156115e2575f80fd5b5051919050565b634e487b7160e01b5f52603260045260245ffd5b5f6001820161160e5761160e61153d565b5060010190565b634e487b7160e01b5f52603160045260245ffdfea2646970667358221220c72032e6ecbf6c4ac3929d7553730789b0ff574d3ec0cd0e3262f9ab8aac6e7664736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD9 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xDC9031C4 GT PUSH2 0x57 JUMPI DUP1 PUSH4 0xDC9031C4 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xE8BCA8B8 EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x25B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x9C74F05D EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x1F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C572ED0 GT PUSH2 0xB7 JUMPI DUP1 PUSH4 0x5C572ED0 EQ PUSH2 0x144 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x198 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A753FED EQ PUSH2 0xDD JUMPI DUP1 PUSH4 0x200061DF EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x130 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0xF7 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x11A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x129 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x3A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH2 0x15E CALLDATASIZE PUSH1 0x4 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x3B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x48B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x49C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x106 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xFC PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x12E PUSH2 0x203 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x4AC JUMP JUMPDEST PUSH2 0x12E PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x6A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x14A1 JUMP JUMPDEST PUSH2 0x799 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x245 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x24E PUSH2 0x9FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x14B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x12E PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0x1510 JUMP JUMPDEST PUSH2 0xA83 JUMP JUMPDEST PUSH0 PUSH2 0x283 PUSH2 0xAF9 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD GT PUSH2 0x2D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F7420656E6F756768206C6971756964697479 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x6 SLOAD PUSH0 SUB PUSH2 0x2FC JUMPI DUP4 PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST SWAP1 POP PUSH2 0x31A JUMP JUMPDEST DUP4 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x30D SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH0 SUB PUSH2 0x337 JUMPI PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP PUSH2 0x348 JUMP JUMPDEST DUP1 PUSH1 0x5 SLOAD PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH0 PUSH1 0x6 SLOAD DUP4 PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD DUP4 PUSH2 0x36B SWAP2 SWAP1 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x375 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x382 DUP3 DUP5 PUSH2 0x15A0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x395 PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x39E DUP2 PUSH2 0xB3E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3A9 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x3B1 PUSH2 0xEE6 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x3BC PUSH2 0xAF9 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD GT PUSH2 0x404 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F7420656E6F756768206C6971756964697479 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x7 SLOAD PUSH0 SUB PUSH2 0x430 JUMPI DUP4 PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x41F SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST SWAP2 POP PUSH2 0x44E JUMP JUMPDEST DUP4 PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH2 0x441 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH2 0x44B SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP2 PUSH0 SUB PUSH2 0x46B JUMPI PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST SWAP1 POP PUSH2 0x47C JUMP JUMPDEST DUP2 PUSH1 0x5 SLOAD PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH2 0x493 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x3B1 PUSH0 PUSH2 0xF37 JUMP JUMPDEST PUSH2 0x4A4 PUSH2 0xE87 JUMP JUMPDEST PUSH2 0x3B1 PUSH2 0xF8F JUMP JUMPDEST PUSH2 0x4B4 PUSH2 0xAF9 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x4F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x53656E6420536F6D65204D656D65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST PUSH0 PUSH2 0x4FE DUP3 PUSH2 0x3B3 JUMP JUMPDEST SWAP1 POP CALLVALUE DUP2 GT ISZERO PUSH2 0x540 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA6CADCC8409ADEE4CA408AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x58E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5B2 SWAP2 SWAP1 PUSH2 0x15B3 JUMP JUMPDEST POP CALLER PUSH2 0x8FC PUSH2 0x5C1 DUP4 CALLVALUE PUSH2 0x1570 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x5E6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x5F7 SWAP1 DUP3 PUSH2 0x15A0 JUMP JUMPDEST PUSH2 0x601 SWAP1 DUP5 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x3 PUSH0 PUSH2 0x61B PUSH3 0x15180 TIMESTAMP PUSH2 0x1551 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x636 SWAP2 SWAP1 PUSH2 0x15A0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x64E SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x663 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x1CBC5AB135991BD2B6A4B034A04AA2AA086DAC1371CB9B16B8B5E2ED6B036BED SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x6AE PUSH2 0xAF9 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x6EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x53656E64206D6F7265204D454D45 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x72D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA6CADCC840DADEE4CA408AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST DUP1 PUSH1 0x8 SLOAD CALLVALUE PUSH2 0x73C SWAP2 SWAP1 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x4 SLOAD GT ISZERO PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14DD1858DADA5B99C814985D19481B9BDD081B595D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST PUSH2 0x39E DUP2 CALLVALUE PUSH2 0xFCB JUMP JUMPDEST PUSH2 0x7A1 PUSH2 0xAF9 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x7E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA6CADCC840A6DEDACA408AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST PUSH0 PUSH2 0x7EA DUP3 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x831 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x855 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x8A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F756768206D656D65000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8F8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x91C SWAP2 SWAP1 PUSH2 0x15B3 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x947 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x958 SWAP1 DUP3 PUSH2 0x15A0 JUMP JUMPDEST PUSH2 0x962 SWAP1 DUP4 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x96C SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x3 PUSH0 PUSH2 0x97C PUSH3 0x15180 TIMESTAMP PUSH2 0x1551 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x997 SWAP2 SWAP1 PUSH2 0x15A0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9AF SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH2 0x9C4 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xED7A144FAD14804D5C249145E3E0E2B63A9EB455B76AEE5BC92D711E9BBA3E4A SWAP2 ADD PUSH2 0x69A JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xA7A JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA2D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA8B PUSH2 0xE87 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xAF0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2C7 JUMP JUMPDEST PUSH2 0x39E DUP2 PUSH2 0xF37 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xB5E JUMPI PUSH2 0xB5E PUSH2 0x15E9 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH2 0xB9D PUSH2 0x112D JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD SWAP2 SWAP3 POP SWAP1 PUSH0 SWAP1 PUSH2 0xBB5 SWAP1 DUP5 SWAP1 PUSH2 0x15A0 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP DUP4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC00 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC24 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST LT ISZERO PUSH2 0xCAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792043757272656E746C79207468697320636F6E747261637420646F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65736E27742068617665204D656D6520746F2072657475726E2C20436865636B PUSH1 0x64 DUP3 ADD MSTORE PUSH11 0x206261636B20536F6F6E21 PUSH1 0xA8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x2C7 JUMP JUMPDEST DUP1 SELFBALANCE LT ISZERO PUSH2 0xD35 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792043757272656E746C79207468697320636F6E747261637420646F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65736E277420686176652045746820746F2072657475726E2C20436865636B20 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0x6261636B20536F6F6E21 PUSH1 0xB0 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x2C7 JUMP JUMPDEST DUP2 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD46 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD5E SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDB1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDD5 SWAP2 SWAP1 PUSH2 0x15B3 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xE00 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH0 SUB PUSH2 0xE13 JUMPI PUSH0 PUSH1 0x4 SSTORE PUSH2 0xE34 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0xE26 SWAP2 SWAP1 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0xE30 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMPDEST PUSH2 0xE3D DUP6 PUSH2 0x12E7 JUMP JUMPDEST PUSH2 0xE45 PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xBB564DF1F5D4EBB97B073ADCAB505C7796A37035AC5D14F51269660939C39CF4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x3B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST PUSH2 0xEEE PUSH2 0x1459 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR DUP6 SSTORE PUSH1 0x40 MLOAD SWAP4 DIV SWAP2 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF97 PUSH2 0xAF9 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xF1A CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x101F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1043 SWAP2 SWAP1 PUSH2 0x15B3 JUMP JUMPDEST POP DUP2 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1055 SWAP2 SWAP1 PUSH2 0x15A0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x106D SWAP2 SWAP1 PUSH2 0x15A0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE TIMESTAMP DUP4 DUP6 ADD SWAP1 DUP2 MSTORE CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP1 DUP6 MSTORE SWAP6 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP4 MSTORE SWAP5 SWAP1 SWAP2 KECCAK256 DUP6 MLOAD PUSH1 0x3 SWAP1 SWAP6 MUL ADD SWAP4 DUP5 SSTORE SWAP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0x10D9 SWAP2 SWAP1 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x10E3 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH2 0x10EE PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0x5CAAD8F5613B6F1D592FC8C69D8F0999453740F0806C754F20CC92F3D4B2B1B6 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP1 PUSH1 0x3 DUP2 PUSH2 0x1140 PUSH3 0x15180 TIMESTAMP PUSH2 0x1551 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD GT ISZERO PUSH2 0x12E2 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP1 JUMPDEST DUP3 DUP2 GT PUSH2 0x11E8 JUMPI PUSH0 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1182 JUMPI PUSH2 0x1182 PUSH2 0x15E9 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x11C8 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST PUSH2 0x11D2 SWAP1 DUP5 PUSH2 0x15A0 JUMP JUMPDEST SWAP3 POP POP DUP1 DUP1 PUSH2 0x11E0 SWAP1 PUSH2 0x15FD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1168 JUMP JUMPDEST POP PUSH0 JUMPDEST DUP3 DUP2 GT PUSH2 0x12DD JUMPI PUSH0 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1205 JUMPI PUSH2 0x1205 PUSH2 0x15E9 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP1 DUP6 MSTORE PUSH1 0x1 DUP3 ADD SLOAD SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 ADD SLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD SWAP3 SWAP5 POP SWAP2 PUSH2 0x124C SWAP2 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x1256 SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH1 0x40 ADD MLOAD TIMESTAMP PUSH2 0x1269 SWAP2 SWAP1 PUSH2 0x1570 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1276 DUP7 DUP4 PUSH2 0x1551 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP DUP2 PUSH1 0x3 PUSH0 PUSH2 0x128D PUSH3 0x15180 TIMESTAMP PUSH2 0x1551 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP6 PUSH2 0x12A6 SWAP2 SWAP1 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x12B0 SWAP2 SWAP1 PUSH2 0x1589 JUMP JUMPDEST PUSH2 0x12BA SWAP2 SWAP1 PUSH2 0x1551 JUMP JUMPDEST PUSH2 0x12C4 SWAP1 DUP11 PUSH2 0x15A0 JUMP JUMPDEST SWAP9 POP POP POP POP POP DUP1 DUP1 PUSH2 0x12D5 SWAP1 PUSH2 0x15FD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11EB JUMP JUMPDEST POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT PUSH2 0x133A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST DUP1 JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1357 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1570 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1400 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1377 DUP3 PUSH1 0x1 PUSH2 0x15A0 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1387 JUMPI PUSH2 0x1387 PUSH2 0x15E9 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 PUSH0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x13C7 JUMPI PUSH2 0x13C7 PUSH2 0x15E9 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x2 SWAP2 DUP3 ADD SLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0x13F8 DUP2 PUSH2 0x15FD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x133C JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x141E JUMPI PUSH2 0x141E PUSH2 0x1615 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x3 PUSH0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x2 ADD SSTORE SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0x1454 SWAP2 SWAP1 PUSH2 0x1589 JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND PUSH2 0x3B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x2C7 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1503 JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 ADD MLOAD DUP6 DUP6 ADD MSTORE PUSH1 0x60 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x14D4 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1520 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1536 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH2 0x156B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1583 JUMPI PUSH2 0x1583 PUSH2 0x153D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1583 JUMPI PUSH2 0x1583 PUSH2 0x153D JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1583 JUMPI PUSH2 0x1583 PUSH2 0x153D JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1536 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x160E JUMPI PUSH2 0x160E PUSH2 0x153D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC7 KECCAK256 ORIGIN 0xE6 0xEC 0xBF PUSH13 0x4AC3929D7553730789B0FF574D RETURNDATACOPY 0xC0 0xCD 0xE ORIGIN PUSH3 0xF9AB8A 0xAC PUSH15 0x7664736F6C63430008140033000000 ",
							"sourceMap": "243:7548:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5519:653;;;;;;;;;;-1:-1:-1;5519:653:7;;;;;:::i;:::-;;:::i;:::-;;;345:25:9;;;333:2;318:18;5519:653:7;;;;;;;;1842:143;;;;;;;;;;-1:-1:-1;1842:143:7;;;;;:::i;:::-;;:::i;:::-;;1246:63;;;;;;;;;;;;;:::i;4864:649::-;;;;;;;;;;-1:-1:-1;4864:649:7;;;;;:::i;:::-;;:::i;1615:84:1:-;;;;;;;;;;-1:-1:-1;1662:4:1;1685:7;;;1615:84;;546:14:9;;539:22;521:41;;509:2;494:18;1615:84:1;381:187:9;1824:101:0;;;;;;;;;;;;;:::i;1181:59:7:-;;;;;;;;;;;;;:::i;1201:85:0:-;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;;;;-1:-1:-1;;;;;1273:6:0;1201:85;;-1:-1:-1;;;;;737:32:9;;;719:51;;707:2;692:18;1201:85:0;573:203:9;871:27:7;;;;;;;;;;;;;;;;6178:578;;;;;;:::i;:::-;;:::i;1493:343::-;;;;;;:::i;:::-;;:::i;6762:594::-;;;;;;;;;;-1:-1:-1;6762:594:7;;;;;:::i;:::-;;:::i;1379:108::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2074:198:0:-;;;;;;;;;;-1:-1:-1;2074:198:0;;;;;:::i;:::-;;:::i;5519:653:7:-;5595:7;1239:19:1;:17;:19::i;:::-;5627:1:7::1;5622:2;;:6;5614:39;;;::::0;-1:-1:-1;;;5614:39:7;;2130:2:9;5614:39:7::1;::::0;::::1;2112:21:9::0;2169:2;2149:18;;;2142:30;-1:-1:-1;;;2188:18:9;;;2181:50;2248:18;;5614:39:7::1;;;;;;;;;5663:10;5687::::0;5715:2:::1;;5721:1;5715:7:::0;5711:118:::1;;5752:10;5748:1;5743:2;;:6;;;;:::i;:::-;:19;;;;:::i;:::-;5738:24;;5711:118;;;5808:10;5803:2;;5798;;:7;;;;:::i;:::-;:20;;;;:::i;:::-;5793:25;;5711:118;5842:2;5848:1;5842:7:::0;5838:92:::1;;5875:1;5870:2;;:6;;;;:::i;:::-;5865:11;;5838:92;;;5917:2;5912;;:7;;;;:::i;:::-;5907:12;;5838:92;5939:30;5977:2;;5972;:7;;;;:::i;:::-;5939:40;;5989:16;6045:9;;6034:7;;6009:22;:32;;;;:::i;:::-;6008:46;;;;:::i;:::-;5989:65:::0;-1:-1:-1;6065:27:7::1;6095:33;5989:65:::0;6095:22;:33:::1;:::i;:::-;6065:63:::0;5519:653;-1:-1:-1;;;;;;;5519:653:7:o;1842:143::-;1239:19:1;:17;:19::i;:::-;1963:15:7::1;1972:5;1963:8;:15::i;:::-;1842:143:::0;:::o;1246:63::-;1094:13:0;:11;:13::i;:::-;1292:10:7::1;:8;:10::i;:::-;1246:63::o:0;4864:649::-;4942:7;1239:19:1;:17;:19::i;:::-;4974:1:7::1;4969:2;;:6;4961:39;;;::::0;-1:-1:-1;;;4961:39:7;;2130:2:9;4961:39:7::1;::::0;::::1;2112:21:9::0;2169:2;2149:18;;;2142:30;-1:-1:-1;;;2188:18:9;;;2181:50;2248:18;;4961:39:7::1;1928:344:9::0;4961:39:7::1;5010:10;5034::::0;5062:2:::1;;5068:1;5062:7:::0;5058:120:::1;;5099:11;5095:1;5090:2;;:6;;;;:::i;:::-;:20;;;;:::i;:::-;5085:25;;5058:120;;;5156:11;5151:2;;5146;;:7;;;;:::i;:::-;:21;;;;:::i;:::-;5141:26;;5058:120;5191:2;5197:1;5191:7:::0;5187:92:::1;;5224:1;5219:2;;:6;;;;:::i;:::-;5214:11;;5187:92;;;5266:2;5261;;:7;;;;:::i;:::-;5256:12;;5187:92;5288:29;5325:2;;5320;:7;;;;:::i;1824:101:0:-:0;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;1181:59:7:-:0;1094:13:0;:11;:13::i;:::-;1225:8:7::1;:6;:8::i;6178:578::-:0;1239:19:1;:17;:19::i;:::-;6273:1:7::1;6259:11;:15;6251:42;;;::::0;-1:-1:-1;;;6251:42:7;;3624:2:9;6251:42:7::1;::::0;::::1;3606:21:9::0;3663:2;3643:18;;;3636:30;-1:-1:-1;;;3682:18:9;;;3675:44;3736:18;;6251:42:7::1;3422:338:9::0;6251:42:7::1;6303:18;6324:25;6337:11;6324:12;:25::i;:::-;6303:46;;6381:9;6367:10;:23;;6359:49;;;::::0;-1:-1:-1;;;6359:49:7;;3967:2:9;6359:49:7::1;::::0;::::1;3949:21:9::0;4006:2;3986:18;;;3979:30;-1:-1:-1;;;4025:18:9;;;4018:43;4078:18;;6359:49:7::1;3765:337:9::0;6359:49:7::1;6419:4;::::0;:38:::1;::::0;-1:-1:-1;;;6419:38:7;;6433:10:::1;6419:38;::::0;::::1;4281:51:9::0;4348:18;;;4341:34;;;-1:-1:-1;;;;;6419:4:7;;::::1;::::0;:13:::1;::::0;4254:18:9;;6419:38:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6475:10:7::1;6467:52;6496:22;6508:10:::0;6496:9:::1;:22;:::i;:::-;6467:52;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;6632:9:7::1;::::0;6608:7:::1;::::0;6596:19:::1;::::0;6632:9;6596:19:::1;:::i;:::-;6581:35;::::0;:11;:35:::1;:::i;:::-;6580:61;;;;:::i;:::-;6530:8;:34;6539:24;6557:6;6539:15;:24;:::i;:::-;6530:34;;;;;;;;;;;;:111;;;;;;;:::i;:::-;;;;;;;;6658:11;6652:2;;:17;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6690:2:7::1;::::0;6685::::1;::::0;:7:::1;::::0;6690:2;6685:7:::1;:::i;:::-;6679:2;:14:::0;6709:40:::1;::::0;;4842:25:9;;;4898:2;4883:18;;4876:34;;;6713:10:7::1;::::0;6709:40:::1;::::0;4815:18:9;6709:40:7::1;;;;;;;;6241:515;6178:578:::0;:::o;1493:343::-;1239:19:1;:17;:19::i;:::-;1589:1:7::1;1575:11;:15;1567:42;;;::::0;-1:-1:-1;;;1567:42:7;;5123:2:9;1567:42:7::1;::::0;::::1;5105:21:9::0;5162:2;5142:18;;;5135:30;-1:-1:-1;;;5181:18:9;;;5174:44;5235:18;;1567:42:7::1;4921:338:9::0;1567:42:7::1;1639:1;1627:9;:13;1619:39;;;::::0;-1:-1:-1;;;1619:39:7;;5466:2:9;1619:39:7::1;::::0;::::1;5448:21:9::0;5505:2;5485:18;;;5478:30;-1:-1:-1;;;5524:18:9;;;5517:43;5577:18;;1619:39:7::1;5264:337:9::0;1619:39:7::1;1731:11;1718:9;;1706;:21;;;;:::i;:::-;1705:37;;;;:::i;:::-;1689:12;;:53;;1668:121;;;::::0;-1:-1:-1;;;1668:121:7;;5808:2:9;1668:121:7::1;::::0;::::1;5790:21:9::0;5847:2;5827:18;;;5820:30;-1:-1:-1;;;5866:18:9;;;5859:51;5927:18;;1668:121:7::1;5606:345:9::0;1668:121:7::1;1799:30;1806:11;1819:9;1799:6;:30::i;6762:594::-:0;1239:19:1;:17;:19::i;:::-;6847:1:7::1;6834:10;:14;6826:40;;;::::0;-1:-1:-1;;;6826:40:7;;6158:2:9;6826:40:7::1;::::0;::::1;6140:21:9::0;6197:2;6177:18;;;6170:30;-1:-1:-1;;;6216:18:9;;;6209:43;6269:18;;6826:40:7::1;5956:337:9::0;6826:40:7::1;6876:17;6896:23;6908:10;6896:11;:23::i;:::-;6951:4;::::0;:26:::1;::::0;-1:-1:-1;;;6951:26:7;;6966:10:::1;6951:26;::::0;::::1;719:51:9::0;6876:43:7;;-1:-1:-1;;;;;;6951:4:7::1;::::0;:14:::1;::::0;692:18:9;;6951:26:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6938:9;:39;;6930:78;;;::::0;-1:-1:-1;;;6930:78:7;;6689:2:9;6930:78:7::1;::::0;::::1;6671:21:9::0;6728:2;6708:18;;;6701:30;6767:28;6747:18;;;6740:56;6813:18;;6930:78:7::1;6487:350:9::0;6930:78:7::1;7018:4;::::0;:55:::1;::::0;-1:-1:-1;;;7018:55:7;;7036:10:::1;7018:55;::::0;::::1;7082:34:9::0;7056:4:7::1;7132:18:9::0;;;7125:43;7184:18;;;7177:34;;;-1:-1:-1;;;;;7018:4:7;;::::1;::::0;:17:::1;::::0;7017:18:9;;7018:55:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;7083:40:7::1;::::0;7091:10:::1;::::0;7083:40;::::1;;;::::0;7112:10;;7083:40:::1;::::0;;;7112:10;7091;7083:40;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;7234:9:7::1;::::0;7210:7:::1;::::0;7198:19:::1;::::0;7234:9;7198:19:::1;:::i;:::-;7185:33;::::0;:9;:33:::1;:::i;:::-;7184:59;;;;:::i;:::-;7134:8;:34;7143:24;7161:6;7143:15;:24;:::i;:::-;7134:34;;;;;;;;;;;;:109;;;;;;;:::i;:::-;;;;;;;;7260:10;7254:2;;:16;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7291:2:7::1;::::0;7286::::1;::::0;:7:::1;::::0;7291:2;7286:7:::1;:::i;:::-;7280:2;:14:::0;7310:39:::1;::::0;;4842:25:9;;;4898:2;4883:18;;4876:34;;;7315:10:7::1;::::0;7310:39:::1;::::0;4815:18:9;7310:39:7::1;4668:248:9::0;1379:108:7;1469:10;1461:19;;;;:7;:19;;;;;;;;1454:26;;;;;;;;;;;;;;;;;1421:21;;1454:26;;1461:19;;1454:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1379:108;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;7424:2:9;2154:73:0::1;::::0;::::1;7406:21:9::0;7463:2;7443:18;;;7436:30;7502:34;7482:18;;;7475:62;-1:-1:-1;;;7553:18:9;;;7546:36;7599:19;;2154:73:0::1;7222:402:9::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;1767:106:1:-:0;1662:4;1685:7;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:1;;7831:2:9;1828:38:1;;;7813:21:9;7870:2;7850:18;;;7843:30;-1:-1:-1;;;7889:18:9;;;7882:46;7945:18;;1828:38:1;7629:340:9;2490:1014:7;2575:10;2542:22;2567:19;;;:7;:19;;;;;:26;;2587:5;;2567:26;;;;;;:::i;:::-;;;;;;;;;;;2542:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2604:11;2618:16;:14;:16::i;:::-;2670:14;;2718:13;;;;2604:30;;-1:-1:-1;2670:14:7;2645:22;;2718:19;;2604:30;;2718:19;:::i;:::-;2769:4;;:29;;-1:-1:-1;;;2769:29:7;;2792:4;2769:29;;;719:51:9;2694:43:7;;-1:-1:-1;2802:14:7;;-1:-1:-1;;;;;2769:4:7;;;;:14;;692:18:9;;2769:29:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;2748:169;;;;-1:-1:-1;;;2748:169:7;;8308:2:9;2748:169:7;;;8290:21:9;8347:2;8327:18;;;8320:30;8386:34;8366:18;;;8359:62;8457:34;8437:18;;;8430:62;-1:-1:-1;;;8508:19:9;;;8501:42;8560:19;;2748:169:7;8106:479:9;2748:169:7;2973:13;2948:21;:38;;2927:159;;;;-1:-1:-1;;;2927:159:7;;8792:2:9;2927:159:7;;;8774:21:9;8831:2;8811:18;;;8804:30;8870:34;8850:18;;;8843:62;8941:34;8921:18;;;8914:62;-1:-1:-1;;;8992:19:9;;;8985:41;9043:19;;2927:159:7;8590:478:9;2927:159:7;3104:14;3098:2;;:20;;;;;;;:::i;:::-;;;;;;;;3134:13;3128:2;;:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;3158:4:7;;:41;;-1:-1:-1;;;3158:41:7;;3172:10;3158:41;;;4281:51:9;4348:18;;;4341:34;;;-1:-1:-1;;;;;3158:4:7;;;;:13;;4254:18:9;;3158:41:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3209:43:7;;3217:10;;3209:43;;;;;3238:13;;3209:43;;;;3238:13;3217:10;3209:43;;;;;;;;;;;;;;;;;;;;;3267:2;;3273:1;3267:7;3263:121;;3305:1;3290:12;:16;3263:121;;;3371:2;;3358:9;;3353:2;;:14;;;;:::i;:::-;3352:21;;;;:::i;:::-;3337:12;:36;3263:121;3394:17;3405:5;3394:10;:17::i;:::-;3422:10;:8;:10::i;:::-;3447:50;;;4842:25:9;;;4898:2;4883:18;;4876:34;;;3455:10:7;;3447:50;;4815:18:9;3447:50:7;;;;;;;2532:972;;;;2490:1014;:::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;;;;;719:10:6;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;9275:2:9;1414:68:0;;;9257:21:9;;;9294:18;;;9287:30;9353:34;9333:18;;;9326:62;9405:18;;1414:68:0;9073:356:9;2433:117:1;1486:16;:14;:16::i;:::-;2501:5:::1;2491:15:::0;;-1:-1:-1;;2491:15:1::1;::::0;;2521:22:::1;719:10:6::0;2530:12:1::1;2521:22;::::0;-1:-1:-1;;;;;737:32:9;;;719:51;;707:2;692:18;2521:22:1::1;;;;;;;2433:117::o:0;2426:187:0:-;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;2518:6;2534:17;;;-1:-1:-1;;;;;;2534:17:0;;;;;2566:40;;2518:6;;;;;;;2534:17;;2518:6;;2566:40;;;2489:124;2426:187;:::o;2186:115:1:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:1::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;719:10:6::0;;640:96;1991:493:7;2067:4;;:57;;-1:-1:-1;;;2067:57:7;;2085:10;2067:57;;;7082:34:9;2105:4:7;7132:18:9;;;7125:43;7184:18;;;7177:34;;;-1:-1:-1;;;;;2067:4:7;;;;:17;;7017:18:9;;2067:57:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2140:11;2134:2;;:17;;;;;;;:::i;:::-;;;;;;;;2167:10;2161:2;;:16;;;;;;;:::i;:::-;;;;-1:-1:-1;;2213:100:7;;;;;;;;;;;;;;;;;;2288:15;2213:100;;;;;;2331:10;2188:22;2323:19;;;:7;:19;;;;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2397:2;;2384:9;;2379:2;;:14;;2384:9;2379:14;:::i;:::-;2378:21;;;;:::i;:::-;2362:12;:38;2411:10;:8;:10::i;:::-;2436:41;;;4842:25:9;;;2467:9:7;4898:2:9;4883:18;;4876:34;2442:10:7;;2436:41;;4815:18:9;2436:41:7;;;;;;;2057:427;1991:493;;:::o;3828:1030::-;3877:7;;;3930:8;3877:7;3939:24;3957:6;3939:15;:24;:::i;:::-;3930:34;;;;;;;;;;;;:38;3926:901;;;4024:10;3984:29;4016:19;;;:7;:19;;;;;4069:13;;4016:19;;3984:29;4136:171;4161:9;4156:1;:14;4136:171;;4195:22;4220:6;4227:1;4220:9;;;;;;;;:::i;:::-;;;;;;;;;;;4195:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4284:2;:7;;;4266:15;:25;;;;:::i;:::-;4247:45;;;;:::i;:::-;;;4177:130;4172:3;;;;;:::i;:::-;;;;4136:171;;;;4325:9;4320:497;4345:9;4340:1;:14;4320:497;;4379:22;4404:6;4411:1;4404:9;;;;;;;;:::i;:::-;;;;;;;;;4379:34;;;;;;;;4404:9;;;;;;;4379:34;;;;;;;;;;;;;;;;;;;;;;;4483:2;;4470:9;;4379:34;;-1:-1:-1;4483:2:7;4453:26;;;:::i;:::-;4452:33;;;;:::i;:::-;4431:55;;4504:17;4543:2;:7;;;4525:15;:25;;;;:::i;:::-;4504:47;-1:-1:-1;4569:19:7;4591:26;4603:14;4504:47;4591:26;:::i;:::-;4800:2;;4569:48;;-1:-1:-1;4569:48:7;4704:8;:34;4713:24;4731:6;4713:15;:24;:::i;:::-;4704:34;;;;;;;;;;;;4668:9;:70;;;;:::i;:::-;:108;;;;:::i;:::-;4667:135;;;;:::i;:::-;4635:167;;;;:::i;:::-;;;4361:456;;;;4356:3;;;;;:::i;:::-;;;;4320:497;;;;3970:857;;;3926:901;4843:8;3828:1030;-1:-1:-1;3828:1030:7:o;3510:312::-;3588:10;3580:19;;;;:7;:19;;;;;:26;3572:34;;3564:66;;;;-1:-1:-1;;;3564:66:7;;9776:2:9;3564:66:7;;;9758:21:9;9815:2;9795:18;;;9788:30;-1:-1:-1;;;9834:18:9;;;9827:49;9893:18;;3564:66:7;9574:343:9;3564:66:7;3657:5;3640:141;3676:10;3668:19;;;;:7;:19;;;;;:26;:30;;3697:1;;3668:30;:::i;:::-;3664:1;:34;3640:141;;;3752:10;3744:19;;;;:7;:19;;;;;3764:5;:1;3768;3764:5;:::i;:::-;3744:26;;;;;;;;:::i;:::-;;;;;;;;;;;3719:7;:19;3727:10;-1:-1:-1;;;;;3719:19:7;-1:-1:-1;;;;;3719:19:7;;;;;;;;;;;;3739:1;3719:22;;;;;;;;:::i;:::-;;;;;;;;;:51;;:22;;;;;:51;;;;;;;;;;;;;;;;;;;;3700:3;;;;:::i;:::-;;;;3640:141;;;-1:-1:-1;3798:10:7;3790:19;;;;:7;:19;;;;;:25;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;3790:25:7;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3510:312:7:o;1315:58::-;1364:2;;1359;;:7;;;;:::i;:::-;1354:2;:12;1315:58::o;1945:106:1:-;1662:4;1685:7;;;2003:41;;;;-1:-1:-1;;;2003:41:1;;10256:2:9;2003:41:1;;;10238:21:9;10295:2;10275:18;;;10268:30;-1:-1:-1;;;10314:18:9;;;10307:50;10374:18;;2003:41:1;10054:344:9;14:180;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:9;;14:180;-1:-1:-1;14:180:9:o;781:851::-;1010:2;1062:21;;;1132:13;;1035:18;;;1154:22;;;981:4;;1010:2;1195;;1213:18;;;;1254:15;;;981:4;1297:309;1311:6;1308:1;1305:13;1297:309;;;1370:13;;1408:9;;1396:22;;1458:11;;;1452:18;1438:12;;;1431:40;1511:11;;1505:18;1491:12;;;1484:40;1553:4;1544:14;;;;1581:15;;;;1333:1;1326:9;1297:309;;;-1:-1:-1;1623:3:9;;781:851;-1:-1:-1;;;;;;;781:851:9:o;1637:286::-;1696:6;1749:2;1737:9;1728:7;1724:23;1720:32;1717:52;;;1765:1;1762;1755:12;1717:52;1791:23;;-1:-1:-1;;;;;1843:31:9;;1833:42;;1823:70;;1889:1;1886;1879:12;1823:70;1912:5;1637:286;-1:-1:-1;;;1637:286:9:o;2277:127::-;2338:10;2333:3;2329:20;2326:1;2319:31;2369:4;2366:1;2359:15;2393:4;2390:1;2383:15;2409:217;2449:1;2475;2465:132;;2519:10;2514:3;2510:20;2507:1;2500:31;2554:4;2551:1;2544:15;2582:4;2579:1;2572:15;2465:132;-1:-1:-1;2611:9:9;;2409:217::o;2631:128::-;2698:9;;;2719:11;;;2716:37;;;2733:18;;:::i;:::-;2631:128;;;;:::o;2764:168::-;2837:9;;;2868;;2885:15;;;2879:22;;2865:37;2855:71;;2906:18;;:::i;2937:125::-;3002:9;;;3023:10;;;3020:36;;;3036:18;;:::i;4386:277::-;4453:6;4506:2;4494:9;4485:7;4481:23;4477:32;4474:52;;;4522:1;4519;4512:12;4474:52;4554:9;4548:16;4607:5;4600:13;4593:21;4586:5;4583:32;4573:60;;4629:1;4626;4619:12;6298:184;6368:6;6421:2;6409:9;6400:7;6396:23;6392:32;6389:52;;;6437:1;6434;6427:12;6389:52;-1:-1:-1;6460:16:9;;6298:184;-1:-1:-1;6298:184:9:o;7974:127::-;8035:10;8030:3;8026:20;8023:1;8016:31;8066:4;8063:1;8056:15;8090:4;8087:1;8080:15;9434:135;9473:3;9494:17;;;9491:43;;9514:18;;:::i;:::-;-1:-1:-1;9561:1:9;9550:13;;9434:135::o;9922:127::-;9983:10;9978:3;9974:20;9971:1;9964:31;10014:4;10011:1;10004:15;10038:4;10035:1;10028:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1145400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buy(uint256)": "infinite",
								"getETHPrice(uint256)": "infinite",
								"getMemePrice(uint256)": "infinite",
								"getStacks()": "infinite",
								"owner()": "2351",
								"pause()": "infinite",
								"paused()": "2335",
								"renounceOwnership()": "infinite",
								"sell(uint256)": "infinite",
								"stack(uint256)": "infinite",
								"stackingRate()": "2328",
								"transferOwnership(address)": "28418",
								"unpause()": "infinite",
								"unstack(uint256)": "infinite"
							},
							"internal": {
								"_distributeTax()": "infinite",
								"_removeArr(uint256)": "infinite",
								"_stack(uint256,uint256)": "infinite",
								"_unstack(uint256)": "infinite",
								"_updateK()": "26409"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 243,
									"end": 7791,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 243,
									"end": 7791,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 243,
									"end": 7791,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1010,
									"end": 1015,
									"name": "PUSH",
									"source": 7,
									"value": "8AC7230489E80000"
								},
								{
									"begin": 981,
									"end": 1015,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 981,
									"end": 1015,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1067,
									"end": 1069,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 1054,
									"end": 1063,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1054,
									"end": 1063,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1050,
									"end": 1051,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1050,
									"end": 1063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1050,
									"end": 1063,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1050,
									"end": 1063,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1050,
									"end": 1063,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1050,
									"end": 1063,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1050,
									"end": 1063,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1050,
									"end": 1063,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1049,
									"end": 1069,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1049,
									"end": 1069,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1049,
									"end": 1069,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1049,
									"end": 1069,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1049,
									"end": 1069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1049,
									"end": 1069,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1049,
									"end": 1069,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1022,
									"end": 1069,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1022,
									"end": 1069,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "tag",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 1076,
									"end": 1175,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1076,
									"end": 1175,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1112,
									"end": 1116,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1112,
									"end": 1129,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1112,
									"end": 1129,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1112,
									"end": 1129,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1112,
									"end": 1129,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1112,
									"end": 1129,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1112,
									"end": 1129,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1112,
									"end": 1129,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1112,
									"end": 1129,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1112,
									"end": 1129,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1112,
									"end": 1129,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1112,
									"end": 1129,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1112,
									"end": 1129,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1112,
									"end": 1129,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 243,
									"end": 7791,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 243,
									"end": 7791,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 279,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 14,
									"end": 279,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 87,
									"end": 96,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 87,
									"end": 96,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 87,
									"end": 96,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 118,
									"end": 127,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 118,
									"end": 127,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 135,
									"end": 150,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 135,
									"end": 150,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 135,
									"end": 150,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 129,
									"end": 151,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 129,
									"end": 151,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 115,
									"end": 152,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 105,
									"end": 273,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 105,
									"end": 273,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 195,
									"end": 205,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 190,
									"end": 193,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 186,
									"end": 206,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 183,
									"end": 184,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 207,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 230,
									"end": 234,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 227,
									"end": 228,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 235,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 258,
									"end": 262,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 255,
									"end": 256,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 248,
									"end": 263,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 105,
									"end": 273,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 105,
									"end": 273,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14,
									"end": 279,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 14,
									"end": 279,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 14,
									"end": 279,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14,
									"end": 279,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14,
									"end": 279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 284,
									"end": 501,
									"name": "tag",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 284,
									"end": 501,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 324,
									"end": 325,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 351,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 340,
									"end": 472,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 340,
									"end": 472,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 394,
									"end": 404,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 389,
									"end": 392,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 385,
									"end": 405,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 382,
									"end": 383,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 375,
									"end": 406,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 429,
									"end": 433,
									"name": "PUSH",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 426,
									"end": 427,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 419,
									"end": 434,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 457,
									"end": 461,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 454,
									"end": 455,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 447,
									"end": 462,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 340,
									"end": 472,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 340,
									"end": 472,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 486,
									"end": 495,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 486,
									"end": 495,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 284,
									"end": 501,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 506,
									"end": 796,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 506,
									"end": 796,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 576,
									"end": 582,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 631,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 617,
									"end": 626,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 608,
									"end": 615,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 604,
									"end": 627,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 600,
									"end": 632,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 597,
									"end": 649,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 597,
									"end": 649,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 597,
									"end": 649,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 645,
									"end": 646,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 642,
									"end": 643,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 635,
									"end": 647,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 597,
									"end": 649,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 597,
									"end": 649,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 671,
									"end": 687,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 671,
									"end": 687,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 716,
									"end": 747,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 716,
									"end": 747,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 706,
									"end": 748,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 706,
									"end": 748,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 696,
									"end": 766,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 696,
									"end": 766,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 762,
									"end": 763,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 759,
									"end": 760,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 752,
									"end": 764,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 696,
									"end": 766,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 696,
									"end": 766,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 785,
									"end": 790,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 506,
									"end": 796,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 506,
									"end": 796,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 506,
									"end": 796,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 506,
									"end": 796,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 243,
									"end": 7791,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 7791,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 243,
									"end": 7791,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 7791,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 7791,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 243,
									"end": 7791,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 7791,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c72032e6ecbf6c4ac3929d7553730789b0ff574d3ec0cd0e3262f9ab8aac6e7664736f6c63430008140033",
									".code": [
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "DC9031C4"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "DC9031C4"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "E4849B32"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "E8BCA8B8"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "9C74F05D"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "D96A094A"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "5C572ED0"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "5C572ED0"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "5C975ABB"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "8456CB59"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "1A753FED"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "200061DF"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "3F4BA83A"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 7791,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 5519,
											"end": 6172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 5519,
											"end": 6172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "tag",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 1842,
											"end": 1985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1842,
											"end": 1985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1309,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1246,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1309,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1309,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1309,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1246,
											"end": 1309,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1309,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1246,
											"end": 1309,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1309,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1309,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1246,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1246,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1246,
											"end": 1309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 5513,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4864,
											"end": 5513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 5513,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 5513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 5513,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 5513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 4864,
											"end": 5513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 5513,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4864,
											"end": 5513,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 5513,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 5513,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 4864,
											"end": 5513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4864,
											"end": 5513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4864,
											"end": 5513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 4864,
											"end": 5513,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 5513,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4864,
											"end": 5513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4864,
											"end": 5513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 5513,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 4864,
											"end": 5513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 5513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 4864,
											"end": 5513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 546,
											"end": 560,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 546,
											"end": 560,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 539,
											"end": 561,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 521,
											"end": 562,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 521,
											"end": 562,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 509,
											"end": 511,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 494,
											"end": 512,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 381,
											"end": 568,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1240,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1181,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1240,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1240,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1240,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1181,
											"end": 1240,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1240,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1240,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1240,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1240,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1181,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1181,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1181,
											"end": 1240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1181,
											"end": 1240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 737,
											"end": 769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 737,
											"end": 769,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 737,
											"end": 769,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 719,
											"end": 770,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 719,
											"end": 770,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 707,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 573,
											"end": 776,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 871,
											"end": 898,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 871,
											"end": 898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 871,
											"end": 898,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 871,
											"end": 898,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 871,
											"end": 898,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 871,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 871,
											"end": 898,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 871,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 871,
											"end": 898,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 871,
											"end": 898,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 871,
											"end": 898,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 871,
											"end": 898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 871,
											"end": 898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 871,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 871,
											"end": 898,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 871,
											"end": 898,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 871,
											"end": 898,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 871,
											"end": 898,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6178,
											"end": 6756,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 6178,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6178,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 6178,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 6178,
											"end": 6756,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6178,
											"end": 6756,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6178,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6178,
											"end": 6756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6178,
											"end": 6756,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 6178,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6178,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6178,
											"end": 6756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1493,
											"end": 1836,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1493,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1493,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1493,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1493,
											"end": 1836,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1493,
											"end": 1836,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1493,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 1493,
											"end": 1836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1493,
											"end": 1836,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 1493,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1493,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1493,
											"end": 1836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 7356,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 6762,
											"end": 7356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 7356,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 7356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 7356,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6762,
											"end": 7356,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 7356,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6762,
											"end": 7356,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 7356,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 7356,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6762,
											"end": 7356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6762,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 6762,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 6762,
											"end": 7356,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 7356,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6762,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6762,
											"end": 7356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 7356,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 6762,
											"end": 7356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 6762,
											"end": 7356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1379,
											"end": 1487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 1379,
											"end": 1487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5595,
											"end": 5602,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5627,
											"end": 5628,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5622,
											"end": 5624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5622,
											"end": 5624,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5622,
											"end": 5628,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5653,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5614,
											"end": 5653,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5614,
											"end": 5653,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5614,
											"end": 5653,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5653,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2130,
											"end": 2132,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5614,
											"end": 5653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5614,
											"end": 5653,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5653,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2112,
											"end": 2133,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2171,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2149,
											"end": 2167,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2149,
											"end": 2167,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2149,
											"end": 2167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2142,
											"end": 2172,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420656E6F756768206C6971756964697479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2188,
											"end": 2206,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2188,
											"end": 2206,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2181,
											"end": 2231,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2248,
											"end": 2266,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2248,
											"end": 2266,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5614,
											"end": 5653,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 5614,
											"end": 5653,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5653,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5614,
											"end": 5653,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5653,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5653,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5653,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5653,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5653,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5614,
											"end": 5653,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5614,
											"end": 5653,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5663,
											"end": 5673,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5687,
											"end": 5697,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5715,
											"end": 5717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5715,
											"end": 5717,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5721,
											"end": 5722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5715,
											"end": 5722,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 5711,
											"end": 5829,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5752,
											"end": 5762,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5748,
											"end": 5749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5743,
											"end": 5745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5743,
											"end": 5745,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5743,
											"end": 5749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 5743,
											"end": 5749,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5743,
											"end": 5749,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5743,
											"end": 5749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 5743,
											"end": 5749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5743,
											"end": 5749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 5743,
											"end": 5749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5743,
											"end": 5762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 5743,
											"end": 5762,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5743,
											"end": 5762,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5743,
											"end": 5762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 5743,
											"end": 5762,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5743,
											"end": 5762,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 5743,
											"end": 5762,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5762,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5738,
											"end": 5762,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 5711,
											"end": 5829,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5829,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 5711,
											"end": 5829,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5808,
											"end": 5818,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5803,
											"end": 5805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5803,
											"end": 5805,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5798,
											"end": 5800,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 5798,
											"end": 5805,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5805,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 5798,
											"end": 5805,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5805,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 5798,
											"end": 5805,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 5798,
											"end": 5818,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 5798,
											"end": 5818,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5798,
											"end": 5818,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 5798,
											"end": 5818,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5793,
											"end": 5818,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5829,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 5711,
											"end": 5829,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5842,
											"end": 5844,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5848,
											"end": 5849,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5842,
											"end": 5849,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5838,
											"end": 5930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 5838,
											"end": 5930,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5875,
											"end": 5876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5870,
											"end": 5872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5870,
											"end": 5872,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 5876,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 5870,
											"end": 5876,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 5876,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 5876,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 5870,
											"end": 5876,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 5876,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 5870,
											"end": 5876,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5876,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5865,
											"end": 5876,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5838,
											"end": 5930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 5838,
											"end": 5930,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5838,
											"end": 5930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 5838,
											"end": 5930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5917,
											"end": 5919,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 5914,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5912,
											"end": 5914,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 5919,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 5912,
											"end": 5919,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 5919,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 5919,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 5912,
											"end": 5919,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5912,
											"end": 5919,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 5912,
											"end": 5919,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5907,
											"end": 5919,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5907,
											"end": 5919,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5838,
											"end": 5930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 5838,
											"end": 5930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5939,
											"end": 5969,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5977,
											"end": 5979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 5977,
											"end": 5979,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5972,
											"end": 5974,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5972,
											"end": 5979,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 5972,
											"end": 5979,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5972,
											"end": 5979,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5972,
											"end": 5979,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 5972,
											"end": 5979,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5972,
											"end": 5979,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 5972,
											"end": 5979,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5939,
											"end": 5979,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5939,
											"end": 5979,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5989,
											"end": 6005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6045,
											"end": 6054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6045,
											"end": 6054,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6034,
											"end": 6041,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 6034,
											"end": 6041,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6009,
											"end": 6031,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6009,
											"end": 6041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 6009,
											"end": 6041,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6009,
											"end": 6041,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6009,
											"end": 6041,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 6009,
											"end": 6041,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6009,
											"end": 6041,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 6009,
											"end": 6041,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6008,
											"end": 6054,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 6008,
											"end": 6054,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6054,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6008,
											"end": 6054,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5989,
											"end": 6054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6065,
											"end": 6092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6095,
											"end": 6128,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 5989,
											"end": 6054,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6095,
											"end": 6117,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6095,
											"end": 6128,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 6095,
											"end": 6128,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6095,
											"end": 6128,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "101"
										},
										{
											"begin": 6095,
											"end": 6128,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6065,
											"end": 6128,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 5519,
											"end": 6172,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5519,
											"end": 6172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1963,
											"end": 1978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 1972,
											"end": 1977,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 1971,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 1963,
											"end": 1978,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 1978,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 1963,
											"end": 1978,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1985,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1842,
											"end": 1985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1309,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 1246,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1292,
											"end": 1302,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1292,
											"end": 1300,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 1292,
											"end": 1302,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1292,
											"end": 1302,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1292,
											"end": 1302,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1246,
											"end": 1309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4864,
											"end": 5513,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 4864,
											"end": 5513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4942,
											"end": 4949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 4975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4969,
											"end": 4971,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4969,
											"end": 4971,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4969,
											"end": 4975,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4961,
											"end": 5000,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4961,
											"end": 5000,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4961,
											"end": 5000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4961,
											"end": 5000,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4961,
											"end": 5000,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4961,
											"end": 5000,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2130,
											"end": 2132,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4961,
											"end": 5000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4961,
											"end": 5000,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4961,
											"end": 5000,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2112,
											"end": 2133,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2169,
											"end": 2171,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2149,
											"end": 2167,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2149,
											"end": 2167,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2149,
											"end": 2167,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2142,
											"end": 2172,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420656E6F756768206C6971756964697479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2188,
											"end": 2206,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 2188,
											"end": 2206,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2181,
											"end": 2231,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2248,
											"end": 2266,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 2248,
											"end": 2266,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4961,
											"end": 5000,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 1928,
											"end": 2272,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4961,
											"end": 5000,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4961,
											"end": 5000,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5010,
											"end": 5020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5034,
											"end": 5044,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5064,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5062,
											"end": 5064,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5062,
											"end": 5069,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5058,
											"end": 5178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 5058,
											"end": 5178,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5099,
											"end": 5110,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5095,
											"end": 5096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5090,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5090,
											"end": 5092,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5090,
											"end": 5096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 5090,
											"end": 5096,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5090,
											"end": 5096,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5090,
											"end": 5096,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 5090,
											"end": 5096,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5090,
											"end": 5096,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 5090,
											"end": 5096,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 5090,
											"end": 5110,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 5090,
											"end": 5110,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5110,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5085,
											"end": 5110,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5058,
											"end": 5178,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 5058,
											"end": 5178,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5058,
											"end": 5178,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 5058,
											"end": 5178,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5156,
											"end": 5167,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5151,
											"end": 5153,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5148,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5146,
											"end": 5148,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 5146,
											"end": 5153,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5153,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 5146,
											"end": 5153,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5153,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 5146,
											"end": 5153,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 5146,
											"end": 5167,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5167,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 5146,
											"end": 5167,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5146,
											"end": 5167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 5146,
											"end": 5167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5141,
											"end": 5167,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5141,
											"end": 5167,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5058,
											"end": 5178,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 5058,
											"end": 5178,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5191,
											"end": 5193,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5197,
											"end": 5198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5198,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5187,
											"end": 5279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 5187,
											"end": 5279,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5224,
											"end": 5225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5219,
											"end": 5221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5219,
											"end": 5221,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5219,
											"end": 5225,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 5219,
											"end": 5225,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5219,
											"end": 5225,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5219,
											"end": 5225,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 5219,
											"end": 5225,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5219,
											"end": 5225,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 5219,
											"end": 5225,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5214,
											"end": 5225,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5214,
											"end": 5225,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5187,
											"end": 5279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 5187,
											"end": 5279,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5187,
											"end": 5279,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 5187,
											"end": 5279,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5266,
											"end": 5268,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5261,
											"end": 5263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5261,
											"end": 5263,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5261,
											"end": 5268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 5261,
											"end": 5268,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5261,
											"end": 5268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5261,
											"end": 5268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 5261,
											"end": 5268,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5261,
											"end": 5268,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 5261,
											"end": 5268,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5256,
											"end": 5268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5256,
											"end": 5268,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5187,
											"end": 5279,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "130"
										},
										{
											"begin": 5187,
											"end": 5279,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5288,
											"end": 5317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5325,
											"end": 5327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5325,
											"end": 5327,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5322,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "97"
										},
										{
											"begin": 5320,
											"end": 5327,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5327,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5320,
											"end": 5327,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 5320,
											"end": 5327,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1181,
											"end": 1240,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1181,
											"end": 1240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 1225,
											"end": 1231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 1225,
											"end": 1233,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6178,
											"end": 6756,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6178,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6273,
											"end": 6274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6259,
											"end": 6270,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6259,
											"end": 6274,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6251,
											"end": 6293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 6251,
											"end": 6293,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6251,
											"end": 6293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6251,
											"end": 6293,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6251,
											"end": 6293,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6251,
											"end": 6293,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3624,
											"end": 3626,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6251,
											"end": 6293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6251,
											"end": 6293,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6251,
											"end": 6293,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3606,
											"end": 3627,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 3643,
											"end": 3661,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3643,
											"end": 3661,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3643,
											"end": 3661,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3636,
											"end": 3666,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53656E6420536F6D65204D656D65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3682,
											"end": 3700,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3682,
											"end": 3700,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3682,
											"end": 3700,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3675,
											"end": 3719,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3736,
											"end": 3754,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3736,
											"end": 3754,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6251,
											"end": 6293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3422,
											"end": 3760,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6251,
											"end": 6293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 6251,
											"end": 6293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6303,
											"end": 6321,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6324,
											"end": 6349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 6337,
											"end": 6348,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6324,
											"end": 6336,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 6324,
											"end": 6349,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6324,
											"end": 6349,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 6324,
											"end": 6349,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6303,
											"end": 6349,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6303,
											"end": 6349,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6381,
											"end": 6390,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 6367,
											"end": 6377,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6367,
											"end": 6390,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6367,
											"end": 6390,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6359,
											"end": 6408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 6359,
											"end": 6408,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6359,
											"end": 6408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6359,
											"end": 6408,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6359,
											"end": 6408,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6359,
											"end": 6408,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3967,
											"end": 3969,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6359,
											"end": 6408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6359,
											"end": 6408,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6359,
											"end": 6408,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3949,
											"end": 3970,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4006,
											"end": 4008,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 3986,
											"end": 4004,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3986,
											"end": 4004,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3986,
											"end": 4004,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3979,
											"end": 4009,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A6CADCC8409ADEE4CA408AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4018,
											"end": 4061,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4078,
											"end": 4096,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4078,
											"end": 4096,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 3765,
											"end": 4102,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6408,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 6359,
											"end": 6408,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6419,
											"end": 6423,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6419,
											"end": 6457,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6419,
											"end": 6457,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6433,
											"end": 6443,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6419,
											"end": 6457,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4281,
											"end": 4332,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4366,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4348,
											"end": 4366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4366,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4341,
											"end": 4375,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4341,
											"end": 4375,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4341,
											"end": 4375,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6419,
											"end": 6423,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6423,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6423,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6423,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6432,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 6419,
											"end": 6432,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4254,
											"end": 4272,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4254,
											"end": 4272,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6419,
											"end": 6457,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 6419,
											"end": 6457,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 6419,
											"end": 6457,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6475,
											"end": 6485,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 6496,
											"end": 6518,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6508,
											"end": 6518,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6496,
											"end": 6505,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 6496,
											"end": 6518,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 6496,
											"end": 6518,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6496,
											"end": 6518,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 6496,
											"end": 6518,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6467,
											"end": 6519,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6467,
											"end": 6519,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6467,
											"end": 6519,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 6467,
											"end": 6519,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6632,
											"end": 6641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6632,
											"end": 6641,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6608,
											"end": 6615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 6608,
											"end": 6615,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6596,
											"end": 6615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 6596,
											"end": 6615,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6641,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6596,
											"end": 6615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 6596,
											"end": 6615,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6596,
											"end": 6615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 6596,
											"end": 6615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6581,
											"end": 6616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 6581,
											"end": 6616,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6581,
											"end": 6592,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6581,
											"end": 6616,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 6581,
											"end": 6616,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6581,
											"end": 6616,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 6581,
											"end": 6616,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6580,
											"end": 6641,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 6580,
											"end": 6641,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6580,
											"end": 6641,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6580,
											"end": 6641,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 6580,
											"end": 6641,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6580,
											"end": 6641,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 6580,
											"end": 6641,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6530,
											"end": 6564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6539,
											"end": 6563,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 6557,
											"end": 6563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 6539,
											"end": 6554,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 6539,
											"end": 6563,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 6539,
											"end": 6563,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6539,
											"end": 6563,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 6539,
											"end": 6563,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6564,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6564,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6530,
											"end": 6564,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6564,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6564,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6564,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6530,
											"end": 6564,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6530,
											"end": 6564,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6564,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6530,
											"end": 6641,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6641,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6641,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6641,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 6530,
											"end": 6641,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6641,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6641,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 6530,
											"end": 6641,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6641,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 6530,
											"end": 6641,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6641,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6641,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6641,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6641,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6641,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6641,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6530,
											"end": 6641,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6658,
											"end": 6669,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 6652,
											"end": 6654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6669,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6669,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6669,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6669,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 6652,
											"end": 6669,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6669,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6669,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 6652,
											"end": 6669,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6669,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 6652,
											"end": 6669,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6669,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6669,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6652,
											"end": 6669,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6690,
											"end": 6692,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 6690,
											"end": 6692,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6685,
											"end": 6687,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6692,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 6685,
											"end": 6692,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6690,
											"end": 6692,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6692,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 6685,
											"end": 6692,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6685,
											"end": 6692,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 6685,
											"end": 6692,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6679,
											"end": 6681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 6679,
											"end": 6693,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6709,
											"end": 6749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6709,
											"end": 6749,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6709,
											"end": 6749,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4867,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4842,
											"end": 4867,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4842,
											"end": 4867,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4898,
											"end": 4900,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4876,
											"end": 4910,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4876,
											"end": 4910,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4876,
											"end": 4910,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6713,
											"end": 6723,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6713,
											"end": 6723,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6709,
											"end": 6749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1CBC5AB135991BD2B6A4B034A04AA2AA086DAC1371CB9B16B8B5E2ED6B036BED"
										},
										{
											"begin": 6709,
											"end": 6749,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4815,
											"end": 4833,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6709,
											"end": 6749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 6709,
											"end": 6749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6709,
											"end": 6749,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6709,
											"end": 6749,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6709,
											"end": 6749,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6709,
											"end": 6749,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6709,
											"end": 6749,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6709,
											"end": 6749,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6709,
											"end": 6749,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 6241,
											"end": 6756,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6178,
											"end": 6756,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6178,
											"end": 6756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1493,
											"end": 1836,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 1493,
											"end": 1836,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1589,
											"end": 1590,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1575,
											"end": 1586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1575,
											"end": 1590,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1567,
											"end": 1609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 1567,
											"end": 1609,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1567,
											"end": 1609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1567,
											"end": 1609,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1567,
											"end": 1609,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1567,
											"end": 1609,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5123,
											"end": 5125,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1567,
											"end": 1609,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1567,
											"end": 1609,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1567,
											"end": 1609,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5105,
											"end": 5126,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5162,
											"end": 5164,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 5142,
											"end": 5160,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5142,
											"end": 5160,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5142,
											"end": 5160,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5135,
											"end": 5165,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53656E64206D6F7265204D454D45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5181,
											"end": 5199,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5181,
											"end": 5199,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5181,
											"end": 5199,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5174,
											"end": 5218,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5235,
											"end": 5253,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5235,
											"end": 5253,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1567,
											"end": 1609,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 4921,
											"end": 5259,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1567,
											"end": 1609,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 1567,
											"end": 1609,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1639,
											"end": 1640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1627,
											"end": 1636,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1627,
											"end": 1640,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1619,
											"end": 1658,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1658,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1619,
											"end": 1658,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1658,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5466,
											"end": 5468,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1619,
											"end": 1658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1619,
											"end": 1658,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1619,
											"end": 1658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5448,
											"end": 5469,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5505,
											"end": 5507,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 5485,
											"end": 5503,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5485,
											"end": 5503,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5485,
											"end": 5503,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A6CADCC840DADEE4CA408AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5524,
											"end": 5542,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5524,
											"end": 5542,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5524,
											"end": 5542,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5517,
											"end": 5560,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5577,
											"end": 5595,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5577,
											"end": 5595,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 5264,
											"end": 5601,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1619,
											"end": 1658,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 1619,
											"end": 1658,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1731,
											"end": 1742,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1718,
											"end": 1727,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1715,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1706,
											"end": 1727,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1727,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1706,
											"end": 1727,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1727,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 1706,
											"end": 1727,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 1742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 1705,
											"end": 1742,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 1742,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 1742,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 1705,
											"end": 1742,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 1742,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 1705,
											"end": 1742,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1689,
											"end": 1701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1689,
											"end": 1701,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1689,
											"end": 1742,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1689,
											"end": 1742,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 1668,
											"end": 1789,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1668,
											"end": 1789,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1668,
											"end": 1789,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1789,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5808,
											"end": 5810,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1668,
											"end": 1789,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1668,
											"end": 1789,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1668,
											"end": 1789,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5790,
											"end": 5811,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5847,
											"end": 5849,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 5827,
											"end": 5845,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5827,
											"end": 5845,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5827,
											"end": 5845,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5820,
											"end": 5850,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14DD1858DADA5B99C814985D19481B9BDD081B595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5866,
											"end": 5884,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5866,
											"end": 5884,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5866,
											"end": 5884,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5859,
											"end": 5910,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5927,
											"end": 5945,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5927,
											"end": 5945,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1789,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 5606,
											"end": 5951,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1789,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 1668,
											"end": 1789,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1799,
											"end": 1829,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 1806,
											"end": 1817,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1819,
											"end": 1828,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1799,
											"end": 1805,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 1799,
											"end": 1829,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6762,
											"end": 7356,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 6762,
											"end": 7356,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6847,
											"end": 6848,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6844,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6834,
											"end": 6848,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6826,
											"end": 6866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 6826,
											"end": 6866,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6826,
											"end": 6866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6158,
											"end": 6160,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6826,
											"end": 6866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6826,
											"end": 6866,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6826,
											"end": 6866,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6140,
											"end": 6161,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6199,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6177,
											"end": 6195,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6170,
											"end": 6200,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A6CADCC840A6DEDACA408AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6216,
											"end": 6234,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6216,
											"end": 6234,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6216,
											"end": 6234,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6252,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6269,
											"end": 6287,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 5956,
											"end": 6293,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6826,
											"end": 6866,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 6826,
											"end": 6866,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6876,
											"end": 6893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6896,
											"end": 6919,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 6908,
											"end": 6918,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6896,
											"end": 6907,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 6896,
											"end": 6919,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6896,
											"end": 6919,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 6896,
											"end": 6919,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6955,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6951,
											"end": 6955,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6951,
											"end": 6977,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6951,
											"end": 6977,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6966,
											"end": 6976,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6951,
											"end": 6977,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 719,
											"end": 770,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6876,
											"end": 6919,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6876,
											"end": 6919,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6951,
											"end": 6955,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6955,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 6951,
											"end": 6965,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 692,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6951,
											"end": 6977,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 6951,
											"end": 6977,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 6951,
											"end": 6977,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6938,
											"end": 6947,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6938,
											"end": 6977,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6938,
											"end": 6977,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6930,
											"end": 7008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 6930,
											"end": 7008,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6930,
											"end": 7008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6930,
											"end": 7008,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6930,
											"end": 7008,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6930,
											"end": 7008,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6689,
											"end": 6691,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6930,
											"end": 7008,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6930,
											"end": 7008,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6930,
											"end": 7008,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6671,
											"end": 6692,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6728,
											"end": 6730,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 6708,
											"end": 6726,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6708,
											"end": 6726,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6708,
											"end": 6726,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6701,
											"end": 6731,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6767,
											"end": 6795,
											"name": "PUSH",
											"source": 9,
											"value": "596F7520646F6E2774206861766520656E6F756768206D656D65000000000000"
										},
										{
											"begin": 6747,
											"end": 6765,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6747,
											"end": 6765,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6747,
											"end": 6765,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6740,
											"end": 6796,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6813,
											"end": 6831,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6813,
											"end": 6831,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6930,
											"end": 7008,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 6487,
											"end": 6837,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6930,
											"end": 7008,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 6930,
											"end": 7008,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7018,
											"end": 7022,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7018,
											"end": 7073,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7018,
											"end": 7073,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7046,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7018,
											"end": 7073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7082,
											"end": 7116,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7056,
											"end": 7060,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 7132,
											"end": 7150,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7132,
											"end": 7150,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7132,
											"end": 7150,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7125,
											"end": 7168,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7184,
											"end": 7202,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7184,
											"end": 7202,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7184,
											"end": 7202,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7177,
											"end": 7211,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7177,
											"end": 7211,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7177,
											"end": 7211,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7018,
											"end": 7022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7022,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7022,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 7018,
											"end": 7035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7017,
											"end": 7035,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7017,
											"end": 7035,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7073,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 7018,
											"end": 7073,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 7018,
											"end": 7073,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7123,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7091,
											"end": 7101,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7091,
											"end": 7101,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7112,
											"end": 7122,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7112,
											"end": 7122,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7083,
											"end": 7123,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7112,
											"end": 7122,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7091,
											"end": 7101,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7083,
											"end": 7123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 7083,
											"end": 7123,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7234,
											"end": 7243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 7234,
											"end": 7243,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7210,
											"end": 7217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 7210,
											"end": 7217,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 7217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 7198,
											"end": 7217,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7234,
											"end": 7243,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 7217,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 7198,
											"end": 7217,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7198,
											"end": 7217,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 7198,
											"end": 7217,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7185,
											"end": 7218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 7185,
											"end": 7218,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7185,
											"end": 7194,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7185,
											"end": 7218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 7185,
											"end": 7218,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7185,
											"end": 7218,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 7185,
											"end": 7218,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7184,
											"end": 7243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 7184,
											"end": 7243,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7184,
											"end": 7243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7184,
											"end": 7243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 7184,
											"end": 7243,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7184,
											"end": 7243,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 7184,
											"end": 7243,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7134,
											"end": 7168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7143,
											"end": 7167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 7161,
											"end": 7167,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 7143,
											"end": 7158,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 7143,
											"end": 7167,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7143,
											"end": 7167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "217"
										},
										{
											"begin": 7143,
											"end": 7167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7168,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7168,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7134,
											"end": 7168,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7168,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7168,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7134,
											"end": 7168,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7134,
											"end": 7168,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7134,
											"end": 7243,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7243,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7243,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 7134,
											"end": 7243,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 7134,
											"end": 7243,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7243,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 7134,
											"end": 7243,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7243,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7243,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7243,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7134,
											"end": 7243,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7260,
											"end": 7270,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7254,
											"end": 7256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7254,
											"end": 7256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7254,
											"end": 7270,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7254,
											"end": 7270,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7254,
											"end": 7270,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7254,
											"end": 7270,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 7254,
											"end": 7270,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7254,
											"end": 7270,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7254,
											"end": 7270,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 7254,
											"end": 7270,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7254,
											"end": 7270,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 7254,
											"end": 7270,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7254,
											"end": 7270,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7254,
											"end": 7270,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7254,
											"end": 7270,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7291,
											"end": 7293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7291,
											"end": 7293,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7286,
											"end": 7288,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 7286,
											"end": 7293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7291,
											"end": 7293,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 7286,
											"end": 7293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 7286,
											"end": 7293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7280,
											"end": 7282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7280,
											"end": 7294,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 7310,
											"end": 7349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7310,
											"end": 7349,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7310,
											"end": 7349,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4867,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4842,
											"end": 4867,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4842,
											"end": 4867,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4898,
											"end": 4900,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4876,
											"end": 4910,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4876,
											"end": 4910,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4876,
											"end": 4910,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7315,
											"end": 7325,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 7315,
											"end": 7325,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7310,
											"end": 7349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "ED7A144FAD14804D5C249145E3E0E2B63A9EB455B76AEE5BC92D711E9BBA3E4A"
										},
										{
											"begin": 7310,
											"end": 7349,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4815,
											"end": 4833,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7310,
											"end": 7349,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 4668,
											"end": 4916,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1469,
											"end": 1479,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1461,
											"end": 1468,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1421,
											"end": 1442,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1421,
											"end": 1442,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1461,
											"end": 1480,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1454,
											"end": 1480,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1487,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1379,
											"end": 1487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7424,
											"end": 7426,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7406,
											"end": 7427,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7463,
											"end": 7465,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 7443,
											"end": 7461,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7443,
											"end": 7461,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7443,
											"end": 7461,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7436,
											"end": 7466,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7502,
											"end": 7536,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7482,
											"end": 7500,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7475,
											"end": 7537,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7553,
											"end": 7571,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7553,
											"end": 7571,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7553,
											"end": 7571,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7546,
											"end": 7582,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 7599,
											"end": 7618,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 7222,
											"end": 7624,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7831,
											"end": 7833,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7813,
											"end": 7834,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7870,
											"end": 7872,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 7850,
											"end": 7868,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7850,
											"end": 7868,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7850,
											"end": 7868,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7843,
											"end": 7873,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7889,
											"end": 7907,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7889,
											"end": 7907,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7889,
											"end": 7907,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7882,
											"end": 7928,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7945,
											"end": 7963,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 7629,
											"end": 7969,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2490,
											"end": 3504,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 2490,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2575,
											"end": 2585,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2564,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2574,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2586,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2593,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2593,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2587,
											"end": 2592,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2587,
											"end": 2592,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2593,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2593,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 2567,
											"end": 2593,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 2567,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 2567,
											"end": 2593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2593,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 2567,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2593,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2593,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2593,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2593,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2567,
											"end": 2593,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2567,
											"end": 2593,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2593,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2593,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2567,
											"end": 2593,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2567,
											"end": 2593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2615,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2634,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 2618,
											"end": 2632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 2618,
											"end": 2634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2634,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 2618,
											"end": 2634,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2684,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 2684,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2718,
											"end": 2731,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2718,
											"end": 2731,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2718,
											"end": 2731,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2718,
											"end": 2731,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2634,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2634,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2670,
											"end": 2684,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2645,
											"end": 2667,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2667,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2718,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 2718,
											"end": 2737,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2634,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2604,
											"end": 2634,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2718,
											"end": 2737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 2718,
											"end": 2737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2718,
											"end": 2737,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 2718,
											"end": 2737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2773,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2769,
											"end": 2773,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2792,
											"end": 2796,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 719,
											"end": 770,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2694,
											"end": 2737,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2694,
											"end": 2737,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2802,
											"end": 2816,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2802,
											"end": 2816,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 2773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2773,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2773,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2773,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2783,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 2769,
											"end": 2783,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 692,
											"end": 710,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 2769,
											"end": 2798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 2769,
											"end": 2798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2816,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2769,
											"end": 2816,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2748,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 2748,
											"end": 2917,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2748,
											"end": 2917,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2748,
											"end": 2917,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2748,
											"end": 2917,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2748,
											"end": 2917,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8308,
											"end": 8310,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2748,
											"end": 2917,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2748,
											"end": 2917,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2748,
											"end": 2917,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8290,
											"end": 8311,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8347,
											"end": 8349,
											"name": "PUSH",
											"source": 9,
											"value": "4B"
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8320,
											"end": 8350,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8386,
											"end": 8420,
											"name": "PUSH",
											"source": 9,
											"value": "536F7272792043757272656E746C79207468697320636F6E747261637420646F"
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8366,
											"end": 8384,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8359,
											"end": 8421,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8457,
											"end": 8491,
											"name": "PUSH",
											"source": 9,
											"value": "65736E27742068617665204D656D6520746F2072657475726E2C20436865636B"
										},
										{
											"begin": 8437,
											"end": 8455,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8437,
											"end": 8455,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8437,
											"end": 8455,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8430,
											"end": 8492,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "206261636B20536F6F6E21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8508,
											"end": 8527,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8508,
											"end": 8527,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8508,
											"end": 8527,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8501,
											"end": 8543,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8560,
											"end": 8579,
											"name": "PUSH",
											"source": 9,
											"value": "A4"
										},
										{
											"begin": 8560,
											"end": 8579,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2748,
											"end": 2917,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 8106,
											"end": 8585,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2748,
											"end": 2917,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 2748,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2973,
											"end": 2986,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2948,
											"end": 2969,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 2948,
											"end": 2986,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2948,
											"end": 2986,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2927,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 2927,
											"end": 3086,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2927,
											"end": 3086,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2927,
											"end": 3086,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2927,
											"end": 3086,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2927,
											"end": 3086,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8792,
											"end": 8794,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2927,
											"end": 3086,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2927,
											"end": 3086,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2927,
											"end": 3086,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8774,
											"end": 8795,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 8833,
											"name": "PUSH",
											"source": 9,
											"value": "4A"
										},
										{
											"begin": 8811,
											"end": 8829,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8811,
											"end": 8829,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8811,
											"end": 8829,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8804,
											"end": 8834,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8870,
											"end": 8904,
											"name": "PUSH",
											"source": 9,
											"value": "536F7272792043757272656E746C79207468697320636F6E747261637420646F"
										},
										{
											"begin": 8850,
											"end": 8868,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8850,
											"end": 8868,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8850,
											"end": 8868,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8843,
											"end": 8905,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8941,
											"end": 8975,
											"name": "PUSH",
											"source": 9,
											"value": "65736E277420686176652045746820746F2072657475726E2C20436865636B20"
										},
										{
											"begin": 8921,
											"end": 8939,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8921,
											"end": 8939,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8921,
											"end": 8939,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8914,
											"end": 8976,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6261636B20536F6F6E21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8992,
											"end": 9011,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8992,
											"end": 9011,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8992,
											"end": 9011,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8985,
											"end": 9026,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9043,
											"end": 9062,
											"name": "PUSH",
											"source": 9,
											"value": "A4"
										},
										{
											"begin": 9043,
											"end": 9062,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 8590,
											"end": 9068,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 3086,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 2927,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3104,
											"end": 3118,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3100,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3098,
											"end": 3100,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3118,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3118,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3118,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3098,
											"end": 3118,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3118,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3118,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 3098,
											"end": 3118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3118,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 3098,
											"end": 3118,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3118,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3118,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3118,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3118,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3098,
											"end": 3118,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3134,
											"end": 3147,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3128,
											"end": 3130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3128,
											"end": 3147,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3128,
											"end": 3147,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3128,
											"end": 3147,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3128,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3128,
											"end": 3147,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3128,
											"end": 3147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3128,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 3128,
											"end": 3147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3128,
											"end": 3147,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 3128,
											"end": 3147,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3128,
											"end": 3147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3128,
											"end": 3147,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3128,
											"end": 3147,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3158,
											"end": 3162,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3158,
											"end": 3162,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3172,
											"end": 3182,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4281,
											"end": 4332,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4366,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4348,
											"end": 4366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4366,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4341,
											"end": 4375,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4341,
											"end": 4375,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4341,
											"end": 4375,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3158,
											"end": 3162,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3162,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3162,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3162,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3171,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 3158,
											"end": 3171,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4254,
											"end": 4272,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4254,
											"end": 4272,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 3158,
											"end": 3199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 3158,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3217,
											"end": 3227,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3217,
											"end": 3227,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3238,
											"end": 3251,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3238,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3238,
											"end": 3251,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3217,
											"end": 3227,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3209,
											"end": 3252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3267,
											"end": 3269,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3267,
											"end": 3269,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3273,
											"end": 3274,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3274,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3263,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 3263,
											"end": 3384,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3305,
											"end": 3306,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3290,
											"end": 3302,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3290,
											"end": 3306,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3263,
											"end": 3384,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 3263,
											"end": 3384,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3263,
											"end": 3384,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 3263,
											"end": 3384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3371,
											"end": 3373,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3371,
											"end": 3373,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3358,
											"end": 3367,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3358,
											"end": 3367,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3355,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3353,
											"end": 3355,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3353,
											"end": 3367,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3367,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 3353,
											"end": 3367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3367,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 3353,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 3352,
											"end": 3373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 3352,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3337,
											"end": 3349,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3337,
											"end": 3373,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3263,
											"end": 3384,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 3263,
											"end": 3384,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 3405,
											"end": 3410,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3394,
											"end": 3411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 3422,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 3422,
											"end": 3432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3422,
											"end": 3432,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 3422,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3447,
											"end": 3497,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3447,
											"end": 3497,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3447,
											"end": 3497,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4867,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4842,
											"end": 4867,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4842,
											"end": 4867,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4898,
											"end": 4900,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4876,
											"end": 4910,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4876,
											"end": 4910,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4876,
											"end": 4910,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3455,
											"end": 3465,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3465,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3447,
											"end": 3497,
											"name": "PUSH",
											"source": 7,
											"value": "BB564DF1F5D4EBB97B073ADCAB505C7796A37035AC5D14F51269660939C39CF4"
										},
										{
											"begin": 3447,
											"end": 3497,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4815,
											"end": 4833,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3447,
											"end": 3497,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3447,
											"end": 3497,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3447,
											"end": 3497,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3447,
											"end": 3497,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3447,
											"end": 3497,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3447,
											"end": 3497,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3447,
											"end": 3497,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 3504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 3504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 3504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 3504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 3504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2490,
											"end": 3504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9275,
											"end": 9277,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9278,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9257,
											"end": 9278,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9257,
											"end": 9278,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9294,
											"end": 9312,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9287,
											"end": 9317,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9353,
											"end": 9387,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9333,
											"end": 9351,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9333,
											"end": 9351,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9333,
											"end": 9351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9326,
											"end": 9388,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9405,
											"end": 9423,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9405,
											"end": 9423,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 9073,
											"end": 9429,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 737,
											"end": 769,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 737,
											"end": 769,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 737,
											"end": 769,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 719,
											"end": 770,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 719,
											"end": 770,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 707,
											"end": 709,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 692,
											"end": 710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1991,
											"end": 2484,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 1991,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2071,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2067,
											"end": 2071,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2085,
											"end": 2095,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7082,
											"end": 7116,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2105,
											"end": 2109,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 7132,
											"end": 7150,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7132,
											"end": 7150,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7132,
											"end": 7150,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7125,
											"end": 7168,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7184,
											"end": 7202,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7184,
											"end": 7202,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7184,
											"end": 7202,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7177,
											"end": 7211,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7177,
											"end": 7211,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7177,
											"end": 7211,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2067,
											"end": 2071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2071,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2071,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2071,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2084,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 2067,
											"end": 2084,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7017,
											"end": 7035,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7017,
											"end": 7035,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 2067,
											"end": 2124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2140,
											"end": 2151,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2136,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2134,
											"end": 2136,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2134,
											"end": 2151,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2151,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2151,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 2134,
											"end": 2151,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2151,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 2134,
											"end": 2151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2151,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 2134,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2151,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2151,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2151,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2151,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2134,
											"end": 2151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2167,
											"end": 2177,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2163,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2161,
											"end": 2163,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2177,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2177,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2177,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 2161,
											"end": 2177,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 2161,
											"end": 2177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2177,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 2161,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2177,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2177,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2303,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2331,
											"end": 2341,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2188,
											"end": 2210,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2330,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2342,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2323,
											"end": 2351,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2397,
											"end": 2399,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2397,
											"end": 2399,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2384,
											"end": 2393,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2384,
											"end": 2393,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2381,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2379,
											"end": 2381,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 2379,
											"end": 2393,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2384,
											"end": 2393,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 2379,
											"end": 2393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2379,
											"end": 2393,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 2379,
											"end": 2393,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 2378,
											"end": 2399,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2399,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 2378,
											"end": 2399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2399,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 2378,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2362,
											"end": 2374,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2362,
											"end": 2400,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 2411,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 2411,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2411,
											"end": 2421,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 2411,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2477,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2436,
											"end": 2477,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2477,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4842,
											"end": 4867,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4842,
											"end": 4867,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4842,
											"end": 4867,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2467,
											"end": 2476,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 4898,
											"end": 4900,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4876,
											"end": 4910,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2442,
											"end": 2452,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2442,
											"end": 2452,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2477,
											"name": "PUSH",
											"source": 7,
											"value": "5CAAD8F5613B6F1D592FC8C69D8F0999453740F0806C754F20CC92F3D4B2B1B6"
										},
										{
											"begin": 2436,
											"end": 2477,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4815,
											"end": 4833,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2436,
											"end": 2477,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2436,
											"end": 2477,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2477,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2477,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2477,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2436,
											"end": 2477,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2057,
											"end": 2484,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 2484,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 2484,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 2484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3828,
											"end": 4858,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 3828,
											"end": 4858,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3884,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3884,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3884,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3938,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3877,
											"end": 3884,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3939,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 3957,
											"end": 3963,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 3939,
											"end": 3954,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 3939,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 3939,
											"end": 3963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3939,
											"end": 3963,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 3939,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3964,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3968,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4827,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 3926,
											"end": 4827,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4024,
											"end": 4034,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4013,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4035,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4035,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4023,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4016,
											"end": 4035,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4016,
											"end": 4035,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4035,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4016,
											"end": 4035,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4035,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4082,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4069,
											"end": 4082,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4035,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4016,
											"end": 4035,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4013,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4307,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 4136,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4161,
											"end": 4170,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4157,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4156,
											"end": 4170,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 4136,
											"end": 4307,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4220,
											"end": 4226,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4227,
											"end": 4228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 4220,
											"end": 4229,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 4220,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 4220,
											"end": 4229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 4220,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4220,
											"end": 4229,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4220,
											"end": 4229,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4220,
											"end": 4229,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4220,
											"end": 4229,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4220,
											"end": 4229,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4195,
											"end": 4229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4286,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4291,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4284,
											"end": 4291,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4284,
											"end": 4291,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4266,
											"end": 4281,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4266,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 4266,
											"end": 4291,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4266,
											"end": 4291,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4266,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 4266,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4266,
											"end": 4291,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 4266,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4247,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 4247,
											"end": 4292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4247,
											"end": 4292,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4247,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4247,
											"end": 4292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4247,
											"end": 4292,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 4247,
											"end": 4292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4247,
											"end": 4292,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4247,
											"end": 4292,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4177,
											"end": 4307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4175,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4175,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 4172,
											"end": 4175,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 4172,
											"end": 4175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4175,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 4172,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4175,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 4136,
											"end": 4307,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4307,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 4136,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4136,
											"end": 4307,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4325,
											"end": 4334,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4320,
											"end": 4817,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 4320,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4345,
											"end": 4354,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4340,
											"end": 4341,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4340,
											"end": 4354,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4320,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 4320,
											"end": 4817,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4401,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4404,
											"end": 4410,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4411,
											"end": 4412,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 4404,
											"end": 4413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4404,
											"end": 4413,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4485,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4483,
											"end": 4485,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4470,
											"end": 4479,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4470,
											"end": 4479,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4379,
											"end": 4413,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4483,
											"end": 4485,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 4453,
											"end": 4479,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 4453,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4453,
											"end": 4479,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 4453,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 4452,
											"end": 4485,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4485,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4452,
											"end": 4485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4452,
											"end": 4485,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 4452,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4431,
											"end": 4486,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4431,
											"end": 4486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4521,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4543,
											"end": 4545,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4543,
											"end": 4550,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4543,
											"end": 4550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4543,
											"end": 4550,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4525,
											"end": 4540,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4525,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 4525,
											"end": 4550,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4525,
											"end": 4550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4525,
											"end": 4550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 4525,
											"end": 4550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4525,
											"end": 4550,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 4525,
											"end": 4550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4551,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4569,
											"end": 4588,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4591,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 4603,
											"end": 4617,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4504,
											"end": 4551,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 4617,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4591,
											"end": 4617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 4617,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 4591,
											"end": 4617,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4800,
											"end": 4802,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4800,
											"end": 4802,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4569,
											"end": 4617,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4569,
											"end": 4617,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4569,
											"end": 4617,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4712,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4713,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 4731,
											"end": 4737,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 4713,
											"end": 4728,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4713,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4713,
											"end": 4737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4713,
											"end": 4737,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 4713,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4704,
											"end": 4738,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4677,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 4668,
											"end": 4738,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 4668,
											"end": 4738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4738,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 4668,
											"end": 4738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 4668,
											"end": 4776,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4776,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 4668,
											"end": 4776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4668,
											"end": 4776,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 4668,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4667,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 4667,
											"end": 4802,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4667,
											"end": 4802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4667,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "87"
										},
										{
											"begin": 4667,
											"end": 4802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4667,
											"end": 4802,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 4667,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 4635,
											"end": 4802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4802,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 4635,
											"end": 4802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4802,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 4635,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4802,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 4635,
											"end": 4802,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4361,
											"end": 4817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4361,
											"end": 4817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4361,
											"end": 4817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4361,
											"end": 4817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4359,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4359,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 4356,
											"end": 4359,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 4356,
											"end": 4359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4359,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 4356,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4359,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4320,
											"end": 4817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 4320,
											"end": 4817,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4320,
											"end": 4817,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 4320,
											"end": 4817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4320,
											"end": 4817,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3970,
											"end": 4827,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3970,
											"end": 4827,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3970,
											"end": 4827,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3926,
											"end": 4827,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 3926,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4843,
											"end": 4851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3828,
											"end": 4858,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3828,
											"end": 4858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3822,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 3510,
											"end": 3822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3588,
											"end": 3598,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3587,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3599,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3580,
											"end": 3606,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3606,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3572,
											"end": 3606,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 3564,
											"end": 3630,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3630,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3564,
											"end": 3630,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3564,
											"end": 3630,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3630,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9776,
											"end": 9778,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3564,
											"end": 3630,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3564,
											"end": 3630,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3564,
											"end": 3630,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9758,
											"end": 9779,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9815,
											"end": 9817,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 9795,
											"end": 9813,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9795,
											"end": 9813,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9795,
											"end": 9813,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9788,
											"end": 9818,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E646578206F7574206F6620626F756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9834,
											"end": 9852,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9834,
											"end": 9852,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9834,
											"end": 9852,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9827,
											"end": 9876,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9911,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9893,
											"end": 9911,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3564,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 9574,
											"end": 9917,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3564,
											"end": 3630,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 3564,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3781,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 3640,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3676,
											"end": 3686,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3668,
											"end": 3675,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3668,
											"end": 3687,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3668,
											"end": 3694,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3668,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 3668,
											"end": 3698,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3697,
											"end": 3698,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3697,
											"end": 3698,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3668,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 3668,
											"end": 3698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3668,
											"end": 3698,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 3668,
											"end": 3698,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3664,
											"end": 3665,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3664,
											"end": 3698,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3781,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 3640,
											"end": 3781,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3752,
											"end": 3762,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3763,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3763,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3763,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3751,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3744,
											"end": 3763,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3744,
											"end": 3763,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3763,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3744,
											"end": 3763,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3763,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 3764,
											"end": 3765,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3769,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3764,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 3764,
											"end": 3769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3764,
											"end": 3769,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 3764,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 3744,
											"end": 3770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3744,
											"end": 3770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3726,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3719,
											"end": 3738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 3737,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3719,
											"end": 3738,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3719,
											"end": 3738,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3738,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3738,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3738,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3719,
											"end": 3738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3738,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3738,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3738,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3719,
											"end": 3738,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3738,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3719,
											"end": 3738,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3740,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 3719,
											"end": 3741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3770,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3770,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3770,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3770,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3770,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3770,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3719,
											"end": 3770,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3770,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3770,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3770,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3770,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3770,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3770,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3719,
											"end": 3770,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3770,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3770,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3770,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3770,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3719,
											"end": 3770,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3700,
											"end": 3703,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3700,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 3700,
											"end": 3703,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3700,
											"end": 3703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 3700,
											"end": 3703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3700,
											"end": 3703,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 3700,
											"end": 3703,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3700,
											"end": 3703,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3700,
											"end": 3703,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3700,
											"end": 3703,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 3640,
											"end": 3781,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3781,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 3640,
											"end": 3781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3798,
											"end": 3808,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3809,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3790,
											"end": 3809,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3809,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3809,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3797,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3790,
											"end": 3809,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3790,
											"end": 3809,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3809,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3790,
											"end": 3809,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3809,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 3790,
											"end": 3815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3790,
											"end": 3815,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3510,
											"end": 3822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1373,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 1315,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1366,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1364,
											"end": 1366,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1361,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1359,
											"end": 1361,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 1359,
											"end": 1366,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 1359,
											"end": 1366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1366,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 1359,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1354,
											"end": 1356,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10256,
											"end": 10258,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10238,
											"end": 10259,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10295,
											"end": 10297,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 10275,
											"end": 10293,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10275,
											"end": 10293,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10275,
											"end": 10293,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10268,
											"end": 10298,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10314,
											"end": 10332,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10314,
											"end": 10332,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10314,
											"end": 10332,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10307,
											"end": 10357,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 10054,
											"end": 10398,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 781,
											"end": 1632,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 781,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1083,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1083,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1062,
											"end": 1083,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1132,
											"end": 1145,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1035,
											"end": 1053,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1035,
											"end": 1053,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1035,
											"end": 1053,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1154,
											"end": 1176,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1154,
											"end": 1176,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1154,
											"end": 1176,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 981,
											"end": 985,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 985,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1195,
											"end": 1197,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1195,
											"end": 1197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1231,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1231,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1231,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1213,
											"end": 1231,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1269,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1269,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1254,
											"end": 1269,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 981,
											"end": 985,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1297,
											"end": 1606,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 1297,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1311,
											"end": 1317,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1308,
											"end": 1309,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1305,
											"end": 1318,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1297,
											"end": 1606,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1297,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 1297,
											"end": 1606,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1383,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1370,
											"end": 1383,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1408,
											"end": 1417,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1408,
											"end": 1417,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1418,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1396,
											"end": 1418,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1458,
											"end": 1469,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1458,
											"end": 1469,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1458,
											"end": 1469,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1452,
											"end": 1470,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1450,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1450,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1438,
											"end": 1450,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1431,
											"end": 1471,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1511,
											"end": 1522,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1511,
											"end": 1522,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1505,
											"end": 1523,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1491,
											"end": 1503,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1491,
											"end": 1503,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1491,
											"end": 1503,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1484,
											"end": 1524,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1557,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1544,
											"end": 1558,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1544,
											"end": 1558,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1544,
											"end": 1558,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1544,
											"end": 1558,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1581,
											"end": 1596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1581,
											"end": 1596,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1581,
											"end": 1596,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1581,
											"end": 1596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1333,
											"end": 1334,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1297,
											"end": 1606,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 1297,
											"end": 1606,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1297,
											"end": 1606,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 1297,
											"end": 1606,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1623,
											"end": 1626,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1626,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 781,
											"end": 1632,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 781,
											"end": 1632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1637,
											"end": 1923,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1637,
											"end": 1923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1749,
											"end": 1751,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1737,
											"end": 1746,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1728,
											"end": 1735,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1724,
											"end": 1747,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1720,
											"end": 1752,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1769,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1769,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 1717,
											"end": 1769,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1765,
											"end": 1766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1762,
											"end": 1763,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1755,
											"end": 1767,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1717,
											"end": 1769,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 1717,
											"end": 1769,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1791,
											"end": 1814,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1791,
											"end": 1814,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1843,
											"end": 1874,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1843,
											"end": 1874,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1833,
											"end": 1875,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1833,
											"end": 1875,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1823,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 1823,
											"end": 1893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1889,
											"end": 1890,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1886,
											"end": 1887,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1879,
											"end": 1891,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1823,
											"end": 1893,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 1823,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1912,
											"end": 1917,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1637,
											"end": 1923,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1637,
											"end": 1923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2277,
											"end": 2404,
											"name": "tag",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 2277,
											"end": 2404,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2338,
											"end": 2348,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 2333,
											"end": 2336,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2329,
											"end": 2349,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2326,
											"end": 2327,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2350,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2373,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2366,
											"end": 2367,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2359,
											"end": 2374,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2393,
											"end": 2397,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2390,
											"end": 2391,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2398,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2626,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 2409,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2449,
											"end": 2450,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2475,
											"end": 2476,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2465,
											"end": 2597,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 2465,
											"end": 2597,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2519,
											"end": 2529,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 2514,
											"end": 2517,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2510,
											"end": 2530,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2507,
											"end": 2508,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2531,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2554,
											"end": 2558,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 2551,
											"end": 2552,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2544,
											"end": 2559,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2582,
											"end": 2586,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2579,
											"end": 2580,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2587,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2465,
											"end": 2597,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 2465,
											"end": 2597,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2611,
											"end": 2620,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2611,
											"end": 2620,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2759,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 2631,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2707,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2707,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2698,
											"end": 2707,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2719,
											"end": 2730,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2719,
											"end": 2730,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2719,
											"end": 2730,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2716,
											"end": 2753,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2716,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 2716,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 2733,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 2733,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2733,
											"end": 2751,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 2733,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2759,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2759,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2759,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2631,
											"end": 2759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2764,
											"end": 2932,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 2764,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 2846,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 2846,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2837,
											"end": 2846,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2877,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2868,
											"end": 2877,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2885,
											"end": 2900,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2879,
											"end": 2901,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2879,
											"end": 2901,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2865,
											"end": 2902,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 2855,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 2855,
											"end": 2926,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 2906,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 2906,
											"end": 2924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2937,
											"end": 3062,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 2937,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3011,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3011,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3011,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3033,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3033,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3023,
											"end": 3033,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3020,
											"end": 3056,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3020,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 3020,
											"end": 3056,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3036,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 3036,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 3036,
											"end": 3054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4386,
											"end": 4663,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 4386,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4453,
											"end": 4459,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4506,
											"end": 4508,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4494,
											"end": 4503,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4485,
											"end": 4492,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4481,
											"end": 4504,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4477,
											"end": 4509,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4474,
											"end": 4526,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4474,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 4474,
											"end": 4526,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4522,
											"end": 4523,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4519,
											"end": 4520,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4512,
											"end": 4524,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4474,
											"end": 4526,
											"name": "tag",
											"source": 9,
											"value": "393"
										},
										{
											"begin": 4474,
											"end": 4526,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4554,
											"end": 4563,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4548,
											"end": 4564,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4607,
											"end": 4612,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4613,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4593,
											"end": 4614,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4586,
											"end": 4591,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4583,
											"end": 4615,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4573,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 4573,
											"end": 4633,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4629,
											"end": 4630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4626,
											"end": 4627,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4631,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6482,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 6298,
											"end": 6482,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6368,
											"end": 6374,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6421,
											"end": 6423,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6409,
											"end": 6418,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6400,
											"end": 6407,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6396,
											"end": 6419,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6392,
											"end": 6424,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6389,
											"end": 6441,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6389,
											"end": 6441,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 6389,
											"end": 6441,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6437,
											"end": 6438,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6434,
											"end": 6435,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6427,
											"end": 6439,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6389,
											"end": 6441,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 6389,
											"end": 6441,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6460,
											"end": 6476,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6476,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6482,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6298,
											"end": 6482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7974,
											"end": 8101,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 7974,
											"end": 8101,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8035,
											"end": 8045,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 8030,
											"end": 8033,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 8026,
											"end": 8046,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 8023,
											"end": 8024,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8016,
											"end": 8047,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8066,
											"end": 8070,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 8063,
											"end": 8064,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8056,
											"end": 8071,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8090,
											"end": 8094,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8087,
											"end": 8088,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8080,
											"end": 8095,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9434,
											"end": 9569,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 9434,
											"end": 9569,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9473,
											"end": 9476,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9494,
											"end": 9511,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9494,
											"end": 9511,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9494,
											"end": 9511,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9491,
											"end": 9534,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 9491,
											"end": 9534,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9514,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 9514,
											"end": 9532,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "361"
										},
										{
											"begin": 9514,
											"end": 9532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9514,
											"end": 9532,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 9514,
											"end": 9532,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9561,
											"end": 9562,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9550,
											"end": 9563,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9550,
											"end": 9563,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9434,
											"end": 9569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9922,
											"end": 10049,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 9922,
											"end": 10049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9983,
											"end": 9993,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 9978,
											"end": 9981,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 9974,
											"end": 9994,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 9971,
											"end": 9972,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9964,
											"end": 9995,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10014,
											"end": 10018,
											"name": "PUSH",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 10011,
											"end": 10012,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10004,
											"end": 10019,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10038,
											"end": 10042,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10035,
											"end": 10036,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10028,
											"end": 10043,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"DEX.sol",
								"MEME.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buy(uint256)": "d96a094a",
							"getETHPrice(uint256)": "1a753fed",
							"getMemePrice(uint256)": "5c572ed0",
							"getStacks()": "e8bca8b8",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"sell(uint256)": "e4849b32",
							"stack(uint256)": "dc9031c4",
							"stackingRate()": "9c74f05d",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"unstack(uint256)": "200061df"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Meme_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Meme_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"Sell\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Meme_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"Stack\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Meme_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"UnStack\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"meme_amount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"getETHPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"meme_amount\",\"type\":\"uint256\"}],\"name\":\"getMemePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStacks\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"meme_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"internalType\":\"struct DEX.Stack_Struct[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"meme_amount\",\"type\":\"uint256\"}],\"name\":\"stack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stackingRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"unstack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DEX.sol\":\"DEX\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"DEX.sol\":{\"keccak256\":\"0x20d15b6723398c5bf524300fa3e0a4cc954432e8b9b8ef3a1dc96b829e5edcfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d2e3aae4d0f8d8f1db1688f9d8722188b8e940f63fce94009475ba82b5265b59\",\"dweb:/ipfs/QmVUe6k7bVWDwTTLcuX3fP6T8pyycDR6jdnyMbR8PxbAiA\"]},\"MEME.sol\":{\"keccak256\":\"0x3fca3f1262f20833c3e079d9692dfd0af0f3a93b2eef3205f69430ae490a6d26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9f24cce4eb4afb866c7710fe6019de37da9944fa0914a0b8e0d0206fcb4bc1c\",\"dweb:/ipfs/QmPrDUwqYS4BDE6ks5bWgrnTnsbxw7DA7ddLcjSgt31Ltd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "DEX.sol:DEX",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 7,
								"contract": "DEX.sol:DEX",
								"label": "_owner",
								"offset": 1,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 996,
								"contract": "DEX.sol:DEX",
								"label": "meme",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ERC20)807"
							},
							{
								"astId": 1034,
								"contract": "DEX.sol:DEX",
								"label": "Stacked",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_array(t_struct(Stack_Struct)993_storage)dyn_storage)"
							},
							{
								"astId": 1038,
								"contract": "DEX.sol:DEX",
								"label": "dailyTax",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1040,
								"contract": "DEX.sol:DEX",
								"label": "stackingRate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1042,
								"contract": "DEX.sol:DEX",
								"label": "_k",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1044,
								"contract": "DEX.sol:DEX",
								"label": "_x",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1046,
								"contract": "DEX.sol:DEX",
								"label": "_y",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1049,
								"contract": "DEX.sol:DEX",
								"label": "precision",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1057,
								"contract": "DEX.sol:DEX",
								"label": "taxRate",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Stack_Struct)993_storage)dyn_storage": {
								"base": "t_struct(Stack_Struct)993_storage",
								"encoding": "dynamic_array",
								"label": "struct DEX.Stack_Struct[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ERC20)807": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_struct(Stack_Struct)993_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DEX.Stack_Struct[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Stack_Struct)993_storage)dyn_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stack_Struct)993_storage": {
								"encoding": "inplace",
								"label": "struct DEX.Stack_Struct",
								"members": [
									{
										"astId": 988,
										"contract": "DEX.sol:DEX",
										"label": "meme_amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 990,
										"contract": "DEX.sol:DEX",
										"label": "eth_amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 992,
										"contract": "DEX.sol:DEX",
										"label": "time",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MEME.sol": {
				"MEME": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MEME.sol\":306:923  contract MEME is ERC20, ERC20Burnable, Pausable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"MEME.sol\":370:468  constructor() ERC20(\"MEME\", \"MEME\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x04\n  dup1\n  dup3\n  mstore\n  shl(0xe0, 0x4d454d45)\n  0x20\n  dup1\n  dup5\n  add\n  dup3\n  swap1\n  mstore\n  dup5\n  mload\n  dup1\n  dup7\n  add\n  swap1\n  swap6\n  mstore\n  swap2\n  dup5\n  mstore\n  swap1\n  dup4\n  add\n  mstore\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_9\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x05\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_12\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_12:\n    /* \"MEME.sol\":417:460  _mint(msg.sender, 50000 * 10 ** decimals()) */\n  tag_17\n    /* \"MEME.sol\":423:433  msg.sender */\n  caller\n    /* \"MEME.sol\":443:459  10 ** decimals() */\n  tag_20\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n  0x12\n    /* \"MEME.sol\":443:445  10 */\n  0x0a\n    /* \"MEME.sol\":443:459  10 ** decimals() */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"MEME.sol\":435:459  50000 * 10 ** decimals() */\n  tag_22\n  swap1\n    /* \"MEME.sol\":435:440  50000 */\n  0xc350\n    /* \"MEME.sol\":435:459  50000 * 10 ** decimals() */\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"MEME.sol\":417:422  _mint */\n  tag_24\n    /* \"MEME.sol\":417:460  _mint(msg.sender, 50000 * 10 ** decimals()) */\n  jump\t// in\ntag_17:\n    /* \"MEME.sol\":306:923  contract MEME is ERC20, ERC20Burnable, Pausable, Ownable {... */\n  jump(tag_64)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  0x0100\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup2\n  dup2\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  dup6\n  and\n  or\n  swap1\n  swap5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  swap4\n  swap1\n  swap3\n  div\n  and\n  swap2\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\ntag_24:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8603:8624  account != address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_30\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4625:4627   */\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4607:4628   */\n  mstore\n    /* \"#utility.yul\":4664:4666   */\n  0x1f\n    /* \"#utility.yul\":4644:4662   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4637:4667   */\n  mstore\n    /* \"#utility.yul\":4703:4736   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":4683:4701   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4676:4737   */\n  mstore\n    /* \"#utility.yul\":4754:4772   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8671:8720  _beforeTokenTransfer(address(0), account, amount) */\n  tag_33\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8700:8701  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8704:8711  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8713:8719  amount */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8671:8691  _beforeTokenTransfer */\n  tag_34\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8671:8720  _beforeTokenTransfer(address(0), account, amount) */\n  jump\t// in\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8747:8753  amount */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8731:8743  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8731:8753  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_35\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8908  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8927  _balances[account] += amount */\n  dup1\n  sload\n  dup7\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  mload\n    /* \"#utility.yul\":5059:5084   */\n  dup5\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":5032:5050   */\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"MEME.sol\":721:920  function _beforeTokenTransfer(address from, address to, uint256 amount)... */\ntag_34:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n  tag_42\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n  tag_43\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n  jump\t// in\ntag_42:\n    /* \"MEME.sol\":868:912  super._beforeTokenTransfer(from, to, amount) */\n  tag_45\n    /* \"MEME.sol\":895:899  from */\n  dup4\n    /* \"MEME.sol\":901:903  to */\n  dup4\n    /* \"MEME.sol\":905:911  amount */\n  dup4\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"MEME.sol\":868:912  super._beforeTokenTransfer(from, to, amount) */\n  dup5\n  and\n  jump\t// in\ntag_45:\n    /* \"MEME.sol\":721:920  function _beforeTokenTransfer(address from, address to, uint256 amount)... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\ntag_43:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n  and(0xff, sload(0x05))\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n  iszero\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n  tag_51\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5297:5299   */\n  0x20\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5279:5300   */\n  mstore\n    /* \"#utility.yul\":5336:5338   */\n  0x10\n    /* \"#utility.yul\":5316:5334   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5309:5339   */\n  mstore\n  shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n    /* \"#utility.yul\":5355:5373   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5348:5394   */\n  mstore\n    /* \"#utility.yul\":5411:5429   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n  tag_31\n    /* \"#utility.yul\":5095:5435   */\n  jump\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\ntag_51:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_56:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_57:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_67:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_68:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_59:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_72\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_72:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_73:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_73)\ntag_75:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_8:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_79\n  tag_56\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1582:1679   */\n  tag_80\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_81\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_57\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_59\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_84\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_84:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_75)\n    /* \"#utility.yul\":1810:2473   */\ntag_83:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_87:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_90:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\n    /* \"#utility.yul\":2735:2862   */\ntag_61:\n    /* \"#utility.yul\":2796:2806   */\n  0x4e487b71\n    /* \"#utility.yul\":2791:2794   */\n  0xe0\n    /* \"#utility.yul\":2787:2807   */\n  shl\n    /* \"#utility.yul\":2784:2785   */\n  0x00\n    /* \"#utility.yul\":2777:2808   */\n  mstore\n    /* \"#utility.yul\":2827:2831   */\n  0x11\n    /* \"#utility.yul\":2824:2825   */\n  0x04\n    /* \"#utility.yul\":2817:2832   */\n  mstore\n    /* \"#utility.yul\":2851:2855   */\n  0x24\n    /* \"#utility.yul\":2848:2849   */\n  0x00\n    /* \"#utility.yul\":2841:2856   */\n  revert\n    /* \"#utility.yul\":2867:3289   */\ntag_62:\n    /* \"#utility.yul\":2956:2957   */\n  0x01\n    /* \"#utility.yul\":2999:3004   */\n  dup2\n    /* \"#utility.yul\":2956:2957   */\n  dup2\n    /* \"#utility.yul\":3013:3283   */\ntag_93:\n    /* \"#utility.yul\":3034:3041   */\n  dup1\n    /* \"#utility.yul\":3024:3032   */\n  dup6\n    /* \"#utility.yul\":3021:3042   */\n  gt\n    /* \"#utility.yul\":3013:3283   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3093:3097   */\n  dup2\n    /* \"#utility.yul\":3089:3090   */\n  0x00\n    /* \"#utility.yul\":3085:3091   */\n  not\n    /* \"#utility.yul\":3081:3098   */\n  div\n    /* \"#utility.yul\":3075:3079   */\n  dup3\n    /* \"#utility.yul\":3072:3099   */\n  gt\n    /* \"#utility.yul\":3069:3122   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":3102:3120   */\n  tag_97\n  tag_61\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3152:3159   */\n  dup1\n    /* \"#utility.yul\":3142:3150   */\n  dup6\n    /* \"#utility.yul\":3138:3160   */\n  and\n    /* \"#utility.yul\":3135:3190   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":3172:3188   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":3135:3190   */\ntag_98:\n    /* \"#utility.yul\":3251:3273   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":3211:3226   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":3013:3283   */\n  jump(tag_93)\ntag_95:\n    /* \"#utility.yul\":3017:3020   */\n  pop\n    /* \"#utility.yul\":2867:3289   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3294:4100   */\ntag_63:\n    /* \"#utility.yul\":3343:3348   */\n  0x00\n    /* \"#utility.yul\":3373:3381   */\n  dup3\n    /* \"#utility.yul\":3363:3443   */\n  tag_100\n  jumpi\n  pop\n    /* \"#utility.yul\":3414:3415   */\n  0x01\n    /* \"#utility.yul\":3428:3433   */\n  jump(tag_99)\n    /* \"#utility.yul\":3363:3443   */\ntag_100:\n    /* \"#utility.yul\":3462:3466   */\n  dup2\n    /* \"#utility.yul\":3452:3528   */\n  tag_101\n  jumpi\n  pop\n    /* \"#utility.yul\":3499:3500   */\n  0x00\n    /* \"#utility.yul\":3513:3518   */\n  jump(tag_99)\n    /* \"#utility.yul\":3452:3528   */\ntag_101:\n    /* \"#utility.yul\":3544:3548   */\n  dup2\n    /* \"#utility.yul\":3562:3563   */\n  0x01\n    /* \"#utility.yul\":3557:3616   */\n  dup2\n  eq\n  tag_103\n  jumpi\n    /* \"#utility.yul\":3630:3631   */\n  0x02\n    /* \"#utility.yul\":3625:3755   */\n  dup2\n  eq\n  tag_104\n  jumpi\n    /* \"#utility.yul\":3537:3755   */\n  jump(tag_102)\n    /* \"#utility.yul\":3557:3616   */\ntag_103:\n    /* \"#utility.yul\":3587:3588   */\n  0x01\n    /* \"#utility.yul\":3578:3588   */\n  swap2\n  pop\n    /* \"#utility.yul\":3601:3606   */\n  pop\n  jump(tag_99)\n    /* \"#utility.yul\":3625:3755   */\ntag_104:\n    /* \"#utility.yul\":3662:3665   */\n  0xff\n    /* \"#utility.yul\":3652:3660   */\n  dup5\n    /* \"#utility.yul\":3649:3666   */\n  gt\n    /* \"#utility.yul\":3646:3689   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":3669:3687   */\n  tag_106\n  tag_61\n  jump\t// in\ntag_106:\n  pop\n  pop\n    /* \"#utility.yul\":3725:3726   */\n  0x01\n    /* \"#utility.yul\":3711:3727   */\n  dup3\n  shl\n    /* \"#utility.yul\":3740:3745   */\n  jump(tag_99)\n    /* \"#utility.yul\":3537:3755   */\ntag_102:\n  pop\n    /* \"#utility.yul\":3839:3841   */\n  0x20\n    /* \"#utility.yul\":3829:3837   */\n  dup4\n    /* \"#utility.yul\":3826:3842   */\n  lt\n    /* \"#utility.yul\":3820:3823   */\n  0x0133\n    /* \"#utility.yul\":3814:3818   */\n  dup4\n    /* \"#utility.yul\":3811:3824   */\n  lt\n    /* \"#utility.yul\":3807:3843   */\n  and\n    /* \"#utility.yul\":3801:3803   */\n  0x4e\n    /* \"#utility.yul\":3791:3799   */\n  dup5\n    /* \"#utility.yul\":3788:3804   */\n  lt\n    /* \"#utility.yul\":3783:3785   */\n  0x0b\n    /* \"#utility.yul\":3777:3781   */\n  dup5\n    /* \"#utility.yul\":3774:3786   */\n  lt\n    /* \"#utility.yul\":3770:3805   */\n  and\n    /* \"#utility.yul\":3767:3844   */\n  or\n    /* \"#utility.yul\":3764:3923   */\n  iszero\n  tag_107\n  jumpi\n  pop\n    /* \"#utility.yul\":3876:3895   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":3908:3913   */\n  jump(tag_99)\n    /* \"#utility.yul\":3764:3923   */\ntag_107:\n    /* \"#utility.yul\":3955:3989   */\n  tag_108\n    /* \"#utility.yul\":3980:3988   */\n  dup4\n    /* \"#utility.yul\":3974:3978   */\n  dup4\n    /* \"#utility.yul\":3955:3989   */\n  tag_62\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4025:4031   */\n  dup1\n    /* \"#utility.yul\":4021:4022   */\n  0x00\n    /* \"#utility.yul\":4017:4023   */\n  not\n    /* \"#utility.yul\":4013:4032   */\n  div\n    /* \"#utility.yul\":4004:4011   */\n  dup3\n    /* \"#utility.yul\":4001:4033   */\n  gt\n    /* \"#utility.yul\":3998:4056   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":4036:4054   */\n  tag_110\n  tag_61\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":4074:4094   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":3294:4100   */\ntag_99:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4105:4245   */\ntag_21:\n    /* \"#utility.yul\":4163:4168   */\n  0x00\n    /* \"#utility.yul\":4192:4239   */\n  tag_112\n    /* \"#utility.yul\":4233:4237   */\n  0xff\n    /* \"#utility.yul\":4223:4231   */\n  dup5\n    /* \"#utility.yul\":4219:4238   */\n  and\n    /* \"#utility.yul\":4213:4217   */\n  dup4\n    /* \"#utility.yul\":4192:4239   */\n  tag_63\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":4183:4239   */\n  swap4\n    /* \"#utility.yul\":4105:4245   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4250:4418   */\ntag_23:\n    /* \"#utility.yul\":4323:4332   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4354:4363   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4371:4386   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4365:4387   */\n  dup5\n  eq\n    /* \"#utility.yul\":4351:4388   */\n  or\n    /* \"#utility.yul\":4341:4412   */\n  tag_99\n  jumpi\n    /* \"#utility.yul\":4392:4410   */\n  tag_99\n  tag_61\n  jump\t// in\n    /* \"#utility.yul\":4783:4908   */\ntag_36:\n    /* \"#utility.yul\":4848:4857   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4869:4879   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4866:4902   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":4882:4900   */\n  tag_99\n  tag_61\n  jump\t// in\n    /* \"#utility.yul\":5095:5435   */\ntag_64:\n    /* \"MEME.sol\":306:923  contract MEME is ERC20, ERC20Burnable, Pausable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MEME.sol\":306:923  contract MEME is ERC20, ERC20Burnable, Pausable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x39509351\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_28\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_28\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_28\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"MEME.sol\":545:610  function unpause() public onlyOwner {... */\n    tag_9:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      stop\n        /* \"MEME.sol\":618:713  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_10:\n      tag_53\n      tag_56\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":578:667  function burn(uint256 amount) public virtual {... */\n    tag_11:\n      tag_53\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x05))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      jump(tag_30)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_36\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_53\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":973:1134  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_15:\n      tag_53\n      tag_73\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"MEME.sol\":476:537  function pause() public onlyOwner {... */\n    tag_16:\n      tag_53\n      tag_76\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload(0x05)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2440:2472   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2422:2473   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2410:2412   */\n      0x20\n        /* \"#utility.yul\":2395:2413   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_28\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_18:\n      tag_26\n      tag_82\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_19:\n      tag_30\n      tag_85\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_20:\n      tag_30\n      tag_89\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_21:\n      tag_36\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_53\n      tag_98\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_102\n      jump\t// in\n    tag_103:\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_105\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_104)\n    tag_105:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_106:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_106\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_110\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_107:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_117:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_110\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_123\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"MEME.sol\":545:610  function unpause() public onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_127:\n        /* \"MEME.sol\":592:602  _unpause() */\n      tag_130\n        /* \"MEME.sol\":592:600  _unpause */\n      tag_131\n        /* \"MEME.sol\":592:602  _unpause() */\n      jump\t// in\n    tag_130:\n        /* \"MEME.sol\":545:610  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"MEME.sol\":618:713  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_133:\n        /* \"MEME.sol\":688:705  _mint(to, amount) */\n      tag_135\n        /* \"MEME.sol\":694:696  to */\n      dup3\n        /* \"MEME.sol\":698:704  amount */\n      dup3\n        /* \"MEME.sol\":688:693  _mint */\n      tag_136\n        /* \"MEME.sol\":688:705  _mint(to, amount) */\n      jump\t// in\n    tag_135:\n        /* \"MEME.sol\":618:713  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":578:667  function burn(uint256 amount) public virtual {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":633:660  _burn(_msgSender(), amount) */\n      tag_138\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":653:659  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":633:638  _burn */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":633:660  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":578:667  function burn(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":973:1134  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1049:1095  _spendAllowance(account, _msgSender(), amount) */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1065:1072  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1088:1094  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1049:1064  _spendAllowance */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1049:1095  _spendAllowance(account, _msgSender(), amount) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1105:1127  _burn(account, amount) */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1111:1118  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1120:1126  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1105:1110  _burn */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1105:1127  _burn(account, amount) */\n      jump\t// in\n        /* \"MEME.sol\":476:537  function pause() public onlyOwner {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_153:\n        /* \"MEME.sol\":521:529  _pause() */\n      tag_130\n        /* \"MEME.sol\":521:527  _pause */\n      tag_156\n        /* \"MEME.sol\":521:529  _pause() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_166\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3563:3565   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3545:3566   */\n      mstore\n        /* \"#utility.yul\":3602:3604   */\n      0x25\n        /* \"#utility.yul\":3582:3600   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3575:3605   */\n      mstore\n        /* \"#utility.yul\":3641:3675   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3621:3639   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3614:3676   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3692:3710   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3685:3720   */\n      mstore\n        /* \"#utility.yul\":3737:3756   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_110\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3969:3971   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3951:3972   */\n      mstore\n        /* \"#utility.yul\":4008:4010   */\n      0x26\n        /* \"#utility.yul\":3988:4006   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3981:4011   */\n      mstore\n        /* \"#utility.yul\":4047:4081   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4027:4045   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4020:4082   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":4098:4116   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4091:4127   */\n      mstore\n        /* \"#utility.yul\":4144:4163   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_168\n        /* \"#utility.yul\":3767:4169   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4376:4378   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4358:4379   */\n      mstore\n        /* \"#utility.yul\":4415:4417   */\n      0x24\n        /* \"#utility.yul\":4395:4413   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4388:4418   */\n      mstore\n        /* \"#utility.yul\":4454:4488   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4434:4452   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4427:4489   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4505:4523   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4498:4532   */\n      mstore\n        /* \"#utility.yul\":4549:4568   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_168\n        /* \"#utility.yul\":4174:4574   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4781:4783   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4763:4784   */\n      mstore\n        /* \"#utility.yul\":4820:4822   */\n      0x22\n        /* \"#utility.yul\":4800:4818   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4793:4823   */\n      mstore\n        /* \"#utility.yul\":4859:4893   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4839:4857   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4832:4894   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4910:4928   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4903:4935   */\n      mstore\n        /* \"#utility.yul\":4952:4971   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_168\n        /* \"#utility.yul\":4579:4977   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5184:5186   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5166:5187   */\n      mstore\n        /* \"#utility.yul\":5223:5225   */\n      0x1d\n        /* \"#utility.yul\":5203:5221   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5196:5226   */\n      mstore\n        /* \"#utility.yul\":5262:5293   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":5242:5260   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5235:5294   */\n      mstore\n        /* \"#utility.yul\":5311:5329   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_168\n        /* \"#utility.yul\":4982:5335   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5542:5544   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5524:5545   */\n      mstore\n        /* \"#utility.yul\":5581:5583   */\n      0x25\n        /* \"#utility.yul\":5561:5579   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5554:5584   */\n      mstore\n        /* \"#utility.yul\":5620:5654   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5600:5618   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5593:5655   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":5671:5689   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5664:5699   */\n      mstore\n        /* \"#utility.yul\":5716:5735   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_168\n        /* \"#utility.yul\":5340:5741   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_199:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5948:5950   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5930:5951   */\n      mstore\n        /* \"#utility.yul\":5987:5989   */\n      0x23\n        /* \"#utility.yul\":5967:5985   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5960:5990   */\n      mstore\n        /* \"#utility.yul\":6026:6060   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":6006:6024   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5999:6061   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":6077:6095   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6070:6103   */\n      mstore\n        /* \"#utility.yul\":6120:6139   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_168\n        /* \"#utility.yul\":5746:6145   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7697:7735  _beforeTokenTransfer(from, to, amount) */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7718:7722  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7724:7726  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7728:7734  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7697:7717  _beforeTokenTransfer */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7697:7735  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_205:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6352:6354   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6334:6355   */\n      mstore\n        /* \"#utility.yul\":6391:6393   */\n      0x26\n        /* \"#utility.yul\":6371:6389   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6364:6394   */\n      mstore\n        /* \"#utility.yul\":6430:6464   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":6410:6428   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6403:6465   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":6481:6499   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6474:6510   */\n      mstore\n        /* \"#utility.yul\":6527:6546   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_168\n        /* \"#utility.yul\":6150:6552   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_207:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9375:10034  function _burn(address account, uint256 amount) internal virtual {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6759:6761   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6741:6762   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6778:6796   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6771:6801   */\n      mstore\n        /* \"#utility.yul\":6837:6871   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6817:6835   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6810:6872   */\n      mstore\n        /* \"#utility.yul\":6889:6907   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_168\n        /* \"#utility.yul\":6557:6913   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_220\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_221\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x05\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n    tag_223:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2440:2472   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2422:2473   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2410:2412   */\n      0x20\n        /* \"#utility.yul\":2395:2413   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8603:8624  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7120:7122   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7102:7123   */\n      mstore\n        /* \"#utility.yul\":7159:7161   */\n      0x1f\n        /* \"#utility.yul\":7139:7157   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7132:7162   */\n      mstore\n        /* \"#utility.yul\":7198:7231   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":7178:7196   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7171:7232   */\n      mstore\n        /* \"#utility.yul\":7249:7267   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_168\n        /* \"#utility.yul\":6918:7273   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8671:8720  _beforeTokenTransfer(address(0), account, amount) */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8700:8701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8704:8711  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8713:8719  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8671:8691  _beforeTokenTransfer */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8671:8720  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8747:8753  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8731:8743  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8731:8753  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_230\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_230:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8927  _balances[account] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MEME.sol\":618:713  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9375:10034  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9458:9479  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7480:7482   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7462:7483   */\n      mstore\n        /* \"#utility.yul\":7519:7521   */\n      0x21\n        /* \"#utility.yul\":7499:7517   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7492:7522   */\n      mstore\n        /* \"#utility.yul\":7558:7592   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":7538:7556   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7531:7593   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":7609:7627   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7602:7633   */\n      mstore\n        /* \"#utility.yul\":7650:7669   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_168\n        /* \"#utility.yul\":7278:7675   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9528:9577  _beforeTokenTransfer(account, address(0), amount) */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9549:9556  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9566:9567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9570:9576  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9528:9548  _beforeTokenTransfer */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9528:9577  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9613:9631  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9588:9610  uint256 accountBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9613:9631  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9649:9673  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7882:7884   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7864:7885   */\n      mstore\n        /* \"#utility.yul\":7921:7923   */\n      0x22\n        /* \"#utility.yul\":7901:7919   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7894:7924   */\n      mstore\n        /* \"#utility.yul\":7960:7994   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":7940:7958   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7933:7995   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":8011:8029   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8004:8036   */\n      mstore\n        /* \"#utility.yul\":8053:8072   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_168\n        /* \"#utility.yul\":7680:8078   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_238:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9755  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9767:9790  accountBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9790  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9883:9895  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9883:9905  _totalSupply -= amount */\n      dup1\n      sload\n      dup8\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9755  _balances */\n      swap2\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      tag_190\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      0x0100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      dup6\n      and\n      or\n      swap1\n      swap5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      swap4\n      swap1\n      swap3\n      div\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_245\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_246\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x05\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_223\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"MEME.sol\":721:920  function _beforeTokenTransfer(address from, address to, uint256 amount)... */\n    tag_206:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_251\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_246\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9440:10034  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9375:10034  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x05))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8285:8287   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8267:8288   */\n      mstore\n        /* \"#utility.yul\":8324:8326   */\n      0x14\n        /* \"#utility.yul\":8304:8322   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8297:8327   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":8343:8361   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8336:8386   */\n      mstore\n        /* \"#utility.yul\":8403:8421   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_168\n        /* \"#utility.yul\":8083:8427   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x05))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8634:8636   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8616:8637   */\n      mstore\n        /* \"#utility.yul\":8673:8675   */\n      0x10\n        /* \"#utility.yul\":8653:8671   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8646:8676   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":8692:8710   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8685:8731   */\n      mstore\n        /* \"#utility.yul\":8748:8766   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_168\n        /* \"#utility.yul\":8432:8772   */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_29:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_270:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_270)\n    tag_272:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_267:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_274:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_32:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_276:\n        /* \"#utility.yul\":913:942   */\n      tag_277\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_267\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_42:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_281:\n        /* \"#utility.yul\":1563:1592   */\n      tag_282\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_267\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_283\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_267\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2080   */\n    tag_60:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_286:\n      pop\n        /* \"#utility.yul\":2051:2074   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1900:2080   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2085:2271   */\n    tag_67:\n        /* \"#utility.yul\":2144:2150   */\n      0x00\n        /* \"#utility.yul\":2197:2199   */\n      0x20\n        /* \"#utility.yul\":2185:2194   */\n      dup3\n        /* \"#utility.yul\":2176:2183   */\n      dup5\n        /* \"#utility.yul\":2172:2195   */\n      sub\n        /* \"#utility.yul\":2168:2200   */\n      slt\n        /* \"#utility.yul\":2165:2217   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":2213:2214   */\n      0x00\n        /* \"#utility.yul\":2210:2211   */\n      dup1\n        /* \"#utility.yul\":2203:2215   */\n      revert\n        /* \"#utility.yul\":2165:2217   */\n    tag_288:\n        /* \"#utility.yul\":2236:2265   */\n      tag_289\n        /* \"#utility.yul\":2255:2264   */\n      dup3\n        /* \"#utility.yul\":2236:2265   */\n      tag_267\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":2226:2265   */\n      swap4\n        /* \"#utility.yul\":2085:2271   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2484:2744   */\n    tag_94:\n        /* \"#utility.yul\":2552:2558   */\n      0x00\n        /* \"#utility.yul\":2560:2566   */\n      dup1\n        /* \"#utility.yul\":2613:2615   */\n      0x40\n        /* \"#utility.yul\":2601:2610   */\n      dup4\n        /* \"#utility.yul\":2592:2599   */\n      dup6\n        /* \"#utility.yul\":2588:2611   */\n      sub\n        /* \"#utility.yul\":2584:2616   */\n      slt\n        /* \"#utility.yul\":2581:2633   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":2629:2630   */\n      0x00\n        /* \"#utility.yul\":2626:2627   */\n      dup1\n        /* \"#utility.yul\":2619:2631   */\n      revert\n        /* \"#utility.yul\":2581:2633   */\n    tag_292:\n        /* \"#utility.yul\":2652:2681   */\n      tag_293\n        /* \"#utility.yul\":2671:2680   */\n      dup4\n        /* \"#utility.yul\":2652:2681   */\n      tag_267\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":2642:2681   */\n      swap2\n      pop\n        /* \"#utility.yul\":2700:2738   */\n      tag_294\n        /* \"#utility.yul\":2734:2736   */\n      0x20\n        /* \"#utility.yul\":2723:2732   */\n      dup5\n        /* \"#utility.yul\":2719:2737   */\n      add\n        /* \"#utility.yul\":2700:2738   */\n      tag_267\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2690:2738   */\n      swap1\n      pop\n        /* \"#utility.yul\":2484:2744   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2749:3129   */\n    tag_102:\n        /* \"#utility.yul\":2828:2829   */\n      0x01\n        /* \"#utility.yul\":2824:2836   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2871:2883   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2892:2953   */\n      tag_296\n      jumpi\n        /* \"#utility.yul\":2946:2950   */\n      0x7f\n        /* \"#utility.yul\":2938:2944   */\n      dup3\n        /* \"#utility.yul\":2934:2951   */\n      and\n        /* \"#utility.yul\":2924:2951   */\n      swap2\n      pop\n        /* \"#utility.yul\":2892:2953   */\n    tag_296:\n        /* \"#utility.yul\":2999:3001   */\n      0x20\n        /* \"#utility.yul\":2991:2997   */\n      dup3\n        /* \"#utility.yul\":2988:3002   */\n      lt\n        /* \"#utility.yul\":2968:2986   */\n      dup2\n        /* \"#utility.yul\":2965:3003   */\n      sub\n        /* \"#utility.yul\":2962:3123   */\n      tag_297\n      jumpi\n        /* \"#utility.yul\":3045:3055   */\n      0x4e487b71\n        /* \"#utility.yul\":3040:3043   */\n      0xe0\n        /* \"#utility.yul\":3036:3056   */\n      shl\n        /* \"#utility.yul\":3033:3034   */\n      0x00\n        /* \"#utility.yul\":3026:3057   */\n      mstore\n        /* \"#utility.yul\":3080:3084   */\n      0x22\n        /* \"#utility.yul\":3077:3078   */\n      0x04\n        /* \"#utility.yul\":3070:3085   */\n      mstore\n        /* \"#utility.yul\":3108:3112   */\n      0x24\n        /* \"#utility.yul\":3105:3106   */\n      0x00\n        /* \"#utility.yul\":3098:3113   */\n      revert\n        /* \"#utility.yul\":2962:3123   */\n    tag_297:\n      pop\n        /* \"#utility.yul\":2749:3129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3134:3356   */\n    tag_125:\n        /* \"#utility.yul\":3199:3208   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3220:3230   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3217:3350   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":3272:3282   */\n      0x4e487b71\n        /* \"#utility.yul\":3267:3270   */\n      0xe0\n        /* \"#utility.yul\":3263:3283   */\n      shl\n        /* \"#utility.yul\":3260:3261   */\n      0x00\n        /* \"#utility.yul\":3253:3284   */\n      mstore\n        /* \"#utility.yul\":3307:3311   */\n      0x11\n        /* \"#utility.yul\":3304:3305   */\n      0x04\n        /* \"#utility.yul\":3297:3312   */\n      mstore\n        /* \"#utility.yul\":3335:3339   */\n      0x24\n        /* \"#utility.yul\":3332:3333   */\n      0x00\n        /* \"#utility.yul\":3325:3340   */\n      revert\n\n    auxdata: 0xa2646970667358221220b2bdded898deff7ef1c376e1775447fee4470a03ac7721b81d02409b2ed8619a64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_139": {
									"entryPoint": null,
									"id": 139,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1923": {
									"entryPoint": null,
									"id": 1923,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_265": {
									"entryPoint": null,
									"id": 265,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_806": {
									"entryPoint": null,
									"id": 806,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1977": {
									"entryPoint": 460,
									"id": 1977,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_795": {
									"entryPoint": null,
									"id": 795,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_624": {
									"entryPoint": 250,
									"id": 624,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_966": {
									"entryPoint": null,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_requireNotPaused_176": {
									"entryPoint": 494,
									"id": 176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 161,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_295": {
									"entryPoint": null,
									"id": 295,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_164": {
									"entryPoint": null,
									"id": 164,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1221,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 588,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 927,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 568,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5437:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:9"
															},
															"nodeType": "YulIf",
															"src": "289:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:9"
															},
															"nodeType": "YulIf",
															"src": "359:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:9",
														"type": ""
													}
												],
												"src": "146:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:9",
														"type": ""
													}
												],
												"src": "531:121:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:9"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:9"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:9"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:9",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:9"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:9"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:9"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:9",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:9"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:9"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:9"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:9"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:9"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:9"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:9"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:9"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:9",
																			"statements": []
																		},
																		"src": "1104:82:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:9"
															},
															"nodeType": "YulIf",
															"src": "748:448:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:9",
														"type": ""
													}
												],
												"src": "657:545:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:9",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:9"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:9",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:9"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:9"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:9",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:9",
														"type": ""
													}
												],
												"src": "1207:166:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:9"
															},
															"nodeType": "YulIf",
															"src": "1517:56:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:9"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:9"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:9",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:9"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:9"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:9"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:9"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:9"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:9"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:9"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:9",
																					"statements": []
																				},
																				"src": "1964:236:9"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:9",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:9",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:9"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:9"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:9"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:9",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:9"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:9"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:9",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:9"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:9"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:9"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:9"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:9"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:9"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:9"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:9"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:9",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:9"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:9"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:9"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:9"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:9",
														"type": ""
													}
												],
												"src": "1378:1352:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2767:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2784:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2791:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2796:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2787:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2787:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2777:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2777:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2777:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2824:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2827:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2817:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2817:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2848:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2851:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2841:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2841:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2841:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2735:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2931:358:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2941:16:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2956:1:9",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "2945:7:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2966:16:9",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "2975:7:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "2966:5:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2991:13:9",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "2999:5:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "2991:4:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3055:228:9",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3100:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "3102:16:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3102:18:9"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3102:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3075:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3089:1:9",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3085:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3085:6:9"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "3093:4:9"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "3081:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3081:17:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "3072:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3072:27:9"
																		},
																		"nodeType": "YulIf",
																		"src": "3069:53:9"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3161:29:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3163:25:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "3176:5:9"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "3183:4:9"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "3172:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3172:16:9"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "3163:5:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3142:8:9"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3152:7:9"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3138:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3138:22:9"
																		},
																		"nodeType": "YulIf",
																		"src": "3135:55:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3203:23:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3215:4:9"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3221:4:9"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "3211:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3211:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "3203:4:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3239:34:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3255:7:9"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3264:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "3251:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3251:22:9"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "3239:8:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3024:8:9"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "3034:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3021:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3021:21:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3043:3:9",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3017:3:9",
																"statements": []
															},
															"src": "3013:270:9"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "2895:5:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "2902:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "2915:5:9",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "2922:4:9",
														"type": ""
													}
												],
												"src": "2867:422:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3353:747:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3391:52:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3405:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3414:1:9",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3405:5:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3428:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3373:8:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3366:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:16:9"
															},
															"nodeType": "YulIf",
															"src": "3363:80:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3476:52:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3490:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3499:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3490:5:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3513:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "3462:4:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3455:12:9"
															},
															"nodeType": "YulIf",
															"src": "3452:76:9"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3564:52:9",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "3578:10:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3587:1:9",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "3578:5:9"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "3601:5:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3557:59:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3562:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3632:123:9",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3667:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "3669:16:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3669:18:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3669:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "3652:8:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3662:3:9",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "3649:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3649:17:9"
																				},
																				"nodeType": "YulIf",
																				"src": "3646:43:9"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "3702:25:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "3715:8:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3725:1:9",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3711:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3711:16:9"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "3702:5:9"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "3740:5:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3625:130:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3630:1:9",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "3544:4:9"
															},
															"nodeType": "YulSwitch",
															"src": "3537:218:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3853:70:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3867:28:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3880:4:9"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3886:8:9"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "3876:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3876:19:9"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3867:5:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3908:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "3777:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3783:2:9",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3774:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3774:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "3791:8:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3801:2:9",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3788:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3788:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3770:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3770:35:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "3814:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3820:3:9",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3811:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3811:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "3829:8:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3839:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3826:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3826:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3807:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3807:36:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3767:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3767:77:9"
															},
															"nodeType": "YulIf",
															"src": "3764:159:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3932:57:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "3974:4:9"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3980:8:9"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "3955:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3955:34:9"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "3936:7:9",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "3945:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4034:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4036:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4036:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4036:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4004:7:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4021:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4017:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4017:6:9"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "4025:6:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4013:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4013:19:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4001:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4001:32:9"
															},
															"nodeType": "YulIf",
															"src": "3998:58:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4065:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4078:7:9"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "4087:6:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4074:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4074:20:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4065:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "3324:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "3330:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "3343:5:9",
														"type": ""
													}
												],
												"src": "3294:806:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4173:72:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4183:56:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "4213:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "4223:8:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4233:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4219:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:19:9"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "4192:20:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4192:47:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4183:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "4144:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "4150:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "4163:5:9",
														"type": ""
													}
												],
												"src": "4105:140:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4302:116:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4312:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4327:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4330:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4323:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4323:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4312:7:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4390:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4392:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4392:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4392:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4361:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4354:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4354:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "4368:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "4375:7:9"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "4384:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "4371:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4371:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "4365:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4365:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "4351:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4351:37:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4344:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4344:45:9"
															},
															"nodeType": "YulIf",
															"src": "4341:71:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4281:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4284:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4290:7:9",
														"type": ""
													}
												],
												"src": "4250:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4597:181:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4614:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4625:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4607:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4607:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4607:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4648:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4659:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4644:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4644:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4664:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4637:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4637:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4637:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4687:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4698:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4683:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4683:18:9"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4703:33:9",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4676:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4676:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4676:61:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4746:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4758:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4769:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4754:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4746:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4574:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4588:4:9",
														"type": ""
													}
												],
												"src": "4423:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4831:77:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4841:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4852:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4855:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4848:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4848:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4841:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4880:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4882:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4882:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4882:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4872:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4875:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:10:9"
															},
															"nodeType": "YulIf",
															"src": "4866:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4814:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4817:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4823:3:9",
														"type": ""
													}
												],
												"src": "4783:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5014:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5024:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5036:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5047:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5032:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5032:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5024:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5066:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5077:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5059:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5059:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5059:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4983:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4994:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5005:4:9",
														"type": ""
													}
												],
												"src": "4913:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5269:166:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5286:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5297:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5279:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5279:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5279:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5320:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5331:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5316:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5316:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5309:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5309:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5309:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5359:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5370:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5355:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5355:18:9"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5375:18:9",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5348:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5348:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5348:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5403:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5415:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5426:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5411:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5411:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5403:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5246:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5260:4:9",
														"type": ""
													}
												],
												"src": "5095:340:9"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040805180820182526004808252634d454d4560e01b60208084018290528451808601909552918452908301529060036200004d8382620002d7565b5060046200005c8282620002d7565b50506005805460ff19169055506200007433620000a1565b6200009b33620000876012600a620004ae565b620000959061c350620004c5565b620000fa565b620004f5565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b6001600160a01b038216620001565760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b620001635f8383620001cc565b8060025f828254620001769190620004df565b90915550506001600160a01b0382165f81815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b620001d6620001ee565b620001e98383836001600160e01b038416565b505050565b60055460ff1615620002365760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016200014d565b565b634e487b7160e01b5f52604160045260245ffd5b600181811c908216806200026157607f821691505b6020821081036200028057634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620001e9575f81815260208120601f850160051c81016020861015620002ae5750805b601f850160051c820191505b81811015620002cf57828155600101620002ba565b505050505050565b81516001600160401b03811115620002f357620002f362000238565b6200030b816200030484546200024c565b8462000286565b602080601f83116001811462000341575f8415620003295750858301515b5f19600386901b1c1916600185901b178555620002cf565b5f85815260208120601f198616915b82811015620003715788860151825594840194600190910190840162000350565b50858210156200038f57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b5f52601160045260245ffd5b600181815b80851115620003f357815f1904821115620003d757620003d76200039f565b80851615620003e557918102915b93841c9390800290620003b8565b509250929050565b5f826200040b57506001620004a8565b816200041957505f620004a8565b81600181146200043257600281146200043d576200045d565b6001915050620004a8565b60ff8411156200045157620004516200039f565b50506001821b620004a8565b5060208310610133831016604e8410600b841016171562000482575081810a620004a8565b6200048e8383620003b3565b805f1904821115620004a457620004a46200039f565b0290505b92915050565b5f620004be60ff841683620003fb565b9392505050565b8082028115828204841417620004a857620004a86200039f565b80820180821115620004a857620004a86200039f565b610e2d80620005035f395ff3fe608060405234801561000f575f80fd5b5060043610610127575f3560e01c806370a08231116100a957806395d89b411161006e57806395d89b4114610262578063a457c2d71461026a578063a9059cbb1461027d578063dd62ed3e14610290578063f2fde38b146102a3575f80fd5b806370a08231146101ee578063715018a61461021657806379cc67901461021e5780638456cb59146102315780638da5cb5b14610239575f80fd5b806339509351116100ef57806339509351146101a05780633f4ba83a146101b357806340c10f19146101bd57806342966c68146101d05780635c975abb146101e3575f80fd5b806306fdde031461012b578063095ea7b31461014957806318160ddd1461016c57806323b872dd1461017e578063313ce56714610191575b5f80fd5b6101336102b6565b6040516101409190610c71565b60405180910390f35b61015c610157366004610cd7565b610346565b6040519015158152602001610140565b6002545b604051908152602001610140565b61015c61018c366004610cff565b61035f565b60405160128152602001610140565b61015c6101ae366004610cd7565b610382565b6101bb6103a3565b005b6101bb6101cb366004610cd7565b6103b5565b6101bb6101de366004610d38565b6103cb565b60055460ff1661015c565b6101706101fc366004610d4f565b6001600160a01b03165f9081526020819052604090205490565b6101bb6103d8565b6101bb61022c366004610cd7565b6103e9565b6101bb6103fe565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610140565b61013361040e565b61015c610278366004610cd7565b61041d565b61015c61028b366004610cd7565b61049c565b61017061029e366004610d6f565b6104a9565b6101bb6102b1366004610d4f565b6104d3565b6060600380546102c590610da0565b80601f01602080910402602001604051908101604052809291908181526020018280546102f190610da0565b801561033c5780601f106103135761010080835404028352916020019161033c565b820191905f5260205f20905b81548152906001019060200180831161031f57829003601f168201915b5050505050905090565b5f33610353818585610549565b60019150505b92915050565b5f3361036c85828561066d565b6103778585856106e5565b506001949350505050565b5f3361035381858561039483836104a9565b61039e9190610dd8565b610549565b6103ab610892565b6103b36108f2565b565b6103bd610892565b6103c78282610944565b5050565b6103d53382610a0c565b50565b6103e0610892565b6103b35f610b3f565b6103f482338361066d565b6103c78282610a0c565b610406610892565b6103b3610b98565b6060600480546102c590610da0565b5f338161042a82866104a9565b90508381101561048f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103778286868403610549565b5f336103538185856106e5565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6104db610892565b6001600160a01b0381166105405760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610486565b6103d581610b3f565b6001600160a01b0383166105ab5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610486565b6001600160a01b03821661060c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610486565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b5f61067884846104a9565b90505f1981146106df57818110156106d25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610486565b6106df8484848403610549565b50505050565b6001600160a01b0383166107495760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610486565b6001600160a01b0382166107ab5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610486565b6107b6838383610bd5565b6001600160a01b0383165f908152602081905260409020548181101561082d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610486565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36106df565b6005546001600160a01b036101009091041633146103b35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610486565b6108fa610be2565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03821661099a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610486565b6109a55f8383610bd5565b8060025f8282546109b69190610dd8565b90915550506001600160a01b0382165f81815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610a6c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610486565b610a77825f83610bd5565b6001600160a01b0382165f9081526020819052604090205481811015610aea5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610486565b6001600160a01b0383165f818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610660565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b610ba0610c2b565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586109273390565b610bdd610c2b565b505050565b60055460ff166103b35760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610486565b60055460ff16156103b35760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610486565b5f6020808352835180828501525f5b81811015610c9c57858101830151858201604001528201610c80565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610cd2575f80fd5b919050565b5f8060408385031215610ce8575f80fd5b610cf183610cbc565b946020939093013593505050565b5f805f60608486031215610d11575f80fd5b610d1a84610cbc565b9250610d2860208501610cbc565b9150604084013590509250925092565b5f60208284031215610d48575f80fd5b5035919050565b5f60208284031215610d5f575f80fd5b610d6882610cbc565b9392505050565b5f8060408385031215610d80575f80fd5b610d8983610cbc565b9150610d9760208401610cbc565b90509250929050565b600181811c90821680610db457607f821691505b602082108103610dd257634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561035957634e487b7160e01b5f52601160045260245ffdfea2646970667358221220b2bdded898deff7ef1c376e1775447fee4470a03ac7721b81d02409b2ed8619a64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x4 DUP1 DUP3 MSTORE PUSH4 0x4D454D45 PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE SWAP2 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE SWAP1 PUSH1 0x3 PUSH3 0x4D DUP4 DUP3 PUSH3 0x2D7 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x5C DUP3 DUP3 PUSH3 0x2D7 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH3 0x74 CALLER PUSH3 0xA1 JUMP JUMPDEST PUSH3 0x9B CALLER PUSH3 0x87 PUSH1 0x12 PUSH1 0xA PUSH3 0x4AE JUMP JUMPDEST PUSH3 0x95 SWAP1 PUSH2 0xC350 PUSH3 0x4C5 JUMP JUMPDEST PUSH3 0xFA JUMP JUMPDEST PUSH3 0x4F5 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x156 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x163 PUSH0 DUP4 DUP4 PUSH3 0x1CC JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x176 SWAP2 SWAP1 PUSH3 0x4DF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x1D6 PUSH3 0x1EE JUMP JUMPDEST PUSH3 0x1E9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP5 AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x236 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x14D JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x261 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x280 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1E9 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x2AE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2CF JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2BA JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2F3 JUMPI PUSH3 0x2F3 PUSH3 0x238 JUMP JUMPDEST PUSH3 0x30B DUP2 PUSH3 0x304 DUP5 SLOAD PUSH3 0x24C JUMP JUMPDEST DUP5 PUSH3 0x286 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x341 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x329 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2CF JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x371 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x350 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x38F JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x3F3 JUMPI DUP2 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x3D7 JUMPI PUSH3 0x3D7 PUSH3 0x39F JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x3E5 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x3B8 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0x40B JUMPI POP PUSH1 0x1 PUSH3 0x4A8 JUMP JUMPDEST DUP2 PUSH3 0x419 JUMPI POP PUSH0 PUSH3 0x4A8 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x432 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x43D JUMPI PUSH3 0x45D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x4A8 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x451 JUMPI PUSH3 0x451 PUSH3 0x39F JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x4A8 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x482 JUMPI POP DUP2 DUP2 EXP PUSH3 0x4A8 JUMP JUMPDEST PUSH3 0x48E DUP4 DUP4 PUSH3 0x3B3 JUMP JUMPDEST DUP1 PUSH0 NOT DIV DUP3 GT ISZERO PUSH3 0x4A4 JUMPI PUSH3 0x4A4 PUSH3 0x39F JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x4BE PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x3FB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x4A8 JUMPI PUSH3 0x4A8 PUSH3 0x39F JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x4A8 JUMPI PUSH3 0x4A8 PUSH3 0x39F JUMP JUMPDEST PUSH2 0xE2D DUP1 PUSH3 0x503 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x127 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x239 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x191 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x133 PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0x346 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x3A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BB PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x15C JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x3D8 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x133 PUSH2 0x40E JUMP JUMPDEST PUSH2 0x15C PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST PUSH2 0x15C PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0x49C JUMP JUMPDEST PUSH2 0x170 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0xD6F JUMP JUMPDEST PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0xD4F JUMP JUMPDEST PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2C5 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F1 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x33C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x313 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x33C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x31F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x353 DUP2 DUP6 DUP6 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x36C DUP6 DUP3 DUP6 PUSH2 0x66D JUMP JUMPDEST PUSH2 0x377 DUP6 DUP6 DUP6 PUSH2 0x6E5 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x353 DUP2 DUP6 DUP6 PUSH2 0x394 DUP4 DUP4 PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x39E SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x549 JUMP JUMPDEST PUSH2 0x3AB PUSH2 0x892 JUMP JUMPDEST PUSH2 0x3B3 PUSH2 0x8F2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3BD PUSH2 0x892 JUMP JUMPDEST PUSH2 0x3C7 DUP3 DUP3 PUSH2 0x944 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3D5 CALLER DUP3 PUSH2 0xA0C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3E0 PUSH2 0x892 JUMP JUMPDEST PUSH2 0x3B3 PUSH0 PUSH2 0xB3F JUMP JUMPDEST PUSH2 0x3F4 DUP3 CALLER DUP4 PUSH2 0x66D JUMP JUMPDEST PUSH2 0x3C7 DUP3 DUP3 PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x406 PUSH2 0x892 JUMP JUMPDEST PUSH2 0x3B3 PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2C5 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x42A DUP3 DUP7 PUSH2 0x4A9 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x48F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x377 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x549 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x353 DUP2 DUP6 DUP6 PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4DB PUSH2 0x892 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x540 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x486 JUMP JUMPDEST PUSH2 0x3D5 DUP2 PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x486 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x486 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x678 DUP5 DUP5 PUSH2 0x4A9 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x6DF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x486 JUMP JUMPDEST PUSH2 0x6DF DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x549 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x749 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x486 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x486 JUMP JUMPDEST PUSH2 0x7B6 DUP4 DUP4 DUP4 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x82D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x486 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x3B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x486 JUMP JUMPDEST PUSH2 0x8FA PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x99A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x486 JUMP JUMPDEST PUSH2 0x9A5 PUSH0 DUP4 DUP4 PUSH2 0xBD5 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9B6 SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x486 JUMP JUMPDEST PUSH2 0xA77 DUP3 PUSH0 DUP4 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xAEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x486 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x660 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBA0 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x927 CALLER SWAP1 JUMP JUMPDEST PUSH2 0xBDD PUSH2 0xC2B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x3B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x486 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x486 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC9C JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC80 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCD2 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCF1 DUP4 PUSH2 0xCBC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD1A DUP5 PUSH2 0xCBC JUMP JUMPDEST SWAP3 POP PUSH2 0xD28 PUSH1 0x20 DUP6 ADD PUSH2 0xCBC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD48 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD5F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD68 DUP3 PUSH2 0xCBC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD80 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD89 DUP4 PUSH2 0xCBC JUMP JUMPDEST SWAP2 POP PUSH2 0xD97 PUSH1 0x20 DUP5 ADD PUSH2 0xCBC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xDB4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDD2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x359 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xBD 0xDE 0xD8 SWAP9 0xDE SELFDESTRUCT PUSH31 0xF1C376E1775447FEE4470A03AC7721B81D02409B2ED8619A64736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "306:617:8:-:0;;;370:98;;;;;;;;;-1:-1:-1;1980:113:2;;;;;;;;;;;;-1:-1:-1;;;1980:113:2;;;;;;;;;;;;;;;;;;;;;;;2046:5;:13;1980:113;2046:5;:13;:::i;:::-;-1:-1:-1;2069:7:2;:17;2079:7;2069;:17;:::i;:::-;-1:-1:-1;;996:7:1;:15;;-1:-1:-1;;996:15:1;;;-1:-1:-1;936:32:0;719:10:6;936:18:0;:32::i;:::-;417:43:8::1;423:10;443:16;3186:2:2::0;443::8::1;:16;:::i;:::-;435:24;::::0;:5:::1;:24;:::i;:::-;417:5;:43::i;:::-;306:617:::0;;2426:187:0;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;2518:6;2534:17;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;8520:535:2:-;-1:-1:-1;;;;;8603:21:2;;8595:65;;;;-1:-1:-1;;;8595:65:2;;4625:2:9;8595:65:2;;;4607:21:9;4664:2;4644:18;;;4637:30;4703:33;4683:18;;;4676:61;4754:18;;8595:65:2;;;;;;;;;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:2;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;5059:25:9;;;8952:37:2;;5032:18:9;8952:37:2;;;;;;;8520:535;;:::o;721:199:8:-;1239:19:1;:17;:19::i;:::-;868:44:8::1;895:4:::0;901:2;905:6;-1:-1:-1;;;;;868:44:8;;:::i:1;:::-;721:199:::0;;;:::o;1767:106:1:-;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:1;;5297:2:9;1828:38:1;;;5279:21:9;5336:2;5316:18;;;5309:30;-1:-1:-1;;;5355:18:9;;;5348:46;5411:18;;1828:38:1;5095:340:9;1828:38:1;1767:106::o;14:127:9:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:9;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:9;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:9;;;2580:26;2531:89;-1:-1:-1;;1335:1:9;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:9;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:9;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:9;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:9:o;2735:127::-;2796:10;2791:3;2787:20;2784:1;2777:31;2827:4;2824:1;2817:15;2851:4;2848:1;2841:15;2867:422;2956:1;2999:5;2956:1;3013:270;3034:7;3024:8;3021:21;3013:270;;;3093:4;3089:1;3085:6;3081:17;3075:4;3072:27;3069:53;;;3102:18;;:::i;:::-;3152:7;3142:8;3138:22;3135:55;;;3172:16;;;;3135:55;3251:22;;;;3211:15;;;;3013:270;;;3017:3;2867:422;;;;;:::o;3294:806::-;3343:5;3373:8;3363:80;;-1:-1:-1;3414:1:9;3428:5;;3363:80;3462:4;3452:76;;-1:-1:-1;3499:1:9;3513:5;;3452:76;3544:4;3562:1;3557:59;;;;3630:1;3625:130;;;;3537:218;;3557:59;3587:1;3578:10;;3601:5;;;3625:130;3662:3;3652:8;3649:17;3646:43;;;3669:18;;:::i;:::-;-1:-1:-1;;3725:1:9;3711:16;;3740:5;;3537:218;;3839:2;3829:8;3826:16;3820:3;3814:4;3811:13;3807:36;3801:2;3791:8;3788:16;3783:2;3777:4;3774:12;3770:35;3767:77;3764:159;;;-1:-1:-1;3876:19:9;;;3908:5;;3764:159;3955:34;3980:8;3974:4;3955:34;:::i;:::-;4025:6;4021:1;4017:6;4013:19;4004:7;4001:32;3998:58;;;4036:18;;:::i;:::-;4074:20;;-1:-1:-1;3294:806:9;;;;;:::o;4105:140::-;4163:5;4192:47;4233:4;4223:8;4219:19;4213:4;4192:47;:::i;:::-;4183:56;4105:140;-1:-1:-1;;;4105:140:9:o;4250:168::-;4323:9;;;4354;;4371:15;;;4365:22;;4351:37;4341:71;;4392:18;;:::i;4783:125::-;4848:9;;;4869:10;;;4866:36;;;4882:18;;:::i;5095:340::-;306:617:8;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_806": {
									"entryPoint": null,
									"id": 806,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_741": {
									"entryPoint": 1353,
									"id": 741,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1977": {
									"entryPoint": 3029,
									"id": 1977,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_795": {
									"entryPoint": null,
									"id": 795,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_696": {
									"entryPoint": 2572,
									"id": 696,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 2194,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_624": {
									"entryPoint": 2372,
									"id": 624,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_966": {
									"entryPoint": null,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_203": {
									"entryPoint": 2968,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_176": {
									"entryPoint": 3115,
									"id": 176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_187": {
									"entryPoint": 3042,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_784": {
									"entryPoint": 1645,
									"id": 784,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 2879,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_567": {
									"entryPoint": 1765,
									"id": 567,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_219": {
									"entryPoint": 2290,
									"id": 219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_362": {
									"entryPoint": 1193,
									"id": 362,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_387": {
									"entryPoint": 838,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_319": {
									"entryPoint": null,
									"id": 319,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_928": {
									"entryPoint": 1001,
									"id": 928,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_907": {
									"entryPoint": 971,
									"id": 907,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_295": {
									"entryPoint": null,
									"id": 295,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_490": {
									"entryPoint": 1053,
									"id": 490,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_449": {
									"entryPoint": 898,
									"id": 449,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_1956": {
									"entryPoint": 949,
									"id": 1956,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_275": {
									"entryPoint": 694,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1932": {
									"entryPoint": 1022,
									"id": 1932,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_164": {
									"entryPoint": null,
									"id": 164,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 984,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_285": {
									"entryPoint": 1038,
									"id": 285,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_305": {
									"entryPoint": null,
									"id": 305,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_420": {
									"entryPoint": 863,
									"id": 420,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 1235,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_344": {
									"entryPoint": 1180,
									"id": 344,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1941": {
									"entryPoint": 931,
									"id": 1941,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3327,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3544,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8774:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:9",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:9"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:9",
																"statements": []
															},
															"src": "294:140:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:9"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:9",
														"type": ""
													}
												],
												"src": "14:548:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:9"
															},
															"nodeType": "YulIf",
															"src": "664:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:9",
														"type": ""
													}
												],
												"src": "567:173:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:9"
															},
															"nodeType": "YulIf",
															"src": "842:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:9",
														"type": ""
													}
												],
												"src": "745:254:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:9",
														"type": ""
													}
												],
												"src": "1004:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:9",
														"type": ""
													}
												],
												"src": "1196:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:9"
															},
															"nodeType": "YulIf",
															"src": "1492:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:9",
														"type": ""
													}
												],
												"src": "1378:328:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:9",
														"type": ""
													}
												],
												"src": "1711:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:110:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:9"
															},
															"nodeType": "YulIf",
															"src": "1980:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2064:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2051:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:9",
														"type": ""
													}
												],
												"src": "1900:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2155:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2201:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2210:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2213:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2203:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2203:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2176:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2185:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2172:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2197:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2168:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2168:32:9"
															},
															"nodeType": "YulIf",
															"src": "2165:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2226:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2255:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2236:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2121:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2132:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2144:6:9",
														"type": ""
													}
												],
												"src": "2085:186:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2377:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2387:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2399:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2410:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2395:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2395:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2387:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2429:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2444:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2460:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2465:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2456:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2456:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2469:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2452:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2452:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2440:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2440:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2422:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2422:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2422:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2346:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2357:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2368:4:9",
														"type": ""
													}
												],
												"src": "2276:203:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2571:173:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2617:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2626:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2629:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2619:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2619:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2619:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2592:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2601:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2588:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2588:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2613:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2584:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2584:32:9"
															},
															"nodeType": "YulIf",
															"src": "2581:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2642:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2671:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2652:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2642:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2690:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2723:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2734:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2719:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2719:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2700:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2690:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2529:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2540:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2552:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2560:6:9",
														"type": ""
													}
												],
												"src": "2484:260:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2804:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2814:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2828:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2831:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2824:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2824:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2814:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2845:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2875:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2881:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2871:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2849:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2922:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2924:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2938:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2946:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2934:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2934:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2924:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2902:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2895:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2895:26:9"
															},
															"nodeType": "YulIf",
															"src": "2892:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3012:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3033:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3040:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3045:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3036:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3036:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3026:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3026:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3026:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3077:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3080:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3070:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3070:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3070:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3105:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3108:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3098:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3098:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3098:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2968:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2991:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2999:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2988:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2988:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2965:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2965:38:9"
															},
															"nodeType": "YulIf",
															"src": "2962:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2784:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2793:6:9",
														"type": ""
													}
												],
												"src": "2749:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3182:174:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3192:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3203:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3206:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3199:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3192:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3239:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3260:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3267:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3272:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3263:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3263:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3253:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3253:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3253:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3304:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3307:4:9",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3297:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3297:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3297:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3332:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3335:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3325:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3325:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3325:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3223:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3226:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3220:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3220:10:9"
															},
															"nodeType": "YulIf",
															"src": "3217:133:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3165:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3168:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3174:3:9",
														"type": ""
													}
												],
												"src": "3134:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3535:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3552:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3563:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3545:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3545:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3545:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3586:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3597:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3582:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3582:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3602:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3575:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3575:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3575:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3625:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3636:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3621:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3621:18:9"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3641:34:9",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3614:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3614:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3614:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3696:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3707:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3692:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3692:18:9"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3712:7:9",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3685:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3685:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3729:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3741:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3752:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3737:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3737:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3729:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3512:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3526:4:9",
														"type": ""
													}
												],
												"src": "3361:401:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3941:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3958:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3969:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3951:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3951:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3951:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3992:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4003:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3988:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3988:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4008:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3981:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3981:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4031:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4042:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4027:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4027:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4047:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4020:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4020:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4020:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4102:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4113:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4098:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4098:18:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4118:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4091:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4091:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4091:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4136:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4148:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4159:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4144:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4144:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4136:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3918:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3932:4:9",
														"type": ""
													}
												],
												"src": "3767:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4348:226:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4365:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4376:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4358:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4358:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4358:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4399:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4410:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4395:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4395:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4415:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4388:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4388:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4388:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4438:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4449:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4434:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4434:18:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4454:34:9",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4427:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4427:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4427:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4509:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4520:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4505:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4505:18:9"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4525:6:9",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4498:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4498:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4498:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4541:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4553:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4564:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4549:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4549:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4541:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4325:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4339:4:9",
														"type": ""
													}
												],
												"src": "4174:400:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4753:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4770:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4763:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4763:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4763:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4815:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4800:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4820:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4793:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4793:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4843:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4854:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4839:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4839:18:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4859:34:9",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4832:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4832:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4832:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4914:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4925:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4910:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4910:18:9"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4930:4:9",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4903:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4903:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4903:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4944:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4956:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4967:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4952:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4952:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4944:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4730:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4744:4:9",
														"type": ""
													}
												],
												"src": "4579:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5156:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5173:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5184:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5166:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5166:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5166:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5207:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5218:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5203:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5203:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5223:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5196:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5196:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5196:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5246:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5257:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5242:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5242:18:9"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5262:31:9",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5235:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5235:59:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5235:59:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5303:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5315:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5326:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5311:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5311:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5303:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5133:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5147:4:9",
														"type": ""
													}
												],
												"src": "4982:353:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5514:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5531:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5542:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5524:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5524:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5524:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5565:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5576:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5561:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5561:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5581:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5554:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5554:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5554:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5604:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5615:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5600:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5600:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5620:34:9",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5593:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5593:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5593:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5675:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5686:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5671:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5671:18:9"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5691:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5664:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5664:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5664:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5708:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5720:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5731:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5716:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5716:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5708:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5491:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5505:4:9",
														"type": ""
													}
												],
												"src": "5340:401:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5920:225:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5937:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5948:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5930:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5930:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5930:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5971:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5982:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5967:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5967:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5987:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5960:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5960:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5960:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6010:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6021:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6006:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6006:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6026:34:9",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5999:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5999:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5999:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6081:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6092:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6077:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6077:18:9"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6097:5:9",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6070:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6070:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6070:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6112:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6124:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6135:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6120:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6120:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6112:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5897:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5911:4:9",
														"type": ""
													}
												],
												"src": "5746:399:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6324:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6341:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6352:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6334:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6334:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6334:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6375:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6386:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6371:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6371:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6391:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6364:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6364:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6364:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6414:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6425:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6410:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6410:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6430:34:9",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6403:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6403:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6403:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6485:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6496:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6481:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6481:18:9"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6501:8:9",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6474:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6474:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6474:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6519:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6531:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6542:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6527:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6527:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6519:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6301:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6315:4:9",
														"type": ""
													}
												],
												"src": "6150:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6731:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6748:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6759:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6741:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6741:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6741:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6782:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6793:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6778:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6778:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6798:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6771:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6771:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6771:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6821:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6832:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6817:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6817:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6837:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6810:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6810:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6810:62:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6881:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6893:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6904:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6889:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6889:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6881:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6708:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6722:4:9",
														"type": ""
													}
												],
												"src": "6557:356:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7092:181:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7109:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7120:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7102:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7102:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7102:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7143:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7154:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7139:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7139:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7159:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7132:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7132:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7132:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7182:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7193:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7178:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7178:18:9"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7198:33:9",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7171:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7171:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7171:61:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7241:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7253:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7264:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7249:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7249:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7241:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7069:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7083:4:9",
														"type": ""
													}
												],
												"src": "6918:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7452:223:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7469:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7480:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7462:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7462:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7462:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7503:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7514:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7499:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7499:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7519:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7492:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7492:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7492:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7542:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7553:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7538:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7538:18:9"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7558:34:9",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7531:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7531:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7531:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7613:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7624:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7609:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7609:18:9"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7629:3:9",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7602:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7602:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7602:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7642:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7654:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7665:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7650:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7650:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7642:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7429:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7443:4:9",
														"type": ""
													}
												],
												"src": "7278:397:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7854:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7871:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7882:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7864:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7864:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7864:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7905:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7916:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7901:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7901:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7921:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7894:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7894:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7894:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7944:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7955:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7940:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7940:18:9"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7960:34:9",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7933:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7933:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7933:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8015:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8026:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8011:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8011:18:9"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8031:4:9",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8004:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8004:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8004:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8045:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8057:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8068:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8053:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8053:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8045:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7831:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7845:4:9",
														"type": ""
													}
												],
												"src": "7680:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8257:170:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8274:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8285:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8267:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8267:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8267:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8308:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8319:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8304:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8304:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8324:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8297:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8297:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8297:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8347:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8358:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8343:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8343:18:9"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8363:22:9",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8336:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8336:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8336:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8395:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8407:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8418:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8403:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8403:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8395:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8234:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8248:4:9",
														"type": ""
													}
												],
												"src": "8083:344:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8606:166:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8623:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8634:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8616:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8616:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8616:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8657:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8668:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8653:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8653:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8673:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8646:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8646:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8646:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8696:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8707:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8692:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8692:18:9"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8712:18:9",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8685:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8685:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8685:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8740:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8752:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8763:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8748:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8748:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8740:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8583:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8597:4:9",
														"type": ""
													}
												],
												"src": "8432:340:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610127575f3560e01c806370a08231116100a957806395d89b411161006e57806395d89b4114610262578063a457c2d71461026a578063a9059cbb1461027d578063dd62ed3e14610290578063f2fde38b146102a3575f80fd5b806370a08231146101ee578063715018a61461021657806379cc67901461021e5780638456cb59146102315780638da5cb5b14610239575f80fd5b806339509351116100ef57806339509351146101a05780633f4ba83a146101b357806340c10f19146101bd57806342966c68146101d05780635c975abb146101e3575f80fd5b806306fdde031461012b578063095ea7b31461014957806318160ddd1461016c57806323b872dd1461017e578063313ce56714610191575b5f80fd5b6101336102b6565b6040516101409190610c71565b60405180910390f35b61015c610157366004610cd7565b610346565b6040519015158152602001610140565b6002545b604051908152602001610140565b61015c61018c366004610cff565b61035f565b60405160128152602001610140565b61015c6101ae366004610cd7565b610382565b6101bb6103a3565b005b6101bb6101cb366004610cd7565b6103b5565b6101bb6101de366004610d38565b6103cb565b60055460ff1661015c565b6101706101fc366004610d4f565b6001600160a01b03165f9081526020819052604090205490565b6101bb6103d8565b6101bb61022c366004610cd7565b6103e9565b6101bb6103fe565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610140565b61013361040e565b61015c610278366004610cd7565b61041d565b61015c61028b366004610cd7565b61049c565b61017061029e366004610d6f565b6104a9565b6101bb6102b1366004610d4f565b6104d3565b6060600380546102c590610da0565b80601f01602080910402602001604051908101604052809291908181526020018280546102f190610da0565b801561033c5780601f106103135761010080835404028352916020019161033c565b820191905f5260205f20905b81548152906001019060200180831161031f57829003601f168201915b5050505050905090565b5f33610353818585610549565b60019150505b92915050565b5f3361036c85828561066d565b6103778585856106e5565b506001949350505050565b5f3361035381858561039483836104a9565b61039e9190610dd8565b610549565b6103ab610892565b6103b36108f2565b565b6103bd610892565b6103c78282610944565b5050565b6103d53382610a0c565b50565b6103e0610892565b6103b35f610b3f565b6103f482338361066d565b6103c78282610a0c565b610406610892565b6103b3610b98565b6060600480546102c590610da0565b5f338161042a82866104a9565b90508381101561048f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103778286868403610549565b5f336103538185856106e5565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6104db610892565b6001600160a01b0381166105405760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610486565b6103d581610b3f565b6001600160a01b0383166105ab5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610486565b6001600160a01b03821661060c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610486565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b5f61067884846104a9565b90505f1981146106df57818110156106d25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610486565b6106df8484848403610549565b50505050565b6001600160a01b0383166107495760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610486565b6001600160a01b0382166107ab5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610486565b6107b6838383610bd5565b6001600160a01b0383165f908152602081905260409020548181101561082d5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610486565b6001600160a01b038481165f81815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36106df565b6005546001600160a01b036101009091041633146103b35760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610486565b6108fa610be2565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b03821661099a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610486565b6109a55f8383610bd5565b8060025f8282546109b69190610dd8565b90915550506001600160a01b0382165f81815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610a6c5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610486565b610a77825f83610bd5565b6001600160a01b0382165f9081526020819052604090205481811015610aea5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610486565b6001600160a01b0383165f818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610660565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a35050565b610ba0610c2b565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586109273390565b610bdd610c2b565b505050565b60055460ff166103b35760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610486565b60055460ff16156103b35760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610486565b5f6020808352835180828501525f5b81811015610c9c57858101830151858201604001528201610c80565b505f604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610cd2575f80fd5b919050565b5f8060408385031215610ce8575f80fd5b610cf183610cbc565b946020939093013593505050565b5f805f60608486031215610d11575f80fd5b610d1a84610cbc565b9250610d2860208501610cbc565b9150604084013590509250925092565b5f60208284031215610d48575f80fd5b5035919050565b5f60208284031215610d5f575f80fd5b610d6882610cbc565b9392505050565b5f8060408385031215610d80575f80fd5b610d8983610cbc565b9150610d9760208401610cbc565b90509250929050565b600181811c90821680610db457607f821691505b602082108103610dd257634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561035957634e487b7160e01b5f52601160045260245ffdfea2646970667358221220b2bdded898deff7ef1c376e1775447fee4470a03ac7721b81d02409b2ed8619a64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x127 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA9 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x239 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0xEF JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x149 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x191 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x133 PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x140 SWAP2 SWAP1 PUSH2 0xC71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15C PUSH2 0x157 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0x346 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0xCFF JUMP JUMPDEST PUSH2 0x35F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x15C PUSH2 0x1AE CALLDATASIZE PUSH1 0x4 PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x3A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BB PUSH2 0x1CB CALLDATASIZE PUSH1 0x4 PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0x3B5 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x15C JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1FC CALLDATASIZE PUSH1 0x4 PUSH2 0xD4F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x3D8 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0x3E9 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x3FE JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x140 JUMP JUMPDEST PUSH2 0x133 PUSH2 0x40E JUMP JUMPDEST PUSH2 0x15C PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0x41D JUMP JUMPDEST PUSH2 0x15C PUSH2 0x28B CALLDATASIZE PUSH1 0x4 PUSH2 0xCD7 JUMP JUMPDEST PUSH2 0x49C JUMP JUMPDEST PUSH2 0x170 PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0xD6F JUMP JUMPDEST PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x1BB PUSH2 0x2B1 CALLDATASIZE PUSH1 0x4 PUSH2 0xD4F JUMP JUMPDEST PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2C5 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F1 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x33C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x313 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x33C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x31F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x353 DUP2 DUP6 DUP6 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x36C DUP6 DUP3 DUP6 PUSH2 0x66D JUMP JUMPDEST PUSH2 0x377 DUP6 DUP6 DUP6 PUSH2 0x6E5 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x353 DUP2 DUP6 DUP6 PUSH2 0x394 DUP4 DUP4 PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x39E SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST PUSH2 0x549 JUMP JUMPDEST PUSH2 0x3AB PUSH2 0x892 JUMP JUMPDEST PUSH2 0x3B3 PUSH2 0x8F2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3BD PUSH2 0x892 JUMP JUMPDEST PUSH2 0x3C7 DUP3 DUP3 PUSH2 0x944 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3D5 CALLER DUP3 PUSH2 0xA0C JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3E0 PUSH2 0x892 JUMP JUMPDEST PUSH2 0x3B3 PUSH0 PUSH2 0xB3F JUMP JUMPDEST PUSH2 0x3F4 DUP3 CALLER DUP4 PUSH2 0x66D JUMP JUMPDEST PUSH2 0x3C7 DUP3 DUP3 PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x406 PUSH2 0x892 JUMP JUMPDEST PUSH2 0x3B3 PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2C5 SWAP1 PUSH2 0xDA0 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x42A DUP3 DUP7 PUSH2 0x4A9 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x48F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x377 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x549 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x353 DUP2 DUP6 DUP6 PUSH2 0x6E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4DB PUSH2 0x892 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x540 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x486 JUMP JUMPDEST PUSH2 0x3D5 DUP2 PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x486 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x60C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x486 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x678 DUP5 DUP5 PUSH2 0x4A9 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x6DF JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x486 JUMP JUMPDEST PUSH2 0x6DF DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x549 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x749 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x486 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x486 JUMP JUMPDEST PUSH2 0x7B6 DUP4 DUP4 DUP4 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x82D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x486 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x6DF JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x3B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x486 JUMP JUMPDEST PUSH2 0x8FA PUSH2 0xBE2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x99A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x486 JUMP JUMPDEST PUSH2 0x9A5 PUSH0 DUP4 DUP4 PUSH2 0xBD5 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9B6 SWAP2 SWAP1 PUSH2 0xDD8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA6C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x486 JUMP JUMPDEST PUSH2 0xA77 DUP3 PUSH0 DUP4 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xAEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x486 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x660 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBA0 PUSH2 0xC2B JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x927 CALLER SWAP1 JUMP JUMPDEST PUSH2 0xBDD PUSH2 0xC2B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x3B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x486 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x486 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC9C JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC80 JUMP JUMPDEST POP PUSH0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCD2 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCE8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xCF1 DUP4 PUSH2 0xCBC JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD11 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD1A DUP5 PUSH2 0xCBC JUMP JUMPDEST SWAP3 POP PUSH2 0xD28 PUSH1 0x20 DUP6 ADD PUSH2 0xCBC JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD48 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD5F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD68 DUP3 PUSH2 0xCBC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD80 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xD89 DUP4 PUSH2 0xCBC JUMP JUMPDEST SWAP2 POP PUSH2 0xD97 PUSH1 0x20 DUP5 ADD PUSH2 0xCBC JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xDB4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDD2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x359 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 0xBD 0xDE 0xD8 SWAP9 0xDE SELFDESTRUCT PUSH31 0xF1C376E1775447FEE4470A03AC7721B81D02409B2ED8619A64736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "306:617:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:9;;1162:22;1144:41;;1132:2;1117:18;4444:197:2;1004:187:9;3255:106:2;3342:12;;3255:106;;;1342:25:9;;;1330:2;1315:18;3255:106:2;1196:177:9;5203:256:2;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1853:36:9;;1841:2;1826:18;3104:91:2;1711:184:9;5854:234:2;;;;;;:::i;:::-;;:::i;545:65:8:-;;;:::i;:::-;;618:95;;;;;;:::i;:::-;;:::i;578:89:4:-;;;;;;:::i;:::-;;:::i;1615:84:1:-;1685:7;;;;1615:84;;3419:125:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:2;3493:7;3519:18;;;;;;;;;;;;3419:125;1824:101:0;;;:::i;973:161:4:-;;;;;;:::i;:::-;;:::i;476:61:8:-;;;:::i;1201:85:0:-;1273:6;;;;;-1:-1:-1;;;;;1273:6:0;1201:85;;-1:-1:-1;;;;;2440:32:9;;;2422:51;;2410:2;2395:18;1201:85:0;2276:203:9;2369:102:2;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2074:198:0:-;;;;;;:::i;:::-;;:::i;2158:98:2:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:6;4581:32:2;719:10:6;4597:7:2;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:6;5356:38:2;5372:4;719:10:6;5387:6:2;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:2;;5203:256;-1:-1:-1;;;;5203:256:2:o;5854:234::-;5942:4;719:10:6;5996:64:2;719:10:6;6012:7:2;6049:10;6021:25;719:10:6;6012:7:2;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;545:65:8:-;1094:13:0;:11;:13::i;:::-;592:10:8::1;:8;:10::i;:::-;545:65::o:0;618:95::-;1094:13:0;:11;:13::i;:::-;688:17:8::1;694:2;698:6;688:5;:17::i;:::-;618:95:::0;;:::o;578:89:4:-;633:27;719:10:6;653:6:4;633:5;:27::i;:::-;578:89;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;973:161:4:-:0;1049:46;1065:7;719:10:6;1088:6:4;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;476:61:8:-;1094:13:0;:11;:13::i;:::-;521:8:8::1;:6;:8::i;2369:102:2:-:0;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:6;6668:4:2;6749:25;719:10:6;6766:7:2;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:2;;3563:2:9;6784:85:2;;;3545:21:9;3602:2;3582:18;;;3575:30;3641:34;3621:18;;;3614:62;-1:-1:-1;;;3692:18:9;;;3685:35;3737:19;;6784:85:2;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:6;3873:28:2;719:10:6;3890:2:2;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:2;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;3969:2:9;2154:73:0::1;::::0;::::1;3951:21:9::0;4008:2;3988:18;;;3981:30;4047:34;4027:18;;;4020:62;-1:-1:-1;;;4098:18:9;;;4091:36;4144:19;;2154:73:0::1;3767:402:9::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;10457:340:2:-:0;-1:-1:-1;;;;;10558:19:2;;10550:68;;;;-1:-1:-1;;;10550:68:2;;4376:2:9;10550:68:2;;;4358:21:9;4415:2;4395:18;;;4388:30;4454:34;4434:18;;;4427:62;-1:-1:-1;;;4505:18:9;;;4498:34;4549:19;;10550:68:2;4174:400:9;10550:68:2;-1:-1:-1;;;;;10636:21:2;;10628:68;;;;-1:-1:-1;;;10628:68:2;;4781:2:9;10628:68:2;;;4763:21:9;4820:2;4800:18;;;4793:30;4859:34;4839:18;;;4832:62;-1:-1:-1;;;4910:18:9;;;4903:32;4952:19;;10628:68:2;4579:398:9;10628:68:2;-1:-1:-1;;;;;10707:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:9;;;10758:32:2;;1315:18:9;10758:32:2;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:2;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:2;;5184:2:9;11297:68:2;;;5166:21:9;5223:2;5203:18;;;5196:30;5262:31;5242:18;;;5235:59;5311:18;;11297:68:2;4982:353:9;11297:68:2;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:2;;7544:68;;;;-1:-1:-1;;;7544:68:2;;5542:2:9;7544:68:2;;;5524:21:9;5581:2;5561:18;;;5554:30;5620:34;5600:18;;;5593:62;-1:-1:-1;;;5671:18:9;;;5664:35;5716:19;;7544:68:2;5340:401:9;7544:68:2;-1:-1:-1;;;;;7630:16:2;;7622:64;;;;-1:-1:-1;;;7622:64:2;;5948:2:9;7622:64:2;;;5930:21:9;5987:2;5967:18;;;5960:30;6026:34;6006:18;;;5999:62;-1:-1:-1;;;6077:18:9;;;6070:33;6120:19;;7622:64:2;5746:399:9;7622:64:2;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;-1:-1:-1;;;;;7768:15:2;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:2;;6352:2:9;7793:72:2;;;6334:21:9;6391:2;6371:18;;;6364:30;6430:34;6410:18;;;6403:62;-1:-1:-1;;;6481:18:9;;;6474:36;6527:19;;7793:72:2;6150:402:9;7793:72:2;-1:-1:-1;;;;;7899:15:2;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:9;;;8114:13:2;;8163:26;;1315:18:9;8163:26:2;;;;;;;8200:37;9375:659;1359:130:0;1273:6;;-1:-1:-1;;;;;1273:6:0;;;;;719:10:6;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;6759:2:9;1414:68:0;;;6741:21:9;;;6778:18;;;6771:30;6837:34;6817:18;;;6810:62;6889:18;;1414:68:0;6557:356:9;2433:117:1;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:1::1;::::0;;2521:22:::1;719:10:6::0;2530:12:1::1;2521:22;::::0;-1:-1:-1;;;;;2440:32:9;;;2422:51;;2410:2;2395:18;2521:22:1::1;;;;;;;2433:117::o:0;8520:535:2:-;-1:-1:-1;;;;;8603:21:2;;8595:65;;;;-1:-1:-1;;;8595:65:2;;7120:2:9;8595:65:2;;;7102:21:9;7159:2;7139:18;;;7132:30;7198:33;7178:18;;;7171:61;7249:18;;8595:65:2;6918:355:9;8595:65:2;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:2;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1342:25:9;;;8952:37:2;;1315:18:9;8952:37:2;;;;;;;618:95:8;;:::o;9375:659:2:-;-1:-1:-1;;;;;9458:21:2;;9450:67;;;;-1:-1:-1;;;9450:67:2;;7480:2:9;9450:67:2;;;7462:21:9;7519:2;7499:18;;;7492:30;7558:34;7538:18;;;7531:62;-1:-1:-1;;;7609:18:9;;;7602:31;7650:19;;9450:67:2;7278:397:9;9450:67:2;9528:49;9549:7;9566:1;9570:6;9528:20;:49::i;:::-;-1:-1:-1;;;;;9613:18:2;;9588:22;9613:18;;;;;;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:2;;7882:2:9;9641:71:2;;;7864:21:9;7921:2;7901:18;;;7894:30;7960:34;7940:18;;;7933:62;-1:-1:-1;;;8011:18:9;;;8004:32;8053:19;;9641:71:2;7680:398:9;9641:71:2;-1:-1:-1;;;;;9746:18:2;;:9;:18;;;;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;1342:25:9;;;9746:9:2;;:18;9931:37;;1315:18:9;9931:37:2;1196:177:9;2426:187:0;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;2518:6;2534:17;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;2186:115:1:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:1::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;719:10:6::0;;640:96;721:199:8;1239:19:1;:17;:19::i;:::-;9440:594:2;9375:659;;:::o;1945:106:1:-;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:1;;8285:2:9;2003:41:1;;;8267:21:9;8324:2;8304:18;;;8297:30;-1:-1:-1;;;8343:18:9;;;8336:50;8403:18;;2003:41:1;8083:344:9;1767:106:1;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:1;;8634:2:9;1828:38:1;;;8616:21:9;8673:2;8653:18;;;8646:30;-1:-1:-1;;;8692:18:9;;;8685:46;8748:18;;1828:38:1;8432:340:9;14:548;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:9;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:9:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:9;;1900:180;-1:-1:-1;1900:180:9:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:9:o;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;3134:222::-;3199:9;;;3220:10;;;3217:133;;;3272:10;3267:3;3263:20;3260:1;3253:31;3307:4;3304:1;3297:15;3335:4;3332:1;3325:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "725800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24648",
								"balanceOf(address)": "2560",
								"burn(uint256)": "53033",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "288",
								"decreaseAllowance(address,uint256)": "26990",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2440",
								"pause()": "infinite",
								"paused()": "2414",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2348",
								"transfer(address,uint256)": "53300",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28476",
								"unpause()": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 306,
									"end": 923,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 306,
									"end": 923,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 923,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 370,
									"end": 468,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 370,
									"end": 468,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 370,
									"end": 468,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 370,
									"end": 468,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 370,
									"end": 468,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 370,
									"end": 468,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 468,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 370,
									"end": 468,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 370,
									"end": 468,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 370,
									"end": 468,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D454D45"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2046,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 417,
									"end": 460,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 423,
									"end": 433,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 443,
									"end": 459,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3186,
									"end": 3188,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 443,
									"end": 445,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 443,
									"end": 459,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 443,
									"end": 459,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 443,
									"end": 459,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 443,
									"end": 459,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 435,
									"end": 459,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 435,
									"end": 459,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 435,
									"end": 440,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "C350"
								},
								{
									"begin": 435,
									"end": 459,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 435,
									"end": 459,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 435,
									"end": 459,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 435,
									"end": 459,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 417,
									"end": 422,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 417,
									"end": 460,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 417,
									"end": 460,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 417,
									"end": 460,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 306,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 306,
									"end": 923,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8603,
									"end": 8624,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8603,
									"end": 8624,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4625,
									"end": 4627,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4607,
									"end": 4628,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4664,
									"end": 4666,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4644,
									"end": 4662,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4644,
									"end": 4662,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4644,
									"end": 4662,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4637,
									"end": 4667,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4703,
									"end": 4736,
									"name": "PUSH",
									"source": 9,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 4683,
									"end": 4701,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 4683,
									"end": 4701,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4683,
									"end": 4701,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4676,
									"end": 4737,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4754,
									"end": 4772,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 4754,
									"end": 4772,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8671,
									"end": 8720,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 8700,
									"end": 8701,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8704,
									"end": 8711,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8713,
									"end": 8719,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8671,
									"end": 8691,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 8671,
									"end": 8720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8671,
									"end": 8720,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 8671,
									"end": 8720,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8747,
									"end": 8753,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8743,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8731,
									"end": 8743,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 8731,
									"end": 8753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8908,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5059,
									"end": 5084,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5059,
									"end": 5084,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5059,
									"end": 5084,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5032,
									"end": 5050,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8520,
									"end": 9055,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 721,
									"end": 920,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 721,
									"end": 920,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1239,
									"end": 1258,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1239,
									"end": 1256,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1239,
									"end": 1258,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1239,
									"end": 1258,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1239,
									"end": 1258,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 868,
									"end": 912,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 895,
									"end": 899,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 901,
									"end": 903,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 905,
									"end": 911,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 868,
									"end": 912,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 868,
									"end": 912,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 868,
									"end": 912,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 868,
									"end": 912,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 868,
									"end": 912,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 721,
									"end": 920,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 721,
									"end": 920,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 721,
									"end": 920,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 721,
									"end": 920,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1767,
									"end": 1873,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1767,
									"end": 1873,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1836,
									"end": 1845,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5297,
									"end": 5299,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5279,
									"end": 5300,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5336,
									"end": 5338,
									"name": "PUSH",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 5316,
									"end": 5334,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 5316,
									"end": 5334,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5316,
									"end": 5334,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5309,
									"end": 5339,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "14185D5CD8589B194E881C185D5CD959"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "82"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5355,
									"end": 5373,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 5355,
									"end": 5373,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5355,
									"end": 5373,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5348,
									"end": 5394,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5411,
									"end": 5429,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 5411,
									"end": 5429,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 5095,
									"end": 5435,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 9,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2735,
									"end": 2862,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 2735,
									"end": 2862,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2796,
									"end": 2806,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 2791,
									"end": 2794,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 2787,
									"end": 2807,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2784,
									"end": 2785,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2777,
									"end": 2808,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2827,
									"end": 2831,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 2824,
									"end": 2825,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2817,
									"end": 2832,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2851,
									"end": 2855,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2848,
									"end": 2849,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2841,
									"end": 2856,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2956,
									"end": 2957,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2999,
									"end": 3004,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2956,
									"end": 2957,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "tag",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3034,
									"end": 3041,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3024,
									"end": 3032,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3021,
									"end": 3042,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3093,
									"end": 3097,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3089,
									"end": 3090,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3085,
									"end": 3091,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3081,
									"end": 3098,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 3075,
									"end": 3079,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3072,
									"end": 3099,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3069,
									"end": 3122,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3069,
									"end": 3122,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 3069,
									"end": 3122,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3102,
									"end": 3120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "tag",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3152,
									"end": 3159,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3142,
									"end": 3150,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3138,
									"end": 3160,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "tag",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3017,
									"end": 3020,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2867,
									"end": 3289,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3343,
									"end": 3348,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3373,
									"end": 3381,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3414,
									"end": 3415,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3428,
									"end": 3433,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 3428,
									"end": 3433,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "tag",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3462,
									"end": 3466,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3499,
									"end": 3500,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3513,
									"end": 3518,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 3513,
									"end": 3518,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3544,
									"end": 3548,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3562,
									"end": 3563,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3630,
									"end": 3631,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "tag",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3587,
									"end": 3588,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3578,
									"end": 3588,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3578,
									"end": 3588,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3601,
									"end": 3606,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3601,
									"end": 3606,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 3601,
									"end": 3606,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "tag",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3662,
									"end": 3665,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 3652,
									"end": 3660,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3649,
									"end": 3666,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3646,
									"end": 3689,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3646,
									"end": 3689,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 3646,
									"end": 3689,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3669,
									"end": 3687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "tag",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3725,
									"end": 3726,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3711,
									"end": 3727,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3711,
									"end": 3727,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3740,
									"end": 3745,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 3740,
									"end": 3745,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3839,
									"end": 3841,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3829,
									"end": 3837,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3826,
									"end": 3842,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3820,
									"end": 3823,
									"name": "PUSH",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 3814,
									"end": 3818,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3811,
									"end": 3824,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3807,
									"end": 3843,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3801,
									"end": 3803,
									"name": "PUSH",
									"source": 9,
									"value": "4E"
								},
								{
									"begin": 3791,
									"end": 3799,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3788,
									"end": 3804,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3783,
									"end": 3785,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 3777,
									"end": 3781,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3774,
									"end": 3786,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3770,
									"end": 3805,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3767,
									"end": 3844,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3876,
									"end": 3895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3876,
									"end": 3895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3876,
									"end": 3895,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 3908,
									"end": 3913,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 3908,
									"end": 3913,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "tag",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 3980,
									"end": 3988,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3974,
									"end": 3978,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 3955,
									"end": 3989,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "tag",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4025,
									"end": 4031,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4021,
									"end": 4022,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4017,
									"end": 4023,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4013,
									"end": 4032,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 4004,
									"end": 4011,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4001,
									"end": 4033,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3998,
									"end": 4056,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3998,
									"end": 4056,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 3998,
									"end": 4056,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 4036,
									"end": 4054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "tag",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4074,
									"end": 4094,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4074,
									"end": 4094,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "tag",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3294,
									"end": 4100,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4105,
									"end": 4245,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 4105,
									"end": 4245,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4163,
									"end": 4168,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4192,
									"end": 4239,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 4233,
									"end": 4237,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 4223,
									"end": 4231,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4219,
									"end": 4238,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4213,
									"end": 4217,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4192,
									"end": 4239,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 4192,
									"end": 4239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4192,
									"end": 4239,
									"name": "tag",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 4192,
									"end": 4239,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4183,
									"end": 4239,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4105,
									"end": 4245,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4105,
									"end": 4245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4250,
									"end": 4418,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 4250,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4323,
									"end": 4332,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4323,
									"end": 4332,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4323,
									"end": 4332,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4354,
									"end": 4363,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4354,
									"end": 4363,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4371,
									"end": 4386,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4371,
									"end": 4386,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4371,
									"end": 4386,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 4365,
									"end": 4387,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4365,
									"end": 4387,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 4351,
									"end": 4388,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4341,
									"end": 4412,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 4341,
									"end": 4412,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4392,
									"end": 4410,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 4392,
									"end": 4410,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 4392,
									"end": 4410,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4783,
									"end": 4908,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 4783,
									"end": 4908,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4848,
									"end": 4857,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4848,
									"end": 4857,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4848,
									"end": 4857,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4869,
									"end": 4879,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4869,
									"end": 4879,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4869,
									"end": 4879,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4866,
									"end": 4902,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4866,
									"end": 4902,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 4866,
									"end": 4902,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4882,
									"end": 4900,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 4882,
									"end": 4900,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 4882,
									"end": 4900,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5095,
									"end": 5435,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 5095,
									"end": 5435,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 306,
									"end": 923,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 923,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 306,
									"end": 923,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 923,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 923,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 306,
									"end": 923,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 923,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b2bdded898deff7ef1c376e1775447fee4470a03ac7721b81d02409b2ed8619a64736f6c63430008140033",
									".code": [
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "A457C2D7"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "79CC6790"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "8456CB59"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "39509351"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "39509351"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "3F4BA83A"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "40C10F19"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "42966C68"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "5C975ABB"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 610,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 545,
											"end": 610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 545,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 545,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 545,
											"end": 610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 545,
											"end": 610,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 545,
											"end": 610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 545,
											"end": 610,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 618,
											"end": 713,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 618,
											"end": 713,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 618,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 618,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 618,
											"end": 713,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 618,
											"end": 713,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 618,
											"end": 713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 618,
											"end": 713,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 618,
											"end": 713,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 618,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 618,
											"end": 713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 578,
											"end": 667,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 578,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 578,
											"end": 667,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 578,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3419,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 973,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 973,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 476,
											"end": 537,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 476,
											"end": 537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 476,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 476,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 476,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2410,
											"end": 2412,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2369,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4581,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5356,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5404,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 6021,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6021,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5996,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 610,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 545,
											"end": 610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 602,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 592,
											"end": 600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 592,
											"end": 602,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 592,
											"end": 602,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 592,
											"end": 602,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 545,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 618,
											"end": 713,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 618,
											"end": 713,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 688,
											"end": 705,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 694,
											"end": 696,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 698,
											"end": 704,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 688,
											"end": 693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 688,
											"end": 705,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 688,
											"end": 705,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 688,
											"end": 705,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 618,
											"end": 713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 618,
											"end": 713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 618,
											"end": 713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 578,
											"end": 667,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 633,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 653,
											"end": 659,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 633,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 633,
											"end": 660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 633,
											"end": 660,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 633,
											"end": 660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 578,
											"end": 667,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 578,
											"end": 667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1049,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1065,
											"end": 1072,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1049,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1049,
											"end": 1095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1049,
											"end": 1095,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1049,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1111,
											"end": 1118,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1105,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 476,
											"end": 537,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 476,
											"end": 537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 521,
											"end": 529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 521,
											"end": 527,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 521,
											"end": 529,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2450,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 6749,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3565,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3566,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3602,
											"end": 3604,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3575,
											"end": 3605,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3675,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3614,
											"end": 3676,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3692,
											"end": 3710,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3692,
											"end": 3710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 3720,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3737,
											"end": 3756,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3737,
											"end": 3756,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 6903,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3873,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3969,
											"end": 3971,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 3972,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4008,
											"end": 4010,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 4011,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4047,
											"end": 4081,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4082,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4098,
											"end": 4116,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4098,
											"end": 4116,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4098,
											"end": 4116,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4091,
											"end": 4127,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4144,
											"end": 4163,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4144,
											"end": 4163,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3767,
											"end": 4169,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4376,
											"end": 4378,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4358,
											"end": 4379,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4415,
											"end": 4417,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4395,
											"end": 4413,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4395,
											"end": 4413,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4395,
											"end": 4413,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4418,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4454,
											"end": 4488,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4434,
											"end": 4452,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4434,
											"end": 4452,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4452,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4427,
											"end": 4489,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4532,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4549,
											"end": 4568,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4549,
											"end": 4568,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4174,
											"end": 4574,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4763,
											"end": 4784,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4820,
											"end": 4822,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4793,
											"end": 4823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4859,
											"end": 4893,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4839,
											"end": 4857,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4839,
											"end": 4857,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4857,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4832,
											"end": 4894,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4910,
											"end": 4928,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4910,
											"end": 4928,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4910,
											"end": 4928,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4935,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 4971,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4952,
											"end": 4971,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4579,
											"end": 4977,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 11205,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5184,
											"end": 5186,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5166,
											"end": 5187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5225,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 5203,
											"end": 5221,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5203,
											"end": 5221,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5203,
											"end": 5221,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5196,
											"end": 5226,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5262,
											"end": 5293,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 5242,
											"end": 5260,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5242,
											"end": 5260,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5260,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5235,
											"end": 5294,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5311,
											"end": 5329,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5311,
											"end": 5329,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4982,
											"end": 5335,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 11407,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 5544,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5545,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5581,
											"end": 5583,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 5561,
											"end": 5579,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5561,
											"end": 5579,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5579,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5554,
											"end": 5584,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5620,
											"end": 5654,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5593,
											"end": 5655,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5664,
											"end": 5699,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5716,
											"end": 5735,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5716,
											"end": 5735,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5340,
											"end": 5741,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5948,
											"end": 5950,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5930,
											"end": 5951,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 5989,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 5967,
											"end": 5985,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5967,
											"end": 5985,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5967,
											"end": 5985,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5960,
											"end": 5990,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6060,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 6006,
											"end": 6024,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6006,
											"end": 6024,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6024,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5999,
											"end": 6061,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6070,
											"end": 6103,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6120,
											"end": 6139,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 6120,
											"end": 6139,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5746,
											"end": 6145,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 7718,
											"end": 7722,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7724,
											"end": 7726,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7697,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 7697,
											"end": 7735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6354,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6334,
											"end": 6355,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6391,
											"end": 6393,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 6371,
											"end": 6389,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6371,
											"end": 6389,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6371,
											"end": 6389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6364,
											"end": 6394,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6430,
											"end": 6464,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 6410,
											"end": 6428,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6410,
											"end": 6428,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6410,
											"end": 6428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6403,
											"end": 6465,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6481,
											"end": 6499,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6481,
											"end": 6499,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6481,
											"end": 6499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6474,
											"end": 6510,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 6150,
											"end": 6552,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6759,
											"end": 6761,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6741,
											"end": 6762,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6741,
											"end": 6762,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6741,
											"end": 6762,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6771,
											"end": 6801,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6837,
											"end": 6871,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6810,
											"end": 6872,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 6907,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6889,
											"end": 6907,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6557,
											"end": 6913,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2410,
											"end": 2412,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8520,
											"end": 9055,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 8520,
											"end": 9055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8603,
											"end": 8624,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8603,
											"end": 8624,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7120,
											"end": 7122,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7102,
											"end": 7123,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7161,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 7139,
											"end": 7157,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7139,
											"end": 7157,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7139,
											"end": 7157,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7132,
											"end": 7162,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7198,
											"end": 7231,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7178,
											"end": 7196,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7178,
											"end": 7196,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7178,
											"end": 7196,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7171,
											"end": 7232,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7249,
											"end": 7267,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7249,
											"end": 7267,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 6918,
											"end": 7273,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8671,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 8700,
											"end": 8701,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8704,
											"end": 8711,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8713,
											"end": 8719,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8671,
											"end": 8691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 8671,
											"end": 8720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8671,
											"end": 8720,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 8671,
											"end": 8720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8743,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8731,
											"end": 8743,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 8731,
											"end": 8753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 618,
											"end": 713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 618,
											"end": 713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 618,
											"end": 713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9458,
											"end": 9479,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9458,
											"end": 9479,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7480,
											"end": 7482,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7483,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7519,
											"end": 7521,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7492,
											"end": 7522,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7558,
											"end": 7592,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 7538,
											"end": 7556,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7538,
											"end": 7556,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7538,
											"end": 7556,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7531,
											"end": 7593,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7602,
											"end": 7633,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7650,
											"end": 7669,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 7650,
											"end": 7669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7278,
											"end": 7675,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9528,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 9549,
											"end": 9556,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9566,
											"end": 9567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9570,
											"end": 9576,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 9528,
											"end": 9577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9528,
											"end": 9577,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 9528,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9588,
											"end": 9610,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7882,
											"end": 7884,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7885,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7921,
											"end": 7923,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 7901,
											"end": 7919,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7901,
											"end": 7919,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7901,
											"end": 7919,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 7924,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7960,
											"end": 7994,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 7940,
											"end": 7958,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7940,
											"end": 7958,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7940,
											"end": 7958,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7933,
											"end": 7995,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8011,
											"end": 8029,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8011,
											"end": 8029,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8011,
											"end": 8029,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8004,
											"end": 8036,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8053,
											"end": 8072,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8053,
											"end": 8072,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7680,
											"end": 8078,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9790,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9895,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 721,
											"end": 920,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 721,
											"end": 920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9440,
											"end": 10034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9375,
											"end": 10034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8287,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8288,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8324,
											"end": 8326,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 8304,
											"end": 8322,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8304,
											"end": 8322,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8304,
											"end": 8322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8297,
											"end": 8327,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8343,
											"end": 8361,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8343,
											"end": 8361,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8343,
											"end": 8361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8336,
											"end": 8386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8403,
											"end": 8421,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8403,
											"end": 8421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 8083,
											"end": 8427,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8636,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8616,
											"end": 8637,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8673,
											"end": 8675,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 8653,
											"end": 8671,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8653,
											"end": 8671,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8653,
											"end": 8671,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8646,
											"end": 8676,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8731,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8748,
											"end": 8766,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8748,
											"end": 8766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 8432,
											"end": 8772,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2199,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2183,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2172,
											"end": 2195,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2200,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2213,
											"end": 2214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 2255,
											"end": 2264,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 2236,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2226,
											"end": 2265,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2085,
											"end": 2271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2613,
											"end": 2615,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2599,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2588,
											"end": 2611,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2616,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2619,
											"end": 2631,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 2671,
											"end": 2680,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 2652,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 2734,
											"end": 2736,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 2700,
											"end": 2738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2946,
											"end": 2950,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 2938,
											"end": 2944,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2934,
											"end": 2951,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 2951,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 2951,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2999,
											"end": 3001,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 2997,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3002,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2968,
											"end": 2986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2965,
											"end": 3003,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3055,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 3040,
											"end": 3043,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3036,
											"end": 3056,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3033,
											"end": 3034,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3057,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3080,
											"end": 3084,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3070,
											"end": 3085,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3108,
											"end": 3112,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3113,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2749,
											"end": 3129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3356,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 3134,
											"end": 3356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3208,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3208,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3217,
											"end": 3350,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3217,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 3217,
											"end": 3350,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3272,
											"end": 3282,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 3267,
											"end": 3270,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3263,
											"end": 3283,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3261,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3253,
											"end": 3284,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3311,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3304,
											"end": 3305,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3339,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3332,
											"end": 3333,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3340,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"DEX.sol",
								"MEME.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MEME.sol\":\"MEME\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"MEME.sol\":{\"keccak256\":\"0x3fca3f1262f20833c3e079d9692dfd0af0f3a93b2eef3205f69430ae490a6d26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9f24cce4eb4afb866c7710fe6019de37da9944fa0914a0b8e0d0206fcb4bc1c\",\"dweb:/ipfs/QmPrDUwqYS4BDE6ks5bWgrnTnsbxw7DA7ddLcjSgt31Ltd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 236,
								"contract": "MEME.sol:MEME",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 242,
								"contract": "MEME.sol:MEME",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 244,
								"contract": "MEME.sol:MEME",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 246,
								"contract": "MEME.sol:MEME",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 248,
								"contract": "MEME.sol:MEME",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 130,
								"contract": "MEME.sol:MEME",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 7,
								"contract": "MEME.sol:MEME",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							976
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 977,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 976,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								976
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": [],
							"usedEvents": [
								13
							]
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							976
						],
						"Pausable": [
							220
						]
					},
					"id": 221,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 221,
							"sourceUnit": 977,
							"src": "130:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 117,
										"name": "Context",
										"nameLocations": [
											"632:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 976,
										"src": "632:7:1"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:1"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 220,
							"linearizedBaseContracts": [
								220,
								976
							],
							"name": "Pausable",
							"nameLocation": "620:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 123,
									"name": "Paused",
									"nameLocation": "730:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "737:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:1"
									},
									"src": "724:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 128,
									"name": "Unpaused",
									"nameLocation": "841:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "850:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:1"
									},
									"src": "835:32:1"
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 220,
									"src": "873:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 129,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "986:32:1",
										"statements": [
											{
												"expression": {
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 134,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "996:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "996:15:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 139,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:1"
									},
									"scope": 220,
									"src": "972:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "1229:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 142,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1239:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:1"
											},
											{
												"id": 145,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:1"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 147,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:1"
									},
									"src": "1204:72:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1476:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 150,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "1486:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:1"
											},
											{
												"id": 153,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:1"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 155,
									"name": "whenPaused",
									"nameLocation": "1463:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:1"
									},
									"src": "1454:66:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1668:31:1",
										"statements": [
											{
												"expression": {
													"id": 161,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 130,
													"src": "1685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 160,
												"id": 162,
												"nodeType": "Return",
												"src": "1678:14:1"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1662:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:1"
									},
									"scope": 220,
									"src": "1615:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "1818:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "1837:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:1"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:1",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:1"
									},
									"scope": 220,
									"src": "1767:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "1993:58:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 181,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2011:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:1"
											}
										]
									},
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:1",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:1"
									},
									"scope": 220,
									"src": "1945:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2235:66:1",
										"statements": [
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2245:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 198,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "2281:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 197,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2274:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "EmitStatement",
												"src": "2269:25:1"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 191,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 190,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2221:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:1"
									},
									"scope": 220,
									"src": "2186:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "2481:69:1",
										"statements": [
											{
												"expression": {
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 209,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2491:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 214,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "2530:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 213,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "2521:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "EmitStatement",
												"src": "2516:27:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 207,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 206,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 155,
												"src": "2470:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:1"
									},
									"scope": 220,
									"src": "2433:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 221,
							"src": "602:1950:1",
							"usedErrors": [],
							"usedEvents": [
								123,
								128
							]
						}
					],
					"src": "105:2448:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							976
						],
						"ERC20": [
							807
						],
						"IERC20": [
							885
						],
						"IERC20Metadata": [
							954
						]
					},
					"id": 808,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 222,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 223,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 808,
							"sourceUnit": 886,
							"src": "130:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 224,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 808,
							"sourceUnit": 955,
							"src": "153:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 225,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 808,
							"sourceUnit": 977,
							"src": "195:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 227,
										"name": "Context",
										"nameLocations": [
											"1550:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 976,
										"src": "1550:7:2"
									},
									"id": 228,
									"nodeType": "InheritanceSpecifier",
									"src": "1550:7:2"
								},
								{
									"baseName": {
										"id": 229,
										"name": "IERC20",
										"nameLocations": [
											"1559:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 885,
										"src": "1559:6:2"
									},
									"id": 230,
									"nodeType": "InheritanceSpecifier",
									"src": "1559:6:2"
								},
								{
									"baseName": {
										"id": 231,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1567:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 954,
										"src": "1567:14:2"
									},
									"id": 232,
									"nodeType": "InheritanceSpecifier",
									"src": "1567:14:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 226,
								"nodeType": "StructuredDocumentation",
								"src": "230:1301:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 807,
							"linearizedBaseContracts": [
								807,
								954,
								885,
								976
							],
							"name": "ERC20",
							"nameLocation": "1541:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 236,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1624:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "1588:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 235,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 233,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1596:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1588:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 234,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1607:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 242,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1696:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "1640:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 241,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 237,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1648:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1640:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 240,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 238,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1667:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1659:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 239,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 244,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1730:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "1714:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 243,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1714:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 246,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1764:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "1749:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 245,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1749:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1790:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "1775:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 247,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1775:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2036:57:2",
										"statements": [
											{
												"expression": {
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 256,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2046:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 257,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "2054:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2046:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "2046:13:2"
											},
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 260,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2069:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 261,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "2079:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2069:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "2069:17:2"
											}
										]
									},
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "1804:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 265,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2006:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1992:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 250,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2027:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2013:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 252,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2013:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:44:2"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:0:2"
									},
									"scope": 807,
									"src": "1980:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										941
									],
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "2227:29:2",
										"statements": [
											{
												"expression": {
													"id": 272,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 246,
													"src": "2244:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 271,
												"id": 273,
												"nodeType": "Return",
												"src": "2237:12:2"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2099:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2167:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 268,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2194:8:2"
									},
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2171:2:2"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2212:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 269,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2212:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:15:2"
									},
									"scope": 807,
									"src": "2158:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										947
									],
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "2440:31:2",
										"statements": [
											{
												"expression": {
													"id": 282,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 248,
													"src": "2457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 281,
												"id": 283,
												"nodeType": "Return",
												"src": "2450:14:2"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "2262:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2378:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 278,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2407:8:2"
									},
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:2:2"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "2425:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2425:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:2"
									},
									"scope": 807,
									"src": "2369:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										953
									],
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "3169:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3186:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 291,
												"id": 293,
												"nodeType": "Return",
												"src": "3179:9:2"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "2477:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3113:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 288,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3144:8:2"
									},
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3121:2:2"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "3162:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 289,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3162:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3161:7:2"
									},
									"scope": 807,
									"src": "3104:91:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "3325:36:2",
										"statements": [
											{
												"expression": {
													"id": 302,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 244,
													"src": "3342:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 301,
												"id": 303,
												"nodeType": "Return",
												"src": "3335:19:2"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "3201:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3264:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 298,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3298:8:2"
									},
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3275:2:2"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "3316:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:9:2"
									},
									"scope": 807,
									"src": "3255:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										842
									],
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "3502:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 314,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "3519:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 316,
													"indexExpression": {
														"id": 315,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "3529:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3519:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 313,
												"id": 317,
												"nodeType": "Return",
												"src": "3512:25:2"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "3367:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3428:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 310,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3475:8:2"
									},
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3446:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "3438:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3438:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:17:2"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "3493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:9:2"
									},
									"scope": 807,
									"src": "3419:125:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										852
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "3825:104:2",
										"statements": [
											{
												"assignments": [
													331
												],
												"declarations": [
													{
														"constant": false,
														"id": 331,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3843:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 343,
														"src": "3835:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 330,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3835:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 334,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 332,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "3851:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3835:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 336,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3883:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "3890:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "3894:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 335,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "3873:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3873:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "3873:28:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3918:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 329,
												"id": 342,
												"nodeType": "Return",
												"src": "3911:11:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "3550:185:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3749:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 326,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3801:8:2"
									},
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3766:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "3758:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3778:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "3770:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3757:28:2"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "3819:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 327,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3819:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:6:2"
									},
									"scope": 807,
									"src": "3740:189:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										862
									],
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "4085:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 355,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "4102:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 357,
														"indexExpression": {
															"id": 356,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "4114:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4102:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 359,
													"indexExpression": {
														"id": 358,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "4121:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4102:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 354,
												"id": 360,
												"nodeType": "Return",
												"src": "4095:34:2"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "3935:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3996:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 351,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4058:8:2"
									},
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4014:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4006:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4029:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4021:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:32:2"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4076:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:9:2"
									},
									"scope": 807,
									"src": "3987:149:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										872
									],
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "4533:108:2",
										"statements": [
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4551:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 386,
														"src": "4543:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 373,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4543:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 375,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "4559:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4559:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4543:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 379,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "4590:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 380,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "4597:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 381,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "4606:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 378,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "4581:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4581:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "4581:32:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4630:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 372,
												"id": 385,
												"nodeType": "Return",
												"src": "4623:11:2"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "4142:297:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4453:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 369,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4509:8:2"
									},
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4469:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4461:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4486:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4478:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4460:33:2"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4527:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 370,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4527:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:6:2"
									},
									"scope": 807,
									"src": "4444:197:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										884
									],
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "5306:153:2",
										"statements": [
											{
												"assignments": [
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5324:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 419,
														"src": "5316:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 400,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5316:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 404,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 402,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "5334:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5334:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5316:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 406,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "5372:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 407,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "5378:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 408,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "5387:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 405,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "5356:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5356:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "5356:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 412,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "5414:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 413,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "5420:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 414,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "5424:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 411,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "5404:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5404:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "5404:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5448:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 399,
												"id": 418,
												"nodeType": "Return",
												"src": "5441:11:2"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "4647:551:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5212:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 396,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5282:8:2"
									},
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5233:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5225:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5247:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5239:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5259:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5251:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5251:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:42:2"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5300:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5300:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:6:2"
									},
									"scope": 807,
									"src": "5203:256:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "5948:140:2",
										"statements": [
											{
												"assignments": [
													431
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5966:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "5958:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 430,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5958:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 432,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "5974:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5974:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5958:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 436,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "6005:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 437,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "6012:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 439,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 431,
																		"src": "6031:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 440,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "6038:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 438,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "6021:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6021:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 442,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "6049:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6021:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 435,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "5996:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5996:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "5996:64:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6077:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 429,
												"id": 447,
												"nodeType": "Return",
												"src": "6070:11:2"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5863:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5889:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "5881:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5881:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5906:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "5898:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5880:37:2"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "5942:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 427,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5942:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5941:6:2"
									},
									"scope": 807,
									"src": "5854:234:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "6674:328:2",
										"statements": [
											{
												"assignments": [
													460
												],
												"declarations": [
													{
														"constant": false,
														"id": 460,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6692:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 489,
														"src": "6684:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 459,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6684:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 463,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 461,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "6700:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6684:28:2"
											},
											{
												"assignments": [
													465
												],
												"declarations": [
													{
														"constant": false,
														"id": 465,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6730:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 489,
														"src": "6722:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 464,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6722:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 470,
												"initialValue": {
													"arguments": [
														{
															"id": 467,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "6759:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "6766:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 466,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "6749:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6749:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6722:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 472,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "6792:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 473,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "6812:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6792:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6829:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6784:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6784:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "6784:85:2"
											},
											{
												"id": 486,
												"nodeType": "UncheckedBlock",
												"src": "6879:95:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 479,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "6912:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 480,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6919:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 481,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 465,
																		"src": "6928:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 482,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "6947:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6928:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 478,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "6903:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6903:60:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 485,
														"nodeType": "ExpressionStatement",
														"src": "6903:60:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6991:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 458,
												"id": 488,
												"nodeType": "Return",
												"src": "6984:11:2"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "6094:476:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6584:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6610:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "6602:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6627:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "6619:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6601:42:2"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "6668:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 456,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:2"
									},
									"scope": 807,
									"src": "6575:427:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "7534:710:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 501,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "7552:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7568:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7560:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 502,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7560:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7560:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7552:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7572:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7544:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7544:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "7544:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 511,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "7630:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7644:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7636:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 512,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7636:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7636:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7630:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7648:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 510,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7622:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7622:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "7622:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 521,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "7718:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 522,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "7724:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 523,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "7728:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 520,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "7697:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7697:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "7697:38:2"
											},
											{
												"assignments": [
													527
												],
												"declarations": [
													{
														"constant": false,
														"id": 527,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7754:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 566,
														"src": "7746:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 526,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7746:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"baseExpression": {
														"id": 528,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "7768:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 530,
													"indexExpression": {
														"id": 529,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "7778:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7768:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7746:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 533,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "7801:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 534,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "7816:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7801:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7824:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7793:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7793:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "7793:72:2"
											},
											{
												"id": 553,
												"nodeType": "UncheckedBlock",
												"src": "7875:273:2",
												"statements": [
													{
														"expression": {
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 539,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "7899:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 541,
																"indexExpression": {
																	"id": 540,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "7909:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7899:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 542,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "7917:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 543,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "7931:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7917:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7899:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 546,
														"nodeType": "ExpressionStatement",
														"src": "7899:38:2"
													},
													{
														"expression": {
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 547,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "8114:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 549,
																"indexExpression": {
																	"id": 548,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 495,
																	"src": "8124:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8114:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 550,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "8131:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8114:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 552,
														"nodeType": "ExpressionStatement",
														"src": "8114:23:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 555,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "8172:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 556,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "8178:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 557,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "8182:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 554,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "8163:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8163:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "EmitStatement",
												"src": "8158:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 561,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "8220:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 562,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "8226:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 563,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "8230:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 560,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "8200:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8200:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "8200:37:2"
											}
										]
									},
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "7008:443:2",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7465:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7483:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "7475:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7475:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7497:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "7489:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7489:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7509:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "7501:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7474:42:2"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7534:0:2"
									},
									"scope": 807,
									"src": "7456:788:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "8585:470:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 576,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "8603:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8622:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8614:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 577,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8614:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8614:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8603:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8626:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 575,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8595:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8595:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 584,
												"nodeType": "ExpressionStatement",
												"src": "8595:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8700:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8692:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 586,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8692:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8692:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "8704:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "8713:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 585,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "8671:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8671:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "8671:49:2"
											},
											{
												"expression": {
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 594,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "8731:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 595,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "8747:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8731:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "8731:22:2"
											},
											{
												"id": 604,
												"nodeType": "UncheckedBlock",
												"src": "8763:175:2",
												"statements": [
													{
														"expression": {
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 598,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "8899:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 600,
																"indexExpression": {
																	"id": 599,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "8909:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8899:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 601,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "8921:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8899:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 603,
														"nodeType": "ExpressionStatement",
														"src": "8899:28:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8969:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8961:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 606,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8961:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8961:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 610,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "8973:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 611,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "8982:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 605,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "8952:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "EmitStatement",
												"src": "8947:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9028:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9020:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 615,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9020:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9020:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 619,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "9032:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "9041:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 614,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "9000:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "9000:48:2"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "8250:265:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8529:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8543:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "8535:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8535:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8560:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "8552:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:33:2"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8585:0:2"
									},
									"scope": 807,
									"src": "8520:535:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "9440:594:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 633,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "9458:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9477:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9469:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 634,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9469:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9469:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9458:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9481:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 632,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9450:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9450:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "9450:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 643,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "9549:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9566:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9558:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 644,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9558:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9558:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "9570:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 642,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9528:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9528:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "9528:49:2"
											},
											{
												"assignments": [
													652
												],
												"declarations": [
													{
														"constant": false,
														"id": 652,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9596:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 695,
														"src": "9588:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 651,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9588:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 656,
												"initialValue": {
													"baseExpression": {
														"id": 653,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "9613:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 655,
													"indexExpression": {
														"id": 654,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "9623:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9613:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9588:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 658,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "9649:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 659,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 629,
																"src": "9667:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9649:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9675:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 657,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9641:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9641:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "9641:71:2"
											},
											{
												"id": 676,
												"nodeType": "UncheckedBlock",
												"src": "9722:194:2",
												"statements": [
													{
														"expression": {
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 664,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "9746:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 666,
																"indexExpression": {
																	"id": 665,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 627,
																	"src": "9756:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9746:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 667,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "9767:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 668,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "9784:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9767:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9746:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 671,
														"nodeType": "ExpressionStatement",
														"src": "9746:44:2"
													},
													{
														"expression": {
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 672,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "9883:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 673,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 629,
																"src": "9899:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9883:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 675,
														"nodeType": "ExpressionStatement",
														"src": "9883:22:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 678,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "9940:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9957:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9949:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 679,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9949:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9949:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 683,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "9961:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 677,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "9931:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9931:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 685,
												"nodeType": "EmitStatement",
												"src": "9926:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 687,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "9999:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10016:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10008:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 688,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10008:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10008:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "10020:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 686,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "9979:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9979:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "9979:48:2"
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "9061:309:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9384:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9398:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "9390:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9390:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9415:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "9407:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9389:33:2"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9440:0:2"
									},
									"scope": 807,
									"src": "9375:659:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "10540:257:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 707,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "10558:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10575:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10567:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 708,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10567:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10567:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10558:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10579:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 706,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10550:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10550:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "10550:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 717,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "10636:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10655:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10647:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 718,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10647:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10647:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10636:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10659:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 716,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10628:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10628:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "10628:68:2"
											},
											{
												"expression": {
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 726,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "10707:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 729,
															"indexExpression": {
																"id": 727,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "10719:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10707:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 730,
														"indexExpression": {
															"id": 728,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "10726:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10707:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 731,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "10737:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10707:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "10707:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "10767:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "10774:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "10783:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 734,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "10758:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10758:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 739,
												"nodeType": "EmitStatement",
												"src": "10753:37:2"
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "10040:412:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10466:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10483:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "10475:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10475:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10498:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "10490:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10515:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "10507:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10474:48:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10540:0:2"
									},
									"scope": 807,
									"src": "10457:340:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "11168:321:2",
										"statements": [
											{
												"assignments": [
													752
												],
												"declarations": [
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11186:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 783,
														"src": "11178:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11178:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 757,
												"initialValue": {
													"arguments": [
														{
															"id": 754,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "11215:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "11222:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 753,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "11205:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11205:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11178:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "11244:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11269:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 760,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11269:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 759,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11264:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11264:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11278:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11264:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11244:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 782,
												"nodeType": "IfStatement",
												"src": "11240:243:2",
												"trueBody": {
													"id": 781,
													"nodeType": "Block",
													"src": "11283:200:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 766,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 752,
																			"src": "11305:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 767,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 748,
																			"src": "11325:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11305:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11333:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 765,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11297:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11297:68:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 771,
															"nodeType": "ExpressionStatement",
															"src": "11297:68:2"
														},
														{
															"id": 780,
															"nodeType": "UncheckedBlock",
															"src": "11379:94:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 773,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 744,
																				"src": "11416:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 774,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 746,
																				"src": "11423:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 775,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 752,
																					"src": "11432:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 776,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 748,
																					"src": "11451:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11432:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 772,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 741,
																			"src": "11407:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11407:51:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 779,
																	"nodeType": "ExpressionStatement",
																	"src": "11407:51:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "10803:270:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11087:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11111:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "11103:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11103:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11126:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "11118:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11143:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "11135:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11102:48:2"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11168:0:2"
									},
									"scope": 807,
									"src": "11078:411:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "12162:2:2",
										"statements": []
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "11495:573:2",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12082:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12111:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "12103:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12103:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12125:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "12117:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12117:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12137:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "12129:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12129:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12102:42:2"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12162:0:2"
									},
									"scope": 807,
									"src": "12073:91:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "12840:2:2",
										"statements": []
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "12170:577:2",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12761:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12789:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "12781:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12781:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12803:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "12795:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12795:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12815:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "12807:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12807:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12780:42:2"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12840:0:2"
									},
									"scope": 807,
									"src": "12752:90:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 808,
							"src": "1532:11312:2",
							"usedErrors": [],
							"usedEvents": [
								819,
								828
							]
						}
					],
					"src": "105:12740:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							885
						]
					},
					"id": 886,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 809,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 810,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 885,
							"linearizedBaseContracts": [
								885
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 819,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 828,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 885,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 885,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 852,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 849,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 885,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 885,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 872,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 869,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 885,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 884,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "2668:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "2682:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "2694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:3"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "2728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 881,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:3"
									},
									"scope": 885,
									"src": "2646:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 886,
							"src": "202:2534:3",
							"usedErrors": [],
							"usedEvents": [
								819,
								828
							]
						}
					],
					"src": "106:2631:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							976
						],
						"ERC20": [
							807
						],
						"ERC20Burnable": [
							929
						],
						"IERC20": [
							885
						],
						"IERC20Metadata": [
							954
						]
					},
					"id": 930,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 887,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "124:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 888,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 930,
							"sourceUnit": 808,
							"src": "149:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 930,
							"sourceUnit": 977,
							"src": "172:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 891,
										"name": "Context",
										"nameLocations": [
											"454:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 976,
										"src": "454:7:4"
									},
									"id": 892,
									"nodeType": "InheritanceSpecifier",
									"src": "454:7:4"
								},
								{
									"baseName": {
										"id": 893,
										"name": "ERC20",
										"nameLocations": [
											"463:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 807,
										"src": "463:5:4"
									},
									"id": 894,
									"nodeType": "InheritanceSpecifier",
									"src": "463:5:4"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 890,
								"nodeType": "StructuredDocumentation",
								"src": "210:208:4",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 929,
							"linearizedBaseContracts": [
								929,
								807,
								954,
								885,
								976
							],
							"name": "ERC20Burnable",
							"nameLocation": "437:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "623:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 901,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "639:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "639:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 903,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "653:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 900,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "633:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "633:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "633:27:4"
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "475:98:4",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "587:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "600:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "592:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:16:4"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "623:0:4"
									},
									"scope": 929,
									"src": "578:89:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "1039:95:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 916,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "1065:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 917,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "1074:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1074:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "1088:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 915,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "1049:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1049:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "1049:46:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 923,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "1111:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "1120:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 922,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "1105:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1105:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "1105:22:4"
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "673:295:4",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "982:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "999:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "991:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1016:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "1008:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:33:4"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1039:0:4"
									},
									"scope": 929,
									"src": "973:161:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 930,
							"src": "419:717:4",
							"usedErrors": [],
							"usedEvents": [
								819,
								828
							]
						}
					],
					"src": "124:1013:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							885
						],
						"IERC20Metadata": [
							954
						]
					},
					"id": 955,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 931,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 932,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 955,
							"sourceUnit": 886,
							"src": "135:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 934,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 885,
										"src": "305:6:5"
									},
									"id": 935,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 933,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 954,
							"linearizedBaseContracts": [
								954,
								885
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 938,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 954,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 947,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 944,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 954,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 953,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 950,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 954,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 955,
							"src": "277:405:5",
							"usedErrors": [],
							"usedEvents": [
								819,
								828
							]
						}
					],
					"src": "110:573:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							976
						]
					},
					"id": 977,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 956,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 957,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 976,
							"linearizedBaseContracts": [
								976
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 962,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 961,
												"id": 964,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 976,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 971,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 970,
												"id": 973,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 968,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 976,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 977,
							"src": "608:235:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"DEX.sol": {
				"ast": {
					"absolutePath": "DEX.sol",
					"exportedSymbols": {
						"Context": [
							976
						],
						"DEX": [
							1890
						],
						"ERC20": [
							807
						],
						"ERC20Burnable": [
							929
						],
						"IERC20": [
							885
						],
						"IERC20Metadata": [
							954
						],
						"MEME": [
							1978
						],
						"Ownable": [
							112
						],
						"Pausable": [
							220
						]
					},
					"id": 1891,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 978,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 979,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1891,
							"sourceUnit": 221,
							"src": "58:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 980,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1891,
							"sourceUnit": 113,
							"src": "114:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 981,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1891,
							"sourceUnit": 808,
							"src": "167:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "MEME.sol",
							"file": "MEME.sol",
							"id": 982,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1891,
							"sourceUnit": 1979,
							"src": "223:18:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 983,
										"name": "Pausable",
										"nameLocations": [
											"259:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 220,
										"src": "259:8:7"
									},
									"id": 984,
									"nodeType": "InheritanceSpecifier",
									"src": "259:8:7"
								},
								{
									"baseName": {
										"id": 985,
										"name": "Ownable",
										"nameLocations": [
											"269:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "269:7:7"
									},
									"id": 986,
									"nodeType": "InheritanceSpecifier",
									"src": "269:7:7"
								}
							],
							"canonicalName": "DEX",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1890,
							"linearizedBaseContracts": [
								1890,
								112,
								220,
								976
							],
							"name": "DEX",
							"nameLocation": "252:3:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DEX.Stack_Struct",
									"id": 993,
									"members": [
										{
											"constant": false,
											"id": 988,
											"mutability": "mutable",
											"name": "meme_amount",
											"nameLocation": "321:11:7",
											"nodeType": "VariableDeclaration",
											"scope": 993,
											"src": "313:19:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 987,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "313:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 990,
											"mutability": "mutable",
											"name": "eth_amount",
											"nameLocation": "350:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 993,
											"src": "342:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 989,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "342:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 992,
											"mutability": "mutable",
											"name": "time",
											"nameLocation": "378:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 993,
											"src": "370:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 991,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "370:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stack_Struct",
									"nameLocation": "290:12:7",
									"nodeType": "StructDefinition",
									"scope": 1890,
									"src": "283:106:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 996,
									"mutability": "mutable",
									"name": "meme",
									"nameLocation": "400:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 1890,
									"src": "394:10:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$807",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 995,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 994,
											"name": "ERC20",
											"nameLocations": [
												"394:5:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 807,
											"src": "394:5:7"
										},
										"referencedDeclaration": 807,
										"src": "394:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$807",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed",
									"id": 1004,
									"name": "Buy",
									"nameLocation": "417:3:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "437:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "421:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"indexed": false,
												"mutability": "mutable",
												"name": "Meme_amount",
												"nameLocation": "451:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "443:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"indexed": false,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "472:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "464:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "420:63:7"
									},
									"src": "411:73:7"
								},
								{
									"anonymous": false,
									"eventSelector": "ed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a",
									"id": 1012,
									"name": "Sell",
									"nameLocation": "495:4:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "516:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "500:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"indexed": false,
												"mutability": "mutable",
												"name": "Meme_amount",
												"nameLocation": "530:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "522:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"indexed": false,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "551:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "543:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:63:7"
									},
									"src": "489:74:7"
								},
								{
									"anonymous": false,
									"eventSelector": "5caad8f5613b6f1d592fc8c69d8f0999453740f0806c754f20cc92f3d4b2b1b6",
									"id": 1020,
									"name": "Stack",
									"nameLocation": "574:5:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "596:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "580:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"indexed": false,
												"mutability": "mutable",
												"name": "Meme_amount",
												"nameLocation": "610:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "602:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"indexed": false,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "631:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "623:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:63:7"
									},
									"src": "568:75:7"
								},
								{
									"anonymous": false,
									"eventSelector": "bb564df1f5d4ebb97b073adcab505c7796a37035ac5d14f51269660939c39cf4",
									"id": 1028,
									"name": "UnStack",
									"nameLocation": "654:7:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "687:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "671:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"indexed": false,
												"mutability": "mutable",
												"name": "Meme_amount",
												"nameLocation": "709:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "701:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "701:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"indexed": false,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "738:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "730:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "661:93:7"
									},
									"src": "648:107:7"
								},
								{
									"constant": false,
									"id": 1034,
									"mutability": "mutable",
									"name": "Stacked",
									"nameLocation": "805:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1890,
									"src": "761:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct DEX.Stack_Struct[])"
									},
									"typeName": {
										"id": 1033,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1029,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "769:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "761:34:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct DEX.Stack_Struct[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1031,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1030,
													"name": "Stack_Struct",
													"nameLocations": [
														"780:12:7"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 993,
													"src": "780:12:7"
												},
												"referencedDeclaration": 993,
												"src": "780:12:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stack_Struct_$993_storage_ptr",
													"typeString": "struct DEX.Stack_Struct"
												}
											},
											"id": 1032,
											"nodeType": "ArrayTypeName",
											"src": "780:14:7",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_ptr",
												"typeString": "struct DEX.Stack_Struct[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1038,
									"mutability": "mutable",
									"name": "dailyTax",
									"nameLocation": "856:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1890,
									"src": "819:45:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1037,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1035,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "827:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "819:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1036,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "838:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "9c74f05d",
									"id": 1040,
									"mutability": "mutable",
									"name": "stackingRate",
									"nameLocation": "886:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 1890,
									"src": "871:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1039,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "871:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1042,
									"mutability": "mutable",
									"name": "_k",
									"nameLocation": "922:2:7",
									"nodeType": "VariableDeclaration",
									"scope": 1890,
									"src": "905:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1041,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "905:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1044,
									"mutability": "mutable",
									"name": "_x",
									"nameLocation": "947:2:7",
									"nodeType": "VariableDeclaration",
									"scope": 1890,
									"src": "930:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1043,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "930:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1046,
									"mutability": "mutable",
									"name": "_y",
									"nameLocation": "972:2:7",
									"nodeType": "VariableDeclaration",
									"scope": 1890,
									"src": "955:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1045,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "955:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1049,
									"mutability": "mutable",
									"name": "precision",
									"nameLocation": "998:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1890,
									"src": "981:34:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1047,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "981:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130653138",
										"id": 1048,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1010:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										},
										"value": "10e18"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1057,
									"mutability": "mutable",
									"name": "taxRate",
									"nameLocation": "1039:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1890,
									"src": "1022:47:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1050,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1022:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1056,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "33",
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1050:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1052,
														"name": "precision",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "1054:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1050:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1054,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1049:15:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "3130",
											"id": 1055,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1067:2:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"src": "1049:20:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "1102:73:7",
										"statements": [
											{
												"expression": {
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1062,
														"name": "meme",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "1112:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$807",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1064,
																"name": "addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "1124:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1063,
															"name": "MEME",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1978,
															"src": "1119:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MEME_$1978_$",
																"typeString": "type(contract MEME)"
															}
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1119:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MEME_$1978",
															"typeString": "contract MEME"
														}
													},
													"src": "1112:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$807",
														"typeString": "contract ERC20"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "1112:17:7"
											}
										]
									},
									"id": 1069,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1096:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "1088:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:14:7"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:7"
									},
									"scope": 1890,
									"src": "1076:99:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "1215:25:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1074,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1225:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1225:8:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1076,
												"nodeType": "ExpressionStatement",
												"src": "1225:8:7"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1072,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1071,
												"name": "onlyOwner",
												"nameLocations": [
													"1205:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1205:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1205:9:7"
										}
									],
									"name": "pause",
									"nameLocation": "1190:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1195:2:7"
									},
									"returnParameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:0:7"
									},
									"scope": 1890,
									"src": "1181:59:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "1282:27:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1083,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "1292:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1292:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "ExpressionStatement",
												"src": "1292:10:7"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1087,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1081,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1080,
												"name": "onlyOwner",
												"nameLocations": [
													"1272:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1272:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1272:9:7"
										}
									],
									"name": "unpause",
									"nameLocation": "1255:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1262:2:7"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1282:0:7"
									},
									"scope": 1890,
									"src": "1246:63:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1096,
										"nodeType": "Block",
										"src": "1344:29:7",
										"statements": [
											{
												"expression": {
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1090,
														"name": "_k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "1354:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1091,
															"name": "_x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "1359:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1092,
															"name": "_y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "1364:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1359:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1354:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1095,
												"nodeType": "ExpressionStatement",
												"src": "1354:12:7"
											}
										]
									},
									"id": 1097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateK",
									"nameLocation": "1324:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1332:2:7"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1344:0:7"
									},
									"scope": 1890,
									"src": "1315:58:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1109,
										"nodeType": "Block",
										"src": "1444:43:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1104,
														"name": "Stacked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "1461:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
														}
													},
													"id": 1107,
													"indexExpression": {
														"expression": {
															"id": 1105,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1469:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1473:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1469:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1461:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage",
														"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 1103,
												"id": 1108,
												"nodeType": "Return",
												"src": "1454:26:7"
											}
										]
									},
									"functionSelector": "e8bca8b8",
									"id": 1110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStacks",
									"nameLocation": "1388:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1397:2:7"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1421:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DEX.Stack_Struct[]"
												},
												"typeName": {
													"baseType": {
														"id": 1100,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1099,
															"name": "Stack_Struct",
															"nameLocations": [
																"1421:12:7"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 993,
															"src": "1421:12:7"
														},
														"referencedDeclaration": 993,
														"src": "1421:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stack_Struct_$993_storage_ptr",
															"typeString": "struct DEX.Stack_Struct"
														}
													},
													"id": 1101,
													"nodeType": "ArrayTypeName",
													"src": "1421:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_ptr",
														"typeString": "struct DEX.Stack_Struct[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1420:23:7"
									},
									"scope": 1890,
									"src": "1379:108:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "1557:279:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1118,
																"name": "meme_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1112,
																"src": "1575:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1589:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1575:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e64206d6f7265204d454d45",
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1592:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a846ae426b95dae7130b856727d5256e6d2011b269481b9be8507efe8d0d207e",
																"typeString": "literal_string \"Send more MEME\""
															},
															"value": "Send more MEME"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a846ae426b95dae7130b856727d5256e6d2011b269481b9be8507efe8d0d207e",
																"typeString": "literal_string \"Send more MEME\""
															}
														],
														"id": 1117,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1567:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1567:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "1567:42:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1125,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1627:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1631:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1627:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1639:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1627:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e64206d6f726520455448",
															"id": 1129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1642:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_78b7994db21b321ba8531e19f302fa7a3e3fe17bff2fbaa020f4bcef4cd665f8",
																"typeString": "literal_string \"Send more ETH\""
															},
															"value": "Send more ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_78b7994db21b321ba8531e19f302fa7a3e3fe17bff2fbaa020f4bcef4cd665f8",
																"typeString": "literal_string \"Send more ETH\""
															}
														],
														"id": 1124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1619:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1619:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1131,
												"nodeType": "ExpressionStatement",
												"src": "1619:39:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1133,
																"name": "stackingRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1040,
																"src": "1689:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1137,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1134,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1706:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1135,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1710:5:7",
																				"memberName": "value",
																				"nodeType": "MemberAccess",
																				"src": "1706:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1136,
																				"name": "precision",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "1718:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1706:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1138,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1705:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1139,
																	"name": "meme_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "1731:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1705:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1689:53:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537461636b696e672052617465206e6f74206d6574",
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1756:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f3a7037a6f515e768f09bbd7b942e7ec8e428cdd68ed2428de9d02c6ace4c1a",
																"typeString": "literal_string \"Stacking Rate not met\""
															},
															"value": "Stacking Rate not met"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5f3a7037a6f515e768f09bbd7b942e7ec8e428cdd68ed2428de9d02c6ace4c1a",
																"typeString": "literal_string \"Stacking Rate not met\""
															}
														],
														"id": 1132,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1668:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1668:121:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "1668:121:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1146,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "1806:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1147,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1819:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1823:5:7",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1819:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1145,
														"name": "_stack",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "1799:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1799:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "1799:30:7"
											}
										]
									},
									"functionSelector": "dc9031c4",
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1115,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1114,
												"name": "whenNotPaused",
												"nameLocations": [
													"1544:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1544:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1544:13:7"
										}
									],
									"name": "stack",
									"nameLocation": "1502:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "meme_amount",
												"nameLocation": "1516:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "1508:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1508:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1507:21:7"
									},
									"returnParameters": {
										"id": 1116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1557:0:7"
									},
									"scope": 1890,
									"src": "1493:343:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "1894:91:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1160,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "1912:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1161,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1921:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1912:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e6465782063616e2774206265206c657373207468656e2030",
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1924:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3a2fd18a5236a01c14eabb339146d9a0f8ce497bbcbaf2cfc134e83398c0726e",
																"typeString": "literal_string \"Index can't be less then 0\""
															},
															"value": "Index can't be less then 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3a2fd18a5236a01c14eabb339146d9a0f8ce497bbcbaf2cfc134e83398c0726e",
																"typeString": "literal_string \"Index can't be less then 0\""
															}
														],
														"id": 1159,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1904:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1904:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "1904:49:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1167,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "1972:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1166,
														"name": "_unstack",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1353,
														"src": "1963:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1963:15:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "1963:15:7"
											}
										]
									},
									"functionSelector": "200061df",
									"id": 1171,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1157,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1156,
												"name": "whenNotPaused",
												"nameLocations": [
													"1881:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1881:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1881:13:7"
										}
									],
									"name": "unstack",
									"nameLocation": "1851:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1867:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "1859:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1859:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1858:15:7"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:0:7"
									},
									"scope": 1890,
									"src": "1842:143:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "2057:427:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1181,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2085:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2089:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2085:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1185,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2105:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DEX_$1890",
																		"typeString": "contract DEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DEX_$1890",
																		"typeString": "contract DEX"
																	}
																],
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2097:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1183,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2097:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2097:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1187,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "2112:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1178,
															"name": "meme",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "2067:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$807",
																"typeString": "contract ERC20"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2072:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 420,
														"src": "2067:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1189,
												"nodeType": "ExpressionStatement",
												"src": "2067:57:7"
											},
											{
												"expression": {
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1190,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "2134:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1191,
														"name": "meme_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "2140:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2134:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1193,
												"nodeType": "ExpressionStatement",
												"src": "2134:17:7"
											},
											{
												"expression": {
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1194,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "2161:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1195,
														"name": "eth_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "2167:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2161:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "2161:16:7"
											},
											{
												"assignments": [
													1200
												],
												"declarations": [
													{
														"constant": false,
														"id": 1200,
														"mutability": "mutable",
														"name": "ss",
														"nameLocation": "2208:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1237,
														"src": "2188:22:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
															"typeString": "struct DEX.Stack_Struct"
														},
														"typeName": {
															"id": 1199,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1198,
																"name": "Stack_Struct",
																"nameLocations": [
																	"2188:12:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 993,
																"src": "2188:12:7"
															},
															"referencedDeclaration": 993,
															"src": "2188:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stack_Struct_$993_storage_ptr",
																"typeString": "struct DEX.Stack_Struct"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1207,
												"initialValue": {
													"arguments": [
														{
															"id": 1202,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "2239:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1203,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1175,
															"src": "2264:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1204,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2288:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2294:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2288:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1201,
														"name": "Stack_Struct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "2213:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Stack_Struct_$993_storage_ptr_$",
															"typeString": "type(struct DEX.Stack_Struct storage pointer)"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2213:100:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
														"typeString": "struct DEX.Stack_Struct memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2188:125:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1213,
															"name": "ss",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "2348:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
																"typeString": "struct DEX.Stack_Struct memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
																"typeString": "struct DEX.Stack_Struct memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1208,
																"name": "Stacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "2323:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
																}
															},
															"id": 1211,
															"indexExpression": {
																"expression": {
																	"id": 1209,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2331:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2335:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2331:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2323:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage",
																"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2343:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2323:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_ptr_$_t_struct$_Stack_Struct_$993_storage_$returns$__$attached_to$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DEX.Stack_Struct storage ref[] storage pointer,struct DEX.Stack_Struct storage ref)"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2323:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "2323:28:7"
											},
											{
												"expression": {
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1216,
														"name": "stackingRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "2362:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1217,
																				"name": "_y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1046,
																				"src": "2379:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1218,
																				"name": "precision",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "2384:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2379:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1220,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2378:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1221,
																	"name": "_x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "2397:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2378:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1223,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2377:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2362:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1225,
												"nodeType": "ExpressionStatement",
												"src": "2362:38:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1226,
														"name": "_updateK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "2411:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2411:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1228,
												"nodeType": "ExpressionStatement",
												"src": "2411:10:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1230,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2442:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2446:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2442:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1232,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "2454:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1233,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2467:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2471:5:7",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2467:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1229,
														"name": "Stack",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "2436:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2436:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "EmitStatement",
												"src": "2431:46:7"
											}
										]
									},
									"id": 1238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_stack",
									"nameLocation": "2000:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "meme_amount",
												"nameLocation": "2015:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "2007:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2007:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "2036:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "2028:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2006:41:7"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:0:7"
									},
									"scope": 1890,
									"src": "1991:493:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1352,
										"nodeType": "Block",
										"src": "2532:972:7",
										"statements": [
											{
												"assignments": [
													1245
												],
												"declarations": [
													{
														"constant": false,
														"id": 1245,
														"mutability": "mutable",
														"name": "ss",
														"nameLocation": "2562:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1352,
														"src": "2542:22:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
															"typeString": "struct DEX.Stack_Struct"
														},
														"typeName": {
															"id": 1244,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1243,
																"name": "Stack_Struct",
																"nameLocations": [
																	"2542:12:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 993,
																"src": "2542:12:7"
															},
															"referencedDeclaration": 993,
															"src": "2542:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stack_Struct_$993_storage_ptr",
																"typeString": "struct DEX.Stack_Struct"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1252,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1246,
															"name": "Stacked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "2567:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
															}
														},
														"id": 1249,
														"indexExpression": {
															"expression": {
																"id": 1247,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2575:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2579:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2575:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2567:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage",
															"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
														}
													},
													"id": 1251,
													"indexExpression": {
														"id": 1250,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "2587:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2567:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stack_Struct_$993_storage",
														"typeString": "struct DEX.Stack_Struct storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2542:51:7"
											},
											{
												"assignments": [
													1254
												],
												"declarations": [
													{
														"constant": false,
														"id": 1254,
														"mutability": "mutable",
														"name": "tax",
														"nameLocation": "2612:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1352,
														"src": "2604:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1253,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2604:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1257,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1255,
														"name": "_distributeTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "2618:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2618:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2604:30:7"
											},
											{
												"assignments": [
													1259
												],
												"declarations": [
													{
														"constant": false,
														"id": 1259,
														"mutability": "mutable",
														"name": "meme_to_return",
														"nameLocation": "2653:14:7",
														"nodeType": "VariableDeclaration",
														"scope": 1352,
														"src": "2645:22:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1258,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2645:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1262,
												"initialValue": {
													"expression": {
														"id": 1260,
														"name": "ss",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1245,
														"src": "2670:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
															"typeString": "struct DEX.Stack_Struct memory"
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2673:11:7",
													"memberName": "meme_amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 988,
													"src": "2670:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2645:39:7"
											},
											{
												"assignments": [
													1264
												],
												"declarations": [
													{
														"constant": false,
														"id": 1264,
														"mutability": "mutable",
														"name": "eth_to_return",
														"nameLocation": "2702:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1352,
														"src": "2694:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1263,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2694:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1269,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1265,
															"name": "ss",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "2718:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
																"typeString": "struct DEX.Stack_Struct memory"
															}
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2721:10:7",
														"memberName": "eth_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 990,
														"src": "2718:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1267,
														"name": "tax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1254,
														"src": "2734:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2718:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2694:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1275,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2792:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_DEX_$1890",
																					"typeString": "contract DEX"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_DEX_$1890",
																					"typeString": "contract DEX"
																				}
																			],
																			"id": 1274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2784:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1273,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2784:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2784:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1271,
																		"name": "meme",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "2769:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$807",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 1272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2774:9:7",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 319,
																	"src": "2769:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2769:29:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1278,
																"name": "meme_to_return",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1259,
																"src": "2802:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2769:47:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536f7272792043757272656e746c79207468697320636f6e747261637420646f65736e27742068617665204d656d6520746f2072657475726e2c20436865636b206261636b20536f6f6e21",
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2830:77:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_420e5b55c2a1e24d83b9e05813ebfcbc021e37999e94a679003aeae679b03f0b",
																"typeString": "literal_string \"Sorry Currently this contract doesn't have Meme to return, Check back Soon!\""
															},
															"value": "Sorry Currently this contract doesn't have Meme to return, Check back Soon!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_420e5b55c2a1e24d83b9e05813ebfcbc021e37999e94a679003aeae679b03f0b",
																"typeString": "literal_string \"Sorry Currently this contract doesn't have Meme to return, Check back Soon!\""
															}
														],
														"id": 1270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2748:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2748:169:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "2748:169:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1286,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2956:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DEX_$1890",
																				"typeString": "contract DEX"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DEX_$1890",
																				"typeString": "contract DEX"
																			}
																		],
																		"id": 1285,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2948:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1284,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2948:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2948:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2962:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2948:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1289,
																"name": "eth_to_return",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1264,
																"src": "2973:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2948:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536f7272792043757272656e746c79207468697320636f6e747261637420646f65736e277420686176652045746820746f2072657475726e2c20436865636b206261636b20536f6f6e21",
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3000:76:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a553fec1f423c8cd4748b1aaff7e9000972fd303793b6f6abe7b83513bc6b9a",
																"typeString": "literal_string \"Sorry Currently this contract doesn't have Eth to return, Check back Soon!\""
															},
															"value": "Sorry Currently this contract doesn't have Eth to return, Check back Soon!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a553fec1f423c8cd4748b1aaff7e9000972fd303793b6f6abe7b83513bc6b9a",
																"typeString": "literal_string \"Sorry Currently this contract doesn't have Eth to return, Check back Soon!\""
															}
														],
														"id": 1283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2927:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2927:159:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1293,
												"nodeType": "ExpressionStatement",
												"src": "2927:159:7"
											},
											{
												"expression": {
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1294,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "3098:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1295,
														"name": "meme_to_return",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "3104:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "3098:20:7"
											},
											{
												"expression": {
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1298,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "3128:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1299,
														"name": "eth_to_return",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1264,
														"src": "3134:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3128:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1301,
												"nodeType": "ExpressionStatement",
												"src": "3128:19:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1305,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3172:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3176:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3172:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1307,
															"name": "meme_to_return",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "3184:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1302,
															"name": "meme",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "3158:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$807",
																"typeString": "contract ERC20"
															}
														},
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3163:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 344,
														"src": "3158:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3158:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "3158:41:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1316,
															"name": "eth_to_return",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "3238:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1312,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3217:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1313,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3221:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3217:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3209:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1310,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3209:8:7",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3209:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3229:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3209:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3209:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1318,
												"nodeType": "ExpressionStatement",
												"src": "3209:43:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1319,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "3267:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3273:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1336,
													"nodeType": "Block",
													"src": "3323:61:7",
													"statements": [
														{
															"expression": {
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1327,
																	"name": "stackingRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "3337:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1330,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1328,
																					"name": "_y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1046,
																					"src": "3353:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1329,
																					"name": "precision",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1049,
																					"src": "3358:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3353:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1331,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3352:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1332,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1044,
																		"src": "3371:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3352:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3337:36:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1335,
															"nodeType": "ExpressionStatement",
															"src": "3337:36:7"
														}
													]
												},
												"id": 1337,
												"nodeType": "IfStatement",
												"src": "3263:121:7",
												"trueBody": {
													"id": 1326,
													"nodeType": "Block",
													"src": "3276:41:7",
													"statements": [
														{
															"expression": {
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1322,
																	"name": "stackingRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "3290:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3305:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3290:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1325,
															"nodeType": "ExpressionStatement",
															"src": "3290:16:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1339,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "3405:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1338,
														"name": "_removeArr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "3394:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1341,
												"nodeType": "ExpressionStatement",
												"src": "3394:17:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1342,
														"name": "_updateK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1097,
														"src": "3422:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3422:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "3422:10:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1346,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3455:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3459:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3455:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1348,
															"name": "meme_to_return",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "3467:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1349,
															"name": "eth_to_return",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1264,
															"src": "3483:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1345,
														"name": "UnStack",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "3447:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3447:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1351,
												"nodeType": "EmitStatement",
												"src": "3442:55:7"
											}
										]
									},
									"id": 1353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unstack",
									"nameLocation": "2499:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2516:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "2508:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2508:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2507:15:7"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2532:0:7"
									},
									"scope": 1890,
									"src": "2490:1014:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1410,
										"nodeType": "Block",
										"src": "3554:268:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1359,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "3572:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1360,
																		"name": "Stacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1034,
																		"src": "3580:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
																		}
																	},
																	"id": 1363,
																	"indexExpression": {
																		"expression": {
																			"id": 1361,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3588:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3592:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3588:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3580:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage",
																		"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
																	}
																},
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3600:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3580:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3572:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e646578206f7574206f6620626f756e6473",
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
																"typeString": "literal_string \"Index out of bounds\""
															},
															"value": "Index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
																"typeString": "literal_string \"Index out of bounds\""
															}
														],
														"id": 1358,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3564:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3564:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1368,
												"nodeType": "ExpressionStatement",
												"src": "3564:66:7"
											},
											{
												"body": {
													"id": 1401,
													"nodeType": "Block",
													"src": "3705:76:7",
													"statements": [
														{
															"expression": {
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1385,
																			"name": "Stacked",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1034,
																			"src": "3719:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
																				"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
																			}
																		},
																		"id": 1389,
																		"indexExpression": {
																			"expression": {
																				"id": 1386,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3727:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3731:6:7",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3727:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3719:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage",
																			"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
																		}
																	},
																	"id": 1390,
																	"indexExpression": {
																		"id": 1388,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1370,
																		"src": "3739:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3719:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stack_Struct_$993_storage",
																		"typeString": "struct DEX.Stack_Struct storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1391,
																			"name": "Stacked",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1034,
																			"src": "3744:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
																				"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
																			}
																		},
																		"id": 1394,
																		"indexExpression": {
																			"expression": {
																				"id": 1392,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3752:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3756:6:7",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "3752:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3744:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage",
																			"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
																		}
																	},
																	"id": 1398,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1395,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1370,
																			"src": "3764:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3768:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3764:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3744:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stack_Struct_$993_storage",
																		"typeString": "struct DEX.Stack_Struct storage ref"
																	}
																},
																"src": "3719:51:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stack_Struct_$993_storage",
																	"typeString": "struct DEX.Stack_Struct storage ref"
																}
															},
															"id": 1400,
															"nodeType": "ExpressionStatement",
															"src": "3719:51:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1373,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "3664:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1374,
																	"name": "Stacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1034,
																	"src": "3668:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
																		"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
																	}
																},
																"id": 1377,
																"indexExpression": {
																	"expression": {
																		"id": 1375,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3676:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3680:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3676:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3668:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage",
																	"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3688:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3668:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3697:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3668:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3664:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1402,
												"initializationExpression": {
													"assignments": [
														1370
													],
													"declarations": [
														{
															"constant": false,
															"id": 1370,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3653:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1402,
															"src": "3645:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1369,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3645:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1372,
													"initialValue": {
														"id": 1371,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "3657:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3645:17:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3700:3:7",
														"subExpression": {
															"id": 1382,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "3700:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1384,
													"nodeType": "ExpressionStatement",
													"src": "3700:3:7"
												},
												"nodeType": "ForStatement",
												"src": "3640:141:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1403,
																"name": "Stacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "3790:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
																}
															},
															"id": 1406,
															"indexExpression": {
																"expression": {
																	"id": 1404,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3798:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3802:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3798:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3790:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage",
																"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
															}
														},
														"id": 1407,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3810:3:7",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "3790:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DEX.Stack_Struct storage ref[] storage pointer)"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3790:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "3790:25:7"
											}
										]
									},
									"id": 1411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeArr",
									"nameLocation": "3519:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "3538:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "3530:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3530:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3529:15:7"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3554:0:7"
									},
									"scope": 1890,
									"src": "3510:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1540,
										"nodeType": "Block",
										"src": "3886:972:7",
										"statements": [
											{
												"assignments": [
													1417
												],
												"declarations": [
													{
														"constant": false,
														"id": 1417,
														"mutability": "mutable",
														"name": "taxShare",
														"nameLocation": "3904:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1540,
														"src": "3896:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1416,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3896:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1419,
												"initialValue": {
													"hexValue": "30",
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3915:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3896:20:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1420,
															"name": "dailyTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "3930:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1425,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1421,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "3939:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3945:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "3939:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31",
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3957:6:7",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															},
															"src": "3939:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3930:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1426,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3967:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3930:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1537,
												"nodeType": "IfStatement",
												"src": "3926:901:7",
												"trueBody": {
													"id": 1536,
													"nodeType": "Block",
													"src": "3970:857:7",
													"statements": [
														{
															"assignments": [
																1432
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1432,
																	"mutability": "mutable",
																	"name": "stacks",
																	"nameLocation": "4007:6:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1536,
																	"src": "3984:29:7",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_ptr",
																		"typeString": "struct DEX.Stack_Struct[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1430,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1429,
																				"name": "Stack_Struct",
																				"nameLocations": [
																					"3984:12:7"
																				],
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 993,
																				"src": "3984:12:7"
																			},
																			"referencedDeclaration": 993,
																			"src": "3984:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stack_Struct_$993_storage_ptr",
																				"typeString": "struct DEX.Stack_Struct"
																			}
																		},
																		"id": 1431,
																		"nodeType": "ArrayTypeName",
																		"src": "3984:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_ptr",
																			"typeString": "struct DEX.Stack_Struct[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1437,
															"initialValue": {
																"baseExpression": {
																	"id": 1433,
																	"name": "Stacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1034,
																	"src": "4016:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
																		"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
																	}
																},
																"id": 1436,
																"indexExpression": {
																	"expression": {
																		"id": 1434,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4024:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4028:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4024:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4016:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage",
																	"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3984:51:7"
														},
														{
															"assignments": [
																1439
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1439,
																	"mutability": "mutable",
																	"name": "numStacks",
																	"nameLocation": "4057:9:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1536,
																	"src": "4049:17:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1438,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4049:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1442,
															"initialValue": {
																"expression": {
																	"id": 1440,
																	"name": "stacks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1432,
																	"src": "4069:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_ptr",
																		"typeString": "struct DEX.Stack_Struct storage ref[] storage pointer"
																	}
																},
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4076:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4069:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4049:33:7"
														},
														{
															"assignments": [
																1444
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1444,
																	"mutability": "mutable",
																	"name": "totalStackTime",
																	"nameLocation": "4104:14:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1536,
																	"src": "4096:22:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1443,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "4096:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1446,
															"initialValue": {
																"hexValue": "30",
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4121:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4096:26:7"
														},
														{
															"body": {
																"id": 1473,
																"nodeType": "Block",
																"src": "4177:130:7",
																"statements": [
																	{
																		"assignments": [
																			1459
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1459,
																				"mutability": "mutable",
																				"name": "ss",
																				"nameLocation": "4215:2:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1473,
																				"src": "4195:22:7",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
																					"typeString": "struct DEX.Stack_Struct"
																				},
																				"typeName": {
																					"id": 1458,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1457,
																						"name": "Stack_Struct",
																						"nameLocations": [
																							"4195:12:7"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 993,
																						"src": "4195:12:7"
																					},
																					"referencedDeclaration": 993,
																					"src": "4195:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stack_Struct_$993_storage_ptr",
																						"typeString": "struct DEX.Stack_Struct"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1463,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1460,
																				"name": "stacks",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1432,
																				"src": "4220:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_ptr",
																					"typeString": "struct DEX.Stack_Struct storage ref[] storage pointer"
																				}
																			},
																			"id": 1462,
																			"indexExpression": {
																				"id": 1461,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1448,
																				"src": "4227:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4220:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stack_Struct_$993_storage",
																				"typeString": "struct DEX.Stack_Struct storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4195:34:7"
																	},
																	{
																		"expression": {
																			"id": 1471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1464,
																				"name": "totalStackTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1444,
																				"src": "4247:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1469,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1465,
																								"name": "block",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967292,
																								"src": "4266:5:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_block",
																									"typeString": "block"
																								}
																							},
																							"id": 1466,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4272:9:7",
																							"memberName": "timestamp",
																							"nodeType": "MemberAccess",
																							"src": "4266:15:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"expression": {
																								"id": 1467,
																								"name": "ss",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1459,
																								"src": "4284:2:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
																									"typeString": "struct DEX.Stack_Struct memory"
																								}
																							},
																							"id": 1468,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4287:4:7",
																							"memberName": "time",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 992,
																							"src": "4284:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4266:25:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1470,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4265:27:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4247:45:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1472,
																		"nodeType": "ExpressionStatement",
																		"src": "4247:45:7"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1451,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1448,
																	"src": "4156:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1452,
																	"name": "numStacks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1439,
																	"src": "4161:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4156:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1474,
															"initializationExpression": {
																"assignments": [
																	1448
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1448,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "4149:1:7",
																		"nodeType": "VariableDeclaration",
																		"scope": 1474,
																		"src": "4141:9:7",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1447,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4141:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1450,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4153:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "4141:13:7"
															},
															"loopExpression": {
																"expression": {
																	"id": 1455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "4172:3:7",
																	"subExpression": {
																		"id": 1454,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1448,
																		"src": "4172:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1456,
																"nodeType": "ExpressionStatement",
																"src": "4172:3:7"
															},
															"nodeType": "ForStatement",
															"src": "4136:171:7"
														},
														{
															"body": {
																"id": 1534,
																"nodeType": "Block",
																"src": "4361:456:7",
																"statements": [
																	{
																		"assignments": [
																			1487
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1487,
																				"mutability": "mutable",
																				"name": "ss",
																				"nameLocation": "4399:2:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1534,
																				"src": "4379:22:7",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
																					"typeString": "struct DEX.Stack_Struct"
																				},
																				"typeName": {
																					"id": 1486,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1485,
																						"name": "Stack_Struct",
																						"nameLocations": [
																							"4379:12:7"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 993,
																						"src": "4379:12:7"
																					},
																					"referencedDeclaration": 993,
																					"src": "4379:12:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stack_Struct_$993_storage_ptr",
																						"typeString": "struct DEX.Stack_Struct"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1491,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1488,
																				"name": "stacks",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1432,
																				"src": "4404:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_ptr",
																					"typeString": "struct DEX.Stack_Struct storage ref[] storage pointer"
																				}
																			},
																			"id": 1490,
																			"indexExpression": {
																				"id": 1489,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1476,
																				"src": "4411:1:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4404:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stack_Struct_$993_storage",
																				"typeString": "struct DEX.Stack_Struct storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4379:34:7"
																	},
																	{
																		"assignments": [
																			1493
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1493,
																				"mutability": "mutable",
																				"name": "poolShare",
																				"nameLocation": "4439:9:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1534,
																				"src": "4431:17:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1492,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4431:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1502,
																		"initialValue": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1500,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1497,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"expression": {
																										"id": 1494,
																										"name": "ss",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1487,
																										"src": "4453:2:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
																											"typeString": "struct DEX.Stack_Struct memory"
																										}
																									},
																									"id": 1495,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "4456:11:7",
																									"memberName": "meme_amount",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 988,
																									"src": "4453:14:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"id": 1496,
																									"name": "precision",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1049,
																									"src": "4470:9:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "4453:26:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1498,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "4452:28:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"id": 1499,
																						"name": "_x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1044,
																						"src": "4483:2:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4452:33:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1501,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4451:35:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4431:55:7"
																	},
																	{
																		"assignments": [
																			1504
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1504,
																				"mutability": "mutable",
																				"name": "stackTime",
																				"nameLocation": "4512:9:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1534,
																				"src": "4504:17:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1503,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4504:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1511,
																		"initialValue": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1509,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1505,
																							"name": "block",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967292,
																							"src": "4525:5:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_block",
																								"typeString": "block"
																							}
																						},
																						"id": 1506,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4531:9:7",
																						"memberName": "timestamp",
																						"nodeType": "MemberAccess",
																						"src": "4525:15:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"expression": {
																							"id": 1507,
																							"name": "ss",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1487,
																							"src": "4543:2:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
																								"typeString": "struct DEX.Stack_Struct memory"
																							}
																						},
																						"id": 1508,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4546:4:7",
																						"memberName": "time",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 992,
																						"src": "4543:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "4525:25:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1510,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4524:27:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4504:47:7"
																	},
																	{
																		"assignments": [
																			1513
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1513,
																				"mutability": "mutable",
																				"name": "stackWeight",
																				"nameLocation": "4577:11:7",
																				"nodeType": "VariableDeclaration",
																				"scope": 1534,
																				"src": "4569:19:7",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1512,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4569:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1517,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1514,
																				"name": "stackTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1504,
																				"src": "4591:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1515,
																				"name": "totalStackTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1444,
																				"src": "4603:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4591:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4569:48:7"
																	},
																	{
																		"expression": {
																			"id": 1532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1518,
																				"name": "taxShare",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1417,
																				"src": "4635:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1531,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1528,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1526,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1519,
																									"name": "poolShare",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1493,
																									"src": "4668:9:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "*",
																								"rightExpression": {
																									"baseExpression": {
																										"id": 1520,
																										"name": "dailyTax",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1038,
																										"src": "4704:8:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1525,
																									"indexExpression": {
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 1524,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"expression": {
																												"id": 1521,
																												"name": "block",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 4294967292,
																												"src": "4713:5:7",
																												"typeDescriptions": {
																													"typeIdentifier": "t_magic_block",
																													"typeString": "block"
																												}
																											},
																											"id": 1522,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "4719:9:7",
																											"memberName": "timestamp",
																											"nodeType": "MemberAccess",
																											"src": "4713:15:7",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "/",
																										"rightExpression": {
																											"hexValue": "31",
																											"id": 1523,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "4731:6:7",
																											"subdenomination": "days",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_86400_by_1",
																												"typeString": "int_const 86400"
																											},
																											"value": "1"
																										},
																										"src": "4713:24:7",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "4704:34:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "4668:70:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"id": 1527,
																								"name": "stackWeight",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1513,
																								"src": "4765:11:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "4668:108:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1529,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "4667:110:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1530,
																					"name": "_k",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1042,
																					"src": "4800:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4667:135:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4635:167:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1533,
																		"nodeType": "ExpressionStatement",
																		"src": "4635:167:7"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1479,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1476,
																	"src": "4340:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1480,
																	"name": "numStacks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1439,
																	"src": "4345:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4340:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1535,
															"initializationExpression": {
																"assignments": [
																	1476
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1476,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "4333:1:7",
																		"nodeType": "VariableDeclaration",
																		"scope": 1535,
																		"src": "4325:9:7",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1475,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4325:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1478,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4337:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "4325:13:7"
															},
															"loopExpression": {
																"expression": {
																	"id": 1483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "4356:3:7",
																	"subExpression": {
																		"id": 1482,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1476,
																		"src": "4356:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1484,
																"nodeType": "ExpressionStatement",
																"src": "4356:3:7"
															},
															"nodeType": "ForStatement",
															"src": "4320:497:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1538,
													"name": "taxShare",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1417,
													"src": "4843:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1415,
												"id": 1539,
												"nodeType": "Return",
												"src": "4836:15:7"
											}
										]
									},
									"id": 1541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_distributeTax",
									"nameLocation": "3837:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3851:2:7"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "3877:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3877:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3876:9:7"
									},
									"scope": 1890,
									"src": "3828:1030:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1628,
										"nodeType": "Block",
										"src": "4951:562:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1551,
																"name": "_k",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1042,
																"src": "4969:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4974:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4969:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768206c6971756964697479",
															"id": 1554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4977:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
																"typeString": "literal_string \"Not enough liquidity\""
															},
															"value": "Not enough liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
																"typeString": "literal_string \"Not enough liquidity\""
															}
														],
														"id": 1550,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4961:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4961:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1556,
												"nodeType": "ExpressionStatement",
												"src": "4961:39:7"
											},
											{
												"assignments": [
													1558
												],
												"declarations": [
													{
														"constant": false,
														"id": 1558,
														"mutability": "mutable",
														"name": "dx",
														"nameLocation": "5018:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1628,
														"src": "5010:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1557,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5010:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1560,
												"initialValue": {
													"hexValue": "30",
													"id": 1559,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5023:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5010:14:7"
											},
											{
												"assignments": [
													1562
												],
												"declarations": [
													{
														"constant": false,
														"id": 1562,
														"mutability": "mutable",
														"name": "dy",
														"nameLocation": "5042:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1628,
														"src": "5034:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1561,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5034:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1564,
												"initialValue": {
													"hexValue": "30",
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5047:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5034:14:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1565,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "5062:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5068:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5062:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1585,
													"nodeType": "Block",
													"src": "5127:51:7",
													"statements": [
														{
															"expression": {
																"id": 1583,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1577,
																	"name": "dx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "5141:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1578,
																			"name": "_k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1042,
																			"src": "5146:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1579,
																			"name": "_y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1046,
																			"src": "5151:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5146:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1581,
																		"name": "meme_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1543,
																		"src": "5156:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5141:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1584,
															"nodeType": "ExpressionStatement",
															"src": "5141:26:7"
														}
													]
												},
												"id": 1586,
												"nodeType": "IfStatement",
												"src": "5058:120:7",
												"trueBody": {
													"id": 1576,
													"nodeType": "Block",
													"src": "5071:50:7",
													"statements": [
														{
															"expression": {
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1568,
																	"name": "dx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "5085:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1569,
																			"name": "_k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1042,
																			"src": "5090:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5095:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5090:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1572,
																		"name": "meme_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1543,
																		"src": "5099:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5090:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5085:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1575,
															"nodeType": "ExpressionStatement",
															"src": "5085:25:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1587,
														"name": "dx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1558,
														"src": "5191:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5197:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5191:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1603,
													"nodeType": "Block",
													"src": "5242:37:7",
													"statements": [
														{
															"expression": {
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1597,
																	"name": "dy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1562,
																	"src": "5256:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1598,
																		"name": "_k",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "5261:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1599,
																		"name": "dx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1558,
																		"src": "5266:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5261:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5256:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1602,
															"nodeType": "ExpressionStatement",
															"src": "5256:12:7"
														}
													]
												},
												"id": 1604,
												"nodeType": "IfStatement",
												"src": "5187:92:7",
												"trueBody": {
													"id": 1596,
													"nodeType": "Block",
													"src": "5200:36:7",
													"statements": [
														{
															"expression": {
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1590,
																	"name": "dy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1562,
																	"src": "5214:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1591,
																		"name": "_k",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "5219:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5224:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "5219:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5214:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1595,
															"nodeType": "ExpressionStatement",
															"src": "5214:11:7"
														}
													]
												}
											},
											{
												"assignments": [
													1606
												],
												"declarations": [
													{
														"constant": false,
														"id": 1606,
														"mutability": "mutable",
														"name": "eth_price_without_tax",
														"nameLocation": "5296:21:7",
														"nodeType": "VariableDeclaration",
														"scope": 1628,
														"src": "5288:29:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1605,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5288:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1610,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1607,
														"name": "dy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1562,
														"src": "5320:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1608,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "5325:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5320:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5288:39:7"
											},
											{
												"assignments": [
													1612
												],
												"declarations": [
													{
														"constant": false,
														"id": 1612,
														"mutability": "mutable",
														"name": "eth_tax",
														"nameLocation": "5345:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1628,
														"src": "5337:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1611,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5337:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1619,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1613,
																	"name": "eth_price_without_tax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1606,
																	"src": "5356:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1614,
																	"name": "taxRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "5380:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5356:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1616,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5355:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1617,
														"name": "precision",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "5391:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5355:45:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5337:63:7"
											},
											{
												"assignments": [
													1621
												],
												"declarations": [
													{
														"constant": false,
														"id": 1621,
														"mutability": "mutable",
														"name": "eth_price_with_tax",
														"nameLocation": "5419:18:7",
														"nodeType": "VariableDeclaration",
														"scope": 1628,
														"src": "5411:26:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1620,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5411:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1625,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1622,
														"name": "eth_price_without_tax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "5440:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1623,
														"name": "eth_tax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1612,
														"src": "5464:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5440:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5411:60:7"
											},
											{
												"expression": {
													"id": 1626,
													"name": "eth_price_with_tax",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1621,
													"src": "5488:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1549,
												"id": 1627,
												"nodeType": "Return",
												"src": "5481:25:7"
											}
										]
									},
									"functionSelector": "5c572ed0",
									"id": 1629,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1546,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1545,
												"name": "whenNotPaused",
												"nameLocations": [
													"4914:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "4914:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "4914:13:7"
										}
									],
									"name": "getMemePrice",
									"nameLocation": "4873:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "meme_amount",
												"nameLocation": "4894:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "4886:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4886:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4885:21:7"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "4942:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4942:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4941:9:7"
									},
									"scope": 1890,
									"src": "4864:649:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1716,
										"nodeType": "Block",
										"src": "5604:568:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1639,
																"name": "_k",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1042,
																"src": "5622:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5627:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5622:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768206c6971756964697479",
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5630:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
																"typeString": "literal_string \"Not enough liquidity\""
															},
															"value": "Not enough liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
																"typeString": "literal_string \"Not enough liquidity\""
															}
														],
														"id": 1638,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5614:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5614:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1644,
												"nodeType": "ExpressionStatement",
												"src": "5614:39:7"
											},
											{
												"assignments": [
													1646
												],
												"declarations": [
													{
														"constant": false,
														"id": 1646,
														"mutability": "mutable",
														"name": "dx",
														"nameLocation": "5671:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1716,
														"src": "5663:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1645,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5663:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1648,
												"initialValue": {
													"hexValue": "30",
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5676:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5663:14:7"
											},
											{
												"assignments": [
													1650
												],
												"declarations": [
													{
														"constant": false,
														"id": 1650,
														"mutability": "mutable",
														"name": "dy",
														"nameLocation": "5695:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1716,
														"src": "5687:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1649,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5687:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1652,
												"initialValue": {
													"hexValue": "30",
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5700:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5687:14:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1653,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "5715:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1654,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5721:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5715:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1673,
													"nodeType": "Block",
													"src": "5779:50:7",
													"statements": [
														{
															"expression": {
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1665,
																	"name": "dy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1650,
																	"src": "5793:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1668,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1666,
																			"name": "_k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1042,
																			"src": "5798:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1667,
																			"name": "_x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1044,
																			"src": "5803:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5798:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1669,
																		"name": "eth_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1631,
																		"src": "5808:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5798:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5793:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1672,
															"nodeType": "ExpressionStatement",
															"src": "5793:25:7"
														}
													]
												},
												"id": 1674,
												"nodeType": "IfStatement",
												"src": "5711:118:7",
												"trueBody": {
													"id": 1664,
													"nodeType": "Block",
													"src": "5724:49:7",
													"statements": [
														{
															"expression": {
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1656,
																	"name": "dy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1650,
																	"src": "5738:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1657,
																			"name": "_k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1042,
																			"src": "5743:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5748:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5743:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1660,
																		"name": "eth_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1631,
																		"src": "5752:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5743:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5738:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1663,
															"nodeType": "ExpressionStatement",
															"src": "5738:24:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1675,
														"name": "dy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "5842:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5848:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5842:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1691,
													"nodeType": "Block",
													"src": "5893:37:7",
													"statements": [
														{
															"expression": {
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1685,
																	"name": "dx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1646,
																	"src": "5907:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1686,
																		"name": "_k",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "5912:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1687,
																		"name": "dy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1650,
																		"src": "5917:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5912:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5907:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1690,
															"nodeType": "ExpressionStatement",
															"src": "5907:12:7"
														}
													]
												},
												"id": 1692,
												"nodeType": "IfStatement",
												"src": "5838:92:7",
												"trueBody": {
													"id": 1684,
													"nodeType": "Block",
													"src": "5851:36:7",
													"statements": [
														{
															"expression": {
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1678,
																	"name": "dx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1646,
																	"src": "5865:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1679,
																		"name": "_k",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "5870:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5875:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "5870:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5865:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1683,
															"nodeType": "ExpressionStatement",
															"src": "5865:11:7"
														}
													]
												}
											},
											{
												"assignments": [
													1694
												],
												"declarations": [
													{
														"constant": false,
														"id": 1694,
														"mutability": "mutable",
														"name": "meme_price_without_tax",
														"nameLocation": "5947:22:7",
														"nodeType": "VariableDeclaration",
														"scope": 1716,
														"src": "5939:30:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1693,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5939:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1698,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1695,
														"name": "dx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1646,
														"src": "5972:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1696,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "5977:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5972:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5939:40:7"
											},
											{
												"assignments": [
													1700
												],
												"declarations": [
													{
														"constant": false,
														"id": 1700,
														"mutability": "mutable",
														"name": "meme_tax",
														"nameLocation": "5997:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1716,
														"src": "5989:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1699,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5989:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1707,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1703,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1701,
																	"name": "meme_price_without_tax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1694,
																	"src": "6009:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1702,
																	"name": "taxRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "6034:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6009:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1704,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6008:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1705,
														"name": "precision",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "6045:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6008:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5989:65:7"
											},
											{
												"assignments": [
													1709
												],
												"declarations": [
													{
														"constant": false,
														"id": 1709,
														"mutability": "mutable",
														"name": "meme_price_with_tax",
														"nameLocation": "6073:19:7",
														"nodeType": "VariableDeclaration",
														"scope": 1716,
														"src": "6065:27:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1708,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6065:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1713,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1710,
														"name": "meme_price_without_tax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1694,
														"src": "6095:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1711,
														"name": "meme_tax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "6120:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6095:33:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6065:63:7"
											},
											{
												"expression": {
													"id": 1714,
													"name": "meme_price_with_tax",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1709,
													"src": "6146:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1637,
												"id": 1715,
												"nodeType": "Return",
												"src": "6139:26:7"
											}
										]
									},
									"functionSelector": "1a753fed",
									"id": 1717,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1634,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1633,
												"name": "whenNotPaused",
												"nameLocations": [
													"5567:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "5567:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5567:13:7"
										}
									],
									"name": "getETHPrice",
									"nameLocation": "5528:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "5548:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "5540:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5540:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5539:20:7"
									},
									"returnParameters": {
										"id": 1637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1717,
												"src": "5595:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5595:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5594:9:7"
									},
									"scope": 1890,
									"src": "5519:653:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1800,
										"nodeType": "Block",
										"src": "6241:515:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1725,
																"name": "meme_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1719,
																"src": "6259:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6273:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6259:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e6420536f6d65204d656d65",
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6276:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1e959a285e43b242539206d7aeb580dab96669d53083eb53a901cc352065b41",
																"typeString": "literal_string \"Send Some Meme\""
															},
															"value": "Send Some Meme"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1e959a285e43b242539206d7aeb580dab96669d53083eb53a901cc352065b41",
																"typeString": "literal_string \"Send Some Meme\""
															}
														],
														"id": 1724,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6251:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6251:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "6251:42:7"
											},
											{
												"assignments": [
													1732
												],
												"declarations": [
													{
														"constant": false,
														"id": 1732,
														"mutability": "mutable",
														"name": "meme_price",
														"nameLocation": "6311:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1800,
														"src": "6303:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1731,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6303:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1736,
												"initialValue": {
													"arguments": [
														{
															"id": 1734,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "6337:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1733,
														"name": "getMemePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1629,
														"src": "6324:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6324:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6303:46:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1738,
																"name": "meme_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1732,
																"src": "6367:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1739,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6381:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6385:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "6381:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6367:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e64204d6f726520455448",
															"id": 1742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6392:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f217f4029b3c2ea1dfaeee069952be2dcf9aed543c82bb251eb99c6e5f4f6f3d",
																"typeString": "literal_string \"Send More ETH\""
															},
															"value": "Send More ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f217f4029b3c2ea1dfaeee069952be2dcf9aed543c82bb251eb99c6e5f4f6f3d",
																"typeString": "literal_string \"Send More ETH\""
															}
														],
														"id": 1737,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6359:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6359:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1744,
												"nodeType": "ExpressionStatement",
												"src": "6359:49:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1748,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6433:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6437:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6433:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1750,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "6445:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1745,
															"name": "meme",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "6419:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$807",
																"typeString": "contract ERC20"
															}
														},
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6424:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 344,
														"src": "6419:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1752,
												"nodeType": "ExpressionStatement",
												"src": "6419:38:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1759,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6496:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6500:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "6496:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1761,
																"name": "meme_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1732,
																"src": "6508:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6496:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1755,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6475:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6479:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6475:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6467:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1753,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6467:8:7",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6467:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6487:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "6467:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6467:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1764,
												"nodeType": "ExpressionStatement",
												"src": "6467:52:7"
											},
											{
												"expression": {
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1765,
															"name": "dailyTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "6530:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1770,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1766,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "6539:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6545:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "6539:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31",
																"id": 1768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6557:6:7",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															},
															"src": "6539:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6530:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1771,
																		"name": "meme_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1719,
																		"src": "6581:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1774,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1772,
																					"name": "precision",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1049,
																					"src": "6596:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1773,
																					"name": "taxRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1057,
																					"src": "6608:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6596:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1775,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "6595:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6581:35:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1777,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "6580:37:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1778,
															"name": "precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "6632:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6580:61:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6530:111:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1781,
												"nodeType": "ExpressionStatement",
												"src": "6530:111:7"
											},
											{
												"expression": {
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1782,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "6652:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1783,
														"name": "meme_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1719,
														"src": "6658:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6652:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1785,
												"nodeType": "ExpressionStatement",
												"src": "6652:17:7"
											},
											{
												"expression": {
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1786,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "6679:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1787,
																	"name": "_k",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "6685:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1788,
																	"name": "_x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "6690:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6685:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1790,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6684:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6679:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1792,
												"nodeType": "ExpressionStatement",
												"src": "6679:14:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1794,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6713:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6717:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6713:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1796,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1719,
															"src": "6725:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1797,
															"name": "meme_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "6738:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1793,
														"name": "Buy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "6709:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6709:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1799,
												"nodeType": "EmitStatement",
												"src": "6704:45:7"
											}
										]
									},
									"functionSelector": "d96a094a",
									"id": 1801,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1722,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1721,
												"name": "whenNotPaused",
												"nameLocations": [
													"6219:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "6219:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6219:13:7"
										}
									],
									"name": "buy",
									"nameLocation": "6187:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "meme_amount",
												"nameLocation": "6199:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "6191:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6191:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6190:21:7"
									},
									"returnParameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6241:0:7"
									},
									"scope": 1890,
									"src": "6178:578:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1888,
										"nodeType": "Block",
										"src": "6816:540:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1809,
																"name": "eth_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "6834:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6847:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6834:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e6420536f6d6520455448",
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6850:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ca05f8819ffb49eed362c8482e2f89607806b624518b85b488890406834d3efe",
																"typeString": "literal_string \"Send Some ETH\""
															},
															"value": "Send Some ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ca05f8819ffb49eed362c8482e2f89607806b624518b85b488890406834d3efe",
																"typeString": "literal_string \"Send Some ETH\""
															}
														],
														"id": 1808,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6826:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6826:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1814,
												"nodeType": "ExpressionStatement",
												"src": "6826:40:7"
											},
											{
												"assignments": [
													1816
												],
												"declarations": [
													{
														"constant": false,
														"id": 1816,
														"mutability": "mutable",
														"name": "eth_price",
														"nameLocation": "6884:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1888,
														"src": "6876:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1815,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6876:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1820,
												"initialValue": {
													"arguments": [
														{
															"id": 1818,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "6908:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1817,
														"name": "getETHPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1717,
														"src": "6896:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6896:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6876:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1822,
																"name": "eth_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1816,
																"src": "6938:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1825,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6966:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6970:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6966:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1823,
																		"name": "meme",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "6951:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$807",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 1824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6956:9:7",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 319,
																	"src": "6951:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6951:26:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6938:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206861766520656e6f756768206d656d65",
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6979:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b99b2e78c78f1318a3232374cbc7b00c7eadb27370706844a7052723adaf5ddc",
																"typeString": "literal_string \"You don't have enough meme\""
															},
															"value": "You don't have enough meme"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b99b2e78c78f1318a3232374cbc7b00c7eadb27370706844a7052723adaf5ddc",
																"typeString": "literal_string \"You don't have enough meme\""
															}
														],
														"id": 1821,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6930:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6930:78:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1831,
												"nodeType": "ExpressionStatement",
												"src": "6930:78:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1835,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7036:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7036:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1839,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7056:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DEX_$1890",
																		"typeString": "contract DEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DEX_$1890",
																		"typeString": "contract DEX"
																	}
																],
																"id": 1838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7048:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1837,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7048:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7048:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1841,
															"name": "eth_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "7063:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1832,
															"name": "meme",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "7018:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$807",
																"typeString": "contract ERC20"
															}
														},
														"id": 1834,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7023:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 420,
														"src": "7018:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7018:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1843,
												"nodeType": "ExpressionStatement",
												"src": "7018:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1850,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "7112:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1846,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7091:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7095:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7091:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1845,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7083:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1844,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7083:8:7",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7083:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1849,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7103:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "7083:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1852,
												"nodeType": "ExpressionStatement",
												"src": "7083:40:7"
											},
											{
												"expression": {
													"id": 1868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1853,
															"name": "dailyTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "7134:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1858,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1854,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "7143:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7149:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "7143:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31",
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7161:6:7",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															},
															"src": "7143:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7134:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1859,
																		"name": "eth_price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1816,
																		"src": "7185:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1862,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1860,
																					"name": "precision",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1049,
																					"src": "7198:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 1861,
																					"name": "taxRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1057,
																					"src": "7210:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7198:19:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1863,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "7197:21:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:33:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1865,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7184:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1866,
															"name": "precision",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "7234:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7184:59:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7134:109:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1869,
												"nodeType": "ExpressionStatement",
												"src": "7134:109:7"
											},
											{
												"expression": {
													"id": 1872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1870,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "7254:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1871,
														"name": "eth_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "7260:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7254:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1873,
												"nodeType": "ExpressionStatement",
												"src": "7254:16:7"
											},
											{
												"expression": {
													"id": 1879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1874,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "7280:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1875,
																	"name": "_k",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "7286:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1876,
																	"name": "_y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1046,
																	"src": "7291:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7286:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1878,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7285:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7280:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1880,
												"nodeType": "ExpressionStatement",
												"src": "7280:14:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1882,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7315:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7319:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7315:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1884,
															"name": "eth_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "7327:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1885,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "7338:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1881,
														"name": "Sell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "7310:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7310:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1887,
												"nodeType": "EmitStatement",
												"src": "7305:44:7"
											}
										]
									},
									"functionSelector": "e4849b32",
									"id": 1889,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1806,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1805,
												"name": "whenNotPaused",
												"nameLocations": [
													"6803:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "6803:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6803:13:7"
										}
									],
									"name": "sell",
									"nameLocation": "6771:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "6784:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "6776:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6776:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6775:20:7"
									},
									"returnParameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6816:0:7"
									},
									"scope": 1890,
									"src": "6762:594:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1891,
							"src": "243:7548:7",
							"usedErrors": [],
							"usedEvents": [
								13,
								123,
								128,
								1004,
								1012,
								1020,
								1028
							]
						}
					],
					"src": "32:11226:7"
				},
				"id": 7
			},
			"MEME.sol": {
				"ast": {
					"absolutePath": "MEME.sol",
					"exportedSymbols": {
						"Context": [
							976
						],
						"ERC20": [
							807
						],
						"ERC20Burnable": [
							929
						],
						"IERC20": [
							885
						],
						"IERC20Metadata": [
							954
						],
						"MEME": [
							1978
						],
						"Ownable": [
							112
						],
						"Pausable": [
							220
						]
					},
					"id": 1979,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1892,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1893,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1979,
							"sourceUnit": 808,
							"src": "60:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1894,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1979,
							"sourceUnit": 930,
							"src": "117:74:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1895,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1979,
							"sourceUnit": 221,
							"src": "193:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1896,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1979,
							"sourceUnit": 113,
							"src": "250:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1897,
										"name": "ERC20",
										"nameLocations": [
											"323:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 807,
										"src": "323:5:8"
									},
									"id": 1898,
									"nodeType": "InheritanceSpecifier",
									"src": "323:5:8"
								},
								{
									"baseName": {
										"id": 1899,
										"name": "ERC20Burnable",
										"nameLocations": [
											"330:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 929,
										"src": "330:13:8"
									},
									"id": 1900,
									"nodeType": "InheritanceSpecifier",
									"src": "330:13:8"
								},
								{
									"baseName": {
										"id": 1901,
										"name": "Pausable",
										"nameLocations": [
											"345:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 220,
										"src": "345:8:8"
									},
									"id": 1902,
									"nodeType": "InheritanceSpecifier",
									"src": "345:8:8"
								},
								{
									"baseName": {
										"id": 1903,
										"name": "Ownable",
										"nameLocations": [
											"355:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "355:7:8"
									},
									"id": 1904,
									"nodeType": "InheritanceSpecifier",
									"src": "355:7:8"
								}
							],
							"canonicalName": "MEME",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1978,
							"linearizedBaseContracts": [
								1978,
								112,
								220,
								929,
								807,
								954,
								885,
								976
							],
							"name": "MEME",
							"nameLocation": "315:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1922,
										"nodeType": "Block",
										"src": "406:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1912,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "423:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "427:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "423:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1919,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3530303030",
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "435:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50000_by_1",
																	"typeString": "int_const 50000"
																},
																"value": "50000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "443:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1916,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "449:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 1917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "449:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "443:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "435:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1911,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "417:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "417:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1921,
												"nodeType": "ExpressionStatement",
												"src": "417:43:8"
											}
										]
									},
									"id": 1923,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d454d45",
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "390:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_aa45935facc8cbd8c55ef59eb2083d70572611d9daaaa3b31e42daad65f7f5c8",
														"typeString": "literal_string \"MEME\""
													},
													"value": "MEME"
												},
												{
													"hexValue": "4d454d45",
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "398:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_aa45935facc8cbd8c55ef59eb2083d70572611d9daaaa3b31e42daad65f7f5c8",
														"typeString": "literal_string \"MEME\""
													},
													"value": "MEME"
												}
											],
											"id": 1909,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1906,
												"name": "ERC20",
												"nameLocations": [
													"384:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 807,
												"src": "384:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "384:21:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:2:8"
									},
									"returnParameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "406:0:8"
									},
									"scope": 1978,
									"src": "370:98:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1931,
										"nodeType": "Block",
										"src": "510:27:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1928,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "521:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "521:8:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1930,
												"nodeType": "ExpressionStatement",
												"src": "521:8:8"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1932,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1926,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1925,
												"name": "onlyOwner",
												"nameLocations": [
													"500:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "500:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "500:9:8"
										}
									],
									"name": "pause",
									"nameLocation": "485:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "490:2:8"
									},
									"returnParameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "510:0:8"
									},
									"scope": 1978,
									"src": "476:61:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1940,
										"nodeType": "Block",
										"src": "581:29:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1937,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "592:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "592:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1939,
												"nodeType": "ExpressionStatement",
												"src": "592:10:8"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1941,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1935,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1934,
												"name": "onlyOwner",
												"nameLocations": [
													"571:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "571:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "571:9:8"
										}
									],
									"name": "unpause",
									"nameLocation": "554:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "561:2:8"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "581:0:8"
									},
									"scope": 1978,
									"src": "545:65:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1955,
										"nodeType": "Block",
										"src": "677:36:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1951,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1943,
															"src": "694:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1952,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1945,
															"src": "698:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1950,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "688:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "688:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1954,
												"nodeType": "ExpressionStatement",
												"src": "688:17:8"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1956,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1948,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1947,
												"name": "onlyOwner",
												"nameLocations": [
													"667:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "667:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "667:9:8"
										}
									],
									"name": "mint",
									"nameLocation": "627:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "640:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "632:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "652:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "644:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:28:8"
									},
									"returnParameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "677:0:8"
									},
									"scope": 1978,
									"src": "618:95:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										795
									],
									"body": {
										"id": 1976,
										"nodeType": "Block",
										"src": "857:63:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1971,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1958,
															"src": "895:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1972,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1960,
															"src": "901:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1973,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "905:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1968,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "868:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MEME_$1978_$",
																"typeString": "type(contract super MEME)"
															}
														},
														"id": 1970,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "874:20:8",
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 795,
														"src": "868:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "868:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1975,
												"nodeType": "ExpressionStatement",
												"src": "868:44:8"
											}
										]
									},
									"id": 1977,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1965,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1964,
												"name": "whenNotPaused",
												"nameLocations": [
													"820:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "820:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "820:13:8"
										}
									],
									"name": "_beforeTokenTransfer",
									"nameLocation": "730:20:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1966,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "843:8:8"
									},
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "759:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "751:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "773:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "765:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "785:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1977,
												"src": "777:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "750:42:8"
									},
									"returnParameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "857:0:8"
									},
									"scope": 1978,
									"src": "721:199:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1979,
							"src": "306:617:8",
							"usedErrors": [],
							"usedEvents": [
								13,
								123,
								128,
								819,
								828
							]
						}
					],
					"src": "33:892:8"
				},
				"id": 8
			}
		}
	}
}
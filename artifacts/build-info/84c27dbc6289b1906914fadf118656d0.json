{
	"id": "84c27dbc6289b1906914fadf118656d0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"DEX.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"MEME.sol\";\n\ncontract DEX is Pausable, Ownable {\n    struct Stack_Struct {\n        uint256 meme_amount;\n        uint256 eth_amount;\n        uint256 time;\n    }\n    ERC20 meme;\n\n    event Buy(address indexed from, uint256 Meme_amount, uint256 eth_amount);\n    event Sell(address indexed from, uint256 Meme_amount, uint256 eth_amount);\n    event Stack(address indexed from, uint256 Meme_amount, uint256 eth_amount);\n    event UnStack(\n        address indexed from,\n        uint256 Meme_amount,\n        uint256 eth_amount\n    );\n\n    mapping(address => Stack_Struct[]) internal Stacked;\n\n    mapping(uint256 => uint256) public dailyTax;\n\n    uint256 public stackingRate;\n\n    uint256 internal _k;\n    uint256 internal _x;\n    uint256 internal _y;\n\n    uint256 internal precision = 10e18;\n\n    uint256 internal taxRate = (3 * precision) / 1000;\n\n    constructor(address addr, uint256 _taxrate) {\n        meme = MEME(addr);\n        taxRate = (_taxrate * precision) / 1000;\n        //_stack(10000000, 10000000);\n    }\n\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    function _updateK() internal {\n        _k = _x * _y;\n    }\n\n    function getStacks() public view returns (Stack_Struct[] memory) {\n        return Stacked[msg.sender];\n    }\n\n    function stack(uint256 meme_amount) public payable whenNotPaused {\n        require(meme_amount > 0, \"Send more MEME\");\n        require(msg.value > 0, \"Send more ETH\");\n        require(\n            stackingRate <= (msg.value * precision) / meme_amount,\n            \"Stacking Rate not met\"\n        );\n        _stack(meme_amount, msg.value);\n    }\n\n    function unstack(uint256 index) public whenNotPaused {\n        // require(index >= 0, \"Index can't be less then 0\");\n        _unstack(index);\n    }\n\n    function _stack(uint256 meme_amount, uint256 eth_amount) internal {\n        meme.transferFrom(msg.sender, address(this), meme_amount);\n        _x += meme_amount;\n        _y += eth_amount;\n\n        Stack_Struct memory ss = Stack_Struct(\n            meme_amount,\n            eth_amount,\n            block.timestamp\n        );\n        Stacked[msg.sender].push(ss);\n\n        stackingRate = ((_y * precision) / _x);\n\n        originalX = _x;\n\n        _updateK();\n        emit Stack(msg.sender, meme_amount, msg.value);\n    }\n\n    uint256 internal originalX = _x;\n\n    function _unstack(uint256 index) internal {\n        require(index < Stacked[msg.sender].length, \"Index out of bounds\");\n\n        Stack_Struct memory ss = Stacked[msg.sender][index];\n\n        uint256 tax = _distributeTax(index);\n        uint256 meme_to_return = ss.meme_amount;\n        uint256 eth_to_return = ss.eth_amount + tax;\n        originalX = _x;\n\n        require(\n            meme_to_return <= meme.balanceOf(address(this)),\n            \"Sorry Currently this contract doesn't have Meme to return, Check back Soon!\"\n        );\n        require(\n            eth_to_return <= address(this).balance,\n            \"Sorry Currently this contract doesn't have Eth to return, Check back Soon!\"\n        );\n        meme.transfer(msg.sender, meme_to_return);\n        payable(msg.sender).transfer(eth_to_return);\n\n        _x = (_x >= meme_to_return) ? (_x - meme_to_return) : 0;\n        _y = (_y >= eth_to_return) ? (_y - eth_to_return) : 0;\n\n        if (_x == 0) {\n            stackingRate = 0;\n        } else {\n            stackingRate = (_y * precision) / _x;\n        }\n\n        _removeArr(index);\n\n        _updateK();\n        emit UnStack(msg.sender, meme_to_return, eth_to_return);\n    }\n\n    function _removeArr(uint256 index) internal {\n        require(index < Stacked[msg.sender].length, \"Index out of bounds\");\n        for (uint256 i = index; i < Stacked[msg.sender].length - 1; i++) {\n            Stacked[msg.sender][i] = Stacked[msg.sender][i + 1];\n        }\n        Stacked[msg.sender].pop();\n    }\n\n    // function _distributeTax() internal view returns (uint256) {\n    //     uint256 taxShare = 0;\n    //     if (dailyTax[block.timestamp / 1 days] > 0) {\n    //         Stack_Struct[] storage stacks = Stacked[msg.sender];\n    //         uint256 numStacks = stacks.length;\n    //         uint256 totalStackTime = 0;\n    //         for (uint256 i = 0; i < numStacks; i++) {\n    //             Stack_Struct storage ss = stacks[i];\n    //             totalStackTime += (block.timestamp - ss.time);\n    //         }\n    //         for (uint256 i = 0; i < numStacks; i++) {\n    //             Stack_Struct storage ss = stacks[i];\n    //             uint256 poolShare = ((ss.meme_amount * precision) / _x);\n    //             uint256 stackTime = (block.timestamp - ss.time);\n    //             uint256 stackWeight = (totalStackTime + stackTime) /\n    //                 totalStackTime;\n    //             taxShare +=\n    //                 (poolShare *\n    //                     dailyTax[block.timestamp / 1 days] *\n    //                     stackWeight) /\n    //                 _k;\n    //             // taxShare += (poolShare * dailyTax[block.timestamp / 1 seconds]) / _k;\n    //         }\n    //     }\n    //     return taxShare;\n    // }\n\n    function _distributeTax(uint256 poolIndex) public view returns (uint256) {\n        uint256 taxShare = 0;\n        if (dailyTax[block.timestamp / 1 days] > 0) {\n            Stack_Struct[] memory stacks = Stacked[msg.sender];\n            require(poolIndex < stacks.length, \"Invalid pool index\");\n\n            Stack_Struct memory ss = stacks[poolIndex];\n            uint256 poolShare = (ss.meme_amount * precision) / originalX;\n\n            uint256 creationTime = ss.time;\n            uint256 currentDay = block.timestamp / 1 days;\n\n            for (\n                uint256 day = creationTime / 1 days;\n                day <= currentDay;\n                day++\n            ) {\n                taxShare += (poolShare * dailyTax[day]) / precision;\n            }\n        }\n        return taxShare;\n    }\n\n    // function _distributeTax() public view returns (uint256) {\n    //     uint256 taxShare = 0;\n    //     if (dailyTax[block.timestamp / 1 days] > 0) {\n    //         Stack_Struct[] storage stacks = Stacked[msg.sender];\n    //         uint256 numStacks = stacks.length;\n\n    //         // Step 2: Calculate the tax share for each stack and accumulate the total tax share\n    //         for (uint256 i = 0; i < numStacks; i++) {\n    //             Stack_Struct storage ss = stacks[i];\n    //             uint256 poolShare = (ss.meme_amount * precision) / _x;\n    //             uint256 stackTime = block.timestamp - ss.time;\n    //             // uint256 stackWeight = ((stackTime + totalStackTime) * precision) /\n    //             //     totalStackTime;\n    //             taxShare +=\n    //                 (ss.meme_amount * dailyTax[block.timestamp / 1 days]) /\n    //                 _k;\n    //         }\n    //     }\n    //     return taxShare;\n    // }\n\n    function getMemePrice(uint256 meme_amount)\n        public\n        view\n        whenNotPaused\n        returns (uint256)\n    {\n        require(_k > 0, \"Not enough liquidity\");\n        uint256 dx = 0;\n        uint256 dy = 0;\n        if (_y == 0) {\n            dx = _k / 1 - meme_amount;\n        } else {\n            dx = _k / _y - meme_amount;\n        }\n        if (dx == 0) {\n            dy = _k / 1;\n        } else {\n            dy = _k / dx;\n        }\n        uint256 eth_price_without_tax = dy - _y;\n        uint256 eth_tax = (eth_price_without_tax * taxRate) / precision;\n\n        uint256 eth_price_with_tax = eth_price_without_tax + eth_tax;\n        return eth_price_with_tax + 1;\n    }\n\n    function calculateTax(uint256 meme_amount) internal view returns (uint256) {\n        require(_k > 0, \"Not enough liquidity\");\n        uint256 dx = 0;\n        uint256 dy = 0;\n        if (_y == 0) {\n            dx = _k / 1 - meme_amount;\n        } else {\n            dx = _k / _y - meme_amount;\n        }\n        if (dx == 0) {\n            dy = _k / 1;\n        } else {\n            dy = _k / dx;\n        }\n        uint256 eth_price_without_tax = dy - _y;\n        uint256 eth_tax = (eth_price_without_tax * taxRate) / precision;\n\n        return eth_tax;\n    }\n\n    function getETHPrice(uint256 eth_amount)\n        public\n        view\n        whenNotPaused\n        returns (uint256)\n    {\n        require(_k > 0, \"Not enough liquidity\");\n        uint256 dx = 0;\n        uint256 dy = 0;\n        if (_x == 0) {\n            dy = _k / 1 - eth_amount;\n        } else {\n            dy = _k / _x - eth_amount;\n        }\n        if (dy == 0) {\n            dx = _k / 1;\n        } else {\n            dx = _k / dy;\n        }\n        uint256 meme_price_without_tax = dx - _x;\n        uint256 meme_tax = (meme_price_without_tax * taxRate) / precision;\n\n        // uint256 meme_price_with_tax = meme_price_without_tax - meme_tax;\n        uint256 meme_price_with_tax = meme_price_without_tax;\n\n        return meme_price_with_tax + 1;\n    }\n\n    receive() payable external{\n\n    }\n    \n    function buy(\n        uint256 meme_amount,\n        address ownerAddress,\n        uint256 msgValue\n    ) public payable whenNotPaused {\n        require(meme_amount > 0, \"Send Some Meme\");\n        uint256 meme_price = getMemePrice(meme_amount);\n        require(meme_price <= msgValue, \"Send More ETH\");\n\n        meme.transfer(ownerAddress, meme_amount);\n        payable(ownerAddress).transfer(msgValue - meme_price);\n\n        dailyTax[block.timestamp / 1 days] += calculateTax(meme_amount);\n\n        _x -= meme_amount;\n        _y = (_k / _x);\n\n        emit Buy(ownerAddress, meme_amount, meme_price);\n    }\n\n    function buy(uint256 meme_amount) public payable whenNotPaused {\n        require(meme_amount > 0, \"Send Some Meme\");\n        uint256 meme_price = getMemePrice(meme_amount);\n        require(meme_price <= msg.value, \"Send More ETH\");\n\n        meme.transfer(msg.sender, meme_amount);\n        payable(msg.sender).transfer(msg.value - meme_price);\n\n        dailyTax[block.timestamp / 1 days] += calculateTax(meme_amount);\n\n        _x -= meme_amount;\n        _y = (_k / _x);\n\n        emit Buy(msg.sender, meme_amount, meme_price);\n    }\n\n    function sell(uint256 eth_amount, address ownerAddress)\n        public\n        whenNotPaused\n    {\n        require(eth_amount > 0, \"Send Some ETH\");\n        uint256 eth_price = getETHPrice(eth_amount);\n\n        require(\n            eth_price <= meme.balanceOf(ownerAddress),\n            \"You don't have enough meme\"\n        );\n        meme.transferFrom(ownerAddress, address(this), eth_price);\n        payable(ownerAddress).transfer(eth_amount);\n\n        // dailyTax[block.timestamp / 1 days] +=\n        //     (eth_price * (precision + taxRate)) /\n        //     precision;\n\n        _y -= eth_amount;\n        _x = (_k / _y);\n\n        emit Sell(ownerAddress, eth_price, eth_amount);\n    }\n\n    function sell(uint256 eth_amount) public whenNotPaused {\n        require(eth_amount > 0, \"Send Some ETH\");\n        uint256 eth_price = getETHPrice(eth_amount);\n\n        require(\n            eth_price <= meme.balanceOf(msg.sender),\n            \"You don't have enough meme\"\n        );\n        meme.transferFrom(msg.sender, address(this), eth_price);\n        payable(msg.sender).transfer(eth_amount);\n\n        // dailyTax[block.timestamp / 1 days] +=\n        //     (eth_price * (precision + taxRate)) /\n        //     precision;\n\n        _y -= eth_amount;\n        _x = (_k / _y);\n\n        emit Sell(msg.sender, eth_price, eth_amount);\n    }\n\n    // function secondsToDays(uint256 second) public pure returns (uint256) {\n    //     return second / 1 days;\n    // }\n\n    // function check(uint256 index) public view returns (uint256) {\n    //     Stack_Struct memory ss = Stacked[msg.sender][index];\n\n    //     uint256 timestamp = block.timestamp - ss.time;\n    //     uint256 poolShare = ((ss.meme_amount * taxRate * timestamp) / _x);\n\n    //     return poolShare;\n    // }\n}\n\n// pragma solidity ^0.8.9;\n\n// import \"@openzeppelin/contracts/security/Pausable.sol\";\n// import \"@openzeppelin/contracts/access/Ownable.sol\";\n// import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n// import \"MEME.sol\";\n\n// struct Stack_Struct {\n//     uint256 meme_amount;\n//     uint256 eth_amount;\n//     uint256 time;\n//     uint256 stackingRate;\n// }\n\n// contract DEX is Pausable, Ownable {\n//     ERC20 meme;\n\n//     mapping(address => Stack_Struct) public Stacked;\n\n//     uint256 public stackingRate;\n\n//     uint256 public _k;\n//     uint256 public _x;\n//     uint256 public _y;\n\n//     uint256 public precision = 10**18;\n\n//     constructor(address addr) {\n//         meme = MEME(addr);\n\n//         //_stack(10000000, 10000000);\n//     }\n\n//     function pause() public onlyOwner {\n//         _pause();\n//     }\n\n//     function unpause() public onlyOwner {\n//         _unpause();\n//     }\n\n//     function _updateK() internal {\n//         _k = _x * _y;\n//     }\n\n//     function stack(uint256 meme_amount) public payable {\n//         require(0 < msg.value , \"Eth can't be 0\");\n//         require(0 < meme_amount , \"Meme can't be 0\");\n//         // if(Stacked[msg.sender].stackingRate != 0){\n//         // }\n//         require(stackingRate <= ((msg.value * precision) / meme_amount));\n//         _stack(meme_amount);\n//     }\n\n//     function unstack(uint256 meme_amount) public {\n//         require(0 < meme_amount , \"Meme can't be 0\");\n\n//         uint256 eth_amount2 = ((Stacked[msg.sender].stackingRate * meme_amount) / precision);\n//         _unstack(meme_amount, eth_amount2, msg.sender);\n//     }\n\n//     function _stack(uint256 meme_amount) internal {\n//         meme.transferFrom(msg.sender, address(this), meme_amount);\n\n//         _x += meme_amount;\n//         _y += msg.value;\n\n//         Stacked[msg.sender].meme_amount += meme_amount;\n//         Stacked[msg.sender].eth_amount += msg.value;\n//         Stacked[msg.sender].time = block.timestamp;\n\n//         Stacked[msg.sender].stackingRate = ((_y * precision) / _x);\n//         stackingRate = Stacked[msg.sender].stackingRate;\n\n//         _updateK();\n//     }\n\n//     function _unstack(\n//         uint256 meme_amount,\n//         uint256 eth_amount,\n//         address to\n//     ) public {\n//         _x -= meme_amount;\n//         _y -= eth_amount;\n\n//         Stacked[to].meme_amount -= meme_amount;\n//         Stacked[to].eth_amount -= eth_amount;\n//         Stacked[to].time = block.timestamp;\n\n//         meme.transfer(to, meme_amount);\n//         payable(to).transfer(eth_amount);\n\n//         if (_x == 0) {\n//             Stacked[msg.sender].stackingRate = 0;\n//             stackingRate = 0;\n//         } else {\n//             Stacked[msg.sender].stackingRate = (_y * precision) / _x;\n//             stackingRate = Stacked[msg.sender].stackingRate;\n//         }\n\n//         _updateK();\n//     }\n\n//     // function _buy(uint128 meme_amount) public payable {\n//     //     uint dx = meme_amount;\n//     //     uint dy = _y;\n\n//     //     _x += dx;\n//     //     _y = _k / _x;\n\n//     //     dy -= _y;\n\n//     //     memeBalance += dx;\n//     //     ethBalance -= dy;\n//     // }\n\n//     // function _sell(uint128 meme_amount) public payable {\n//     //     uint256 dx = meme_amount;\n//     //     uint256 dy = _y;\n\n//     //     _x -= dx;\n//     //     _y = _k / _x;\n\n//     //     dy = _y - dy;\n\n//     //     memeBalance -= dx;\n//     //     ethBalance += dy;\n//     // }\n// }\n"
			},
			"MEME.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\ncontract MEME is ERC20, ERC20Burnable, Pausable, Ownable {\r\n    constructor() ERC20(\"MEME\", \"MEME\") {\r\n        _mint(msg.sender, 50000 * 10 ** decimals());\r\n    }\r\n\r\n    function pause() public onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    function unpause() public onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    function mint(address to, uint256 amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    function _beforeTokenTransfer(address from, address to, uint256 amount)\r\n        internal\r\n        whenNotPaused\r\n        override\r\n    {\r\n        super._beforeTokenTransfer(from, to, amount);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(address from, address to, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 amount) internal virtual {}\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2054:2059  name_ */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_8\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:986   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":294:307   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":356:366   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":353:389   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":369:387   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":444:446   */\n  0x40\n    /* \"#utility.yul\":438:447   */\n  mload\n    /* \"#utility.yul\":412:414   */\n  0x1f\n    /* \"#utility.yul\":498:511   */\n  dup4\n  add\n  not(0x1f)\n    /* \"#utility.yul\":494:516   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":518:520   */\n  0x3f\n    /* \"#utility.yul\":490:521   */\n  add\n    /* \"#utility.yul\":486:526   */\n  and\n    /* \"#utility.yul\":474:527   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":542:560   */\n  dup3\n  dup3\n  gt\n    /* \"#utility.yul\":562:584   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":539:585   */\n  or\n    /* \"#utility.yul\":536:608   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":588:606   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":628:638   */\n  dup2\n    /* \"#utility.yul\":624:626   */\n  0x40\n    /* \"#utility.yul\":617:639   */\n  mstore\n    /* \"#utility.yul\":663:665   */\n  dup4\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":648:666   */\n  mstore\n    /* \"#utility.yul\":685:689   */\n  0x20\n    /* \"#utility.yul\":675:689   */\n  swap3\n  pop\n    /* \"#utility.yul\":730:733   */\n  dup7\n    /* \"#utility.yul\":725:727   */\n  dup4\n    /* \"#utility.yul\":720:722   */\n  dup6\n    /* \"#utility.yul\":712:718   */\n  dup9\n    /* \"#utility.yul\":708:723   */\n  add\n    /* \"#utility.yul\":704:728   */\n  add\n    /* \"#utility.yul\":701:734   */\n  gt\n    /* \"#utility.yul\":698:751   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":744:745   */\n  dup1\n    /* \"#utility.yul\":737:749   */\n  revert\n    /* \"#utility.yul\":698:751   */\ntag_24:\n    /* \"#utility.yul\":769:770   */\n  0x00\n    /* \"#utility.yul\":760:770   */\n  swap2\n  pop\n    /* \"#utility.yul\":779:912   */\ntag_25:\n    /* \"#utility.yul\":793:795   */\n  dup4\n    /* \"#utility.yul\":790:791   */\n  dup3\n    /* \"#utility.yul\":787:796   */\n  lt\n    /* \"#utility.yul\":779:912   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":881:895   */\n  dup6\n  dup3\n  add\n    /* \"#utility.yul\":877:900   */\n  dup4\n  add\n    /* \"#utility.yul\":871:901   */\n  mload\n    /* \"#utility.yul\":850:864   */\n  dup2\n  dup4\n  add\n    /* \"#utility.yul\":846:869   */\n  dup5\n  add\n    /* \"#utility.yul\":839:902   */\n  mstore\n    /* \"#utility.yul\":804:814   */\n  swap1\n  dup3\n  add\n  swap1\n    /* \"#utility.yul\":779:912   */\n  jump(tag_25)\ntag_27:\n    /* \"#utility.yul\":954:955   */\n  0x00\n    /* \"#utility.yul\":932:947   */\n  swap4\n  dup2\n  add\n    /* \"#utility.yul\":928:952   */\n  swap1\n  swap3\n  add\n    /* \"#utility.yul\":921:956   */\n  swap3\n  swap1\n  swap3\n  mstore\n    /* \"#utility.yul\":936:942   */\n  swap5\n    /* \"#utility.yul\":146:986   */\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":991:1553   */\ntag_3:\n    /* \"#utility.yul\":1090:1096   */\n  0x00\n    /* \"#utility.yul\":1098:1104   */\n  dup1\n    /* \"#utility.yul\":1151:1153   */\n  0x40\n    /* \"#utility.yul\":1139:1148   */\n  dup4\n    /* \"#utility.yul\":1130:1137   */\n  dup6\n    /* \"#utility.yul\":1126:1149   */\n  sub\n    /* \"#utility.yul\":1122:1154   */\n  slt\n    /* \"#utility.yul\":1119:1171   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1167:1168   */\n  0x00\n    /* \"#utility.yul\":1164:1165   */\n  dup1\n    /* \"#utility.yul\":1157:1169   */\n  revert\n    /* \"#utility.yul\":1119:1171   */\ntag_29:\n    /* \"#utility.yul\":1194:1210   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1259:1273   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":1256:1290   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1286:1287   */\n  0x00\n    /* \"#utility.yul\":1283:1284   */\n  dup1\n    /* \"#utility.yul\":1276:1288   */\n  revert\n    /* \"#utility.yul\":1256:1290   */\ntag_30:\n    /* \"#utility.yul\":1309:1370   */\n  tag_31\n    /* \"#utility.yul\":1362:1369   */\n  dup7\n    /* \"#utility.yul\":1353:1359   */\n  dup4\n    /* \"#utility.yul\":1342:1351   */\n  dup8\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1309:1370   */\n  tag_11\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1299:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1416:1418   */\n  0x20\n    /* \"#utility.yul\":1405:1414   */\n  dup6\n    /* \"#utility.yul\":1401:1419   */\n  add\n    /* \"#utility.yul\":1395:1420   */\n  mload\n    /* \"#utility.yul\":1379:1420   */\n  swap2\n  pop\n    /* \"#utility.yul\":1445:1447   */\n  dup1\n    /* \"#utility.yul\":1435:1443   */\n  dup3\n    /* \"#utility.yul\":1432:1448   */\n  gt\n    /* \"#utility.yul\":1429:1465   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1461:1462   */\n  0x00\n    /* \"#utility.yul\":1458:1459   */\n  dup1\n    /* \"#utility.yul\":1451:1463   */\n  revert\n    /* \"#utility.yul\":1429:1465   */\ntag_32:\n  pop\n    /* \"#utility.yul\":1484:1547   */\n  tag_33\n    /* \"#utility.yul\":1539:1546   */\n  dup6\n    /* \"#utility.yul\":1528:1536   */\n  dup3\n    /* \"#utility.yul\":1517:1526   */\n  dup7\n    /* \"#utility.yul\":1513:1537   */\n  add\n    /* \"#utility.yul\":1484:1547   */\n  tag_11\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":1474:1547   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":991:1553   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1558:1938   */\ntag_12:\n    /* \"#utility.yul\":1637:1638   */\n  0x01\n    /* \"#utility.yul\":1633:1645   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1680:1692   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1701:1762   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1755:1759   */\n  0x7f\n    /* \"#utility.yul\":1747:1753   */\n  dup3\n    /* \"#utility.yul\":1743:1760   */\n  and\n    /* \"#utility.yul\":1733:1760   */\n  swap2\n  pop\n    /* \"#utility.yul\":1701:1762   */\ntag_35:\n    /* \"#utility.yul\":1808:1810   */\n  0x20\n    /* \"#utility.yul\":1800:1806   */\n  dup3\n    /* \"#utility.yul\":1797:1811   */\n  lt\n    /* \"#utility.yul\":1777:1795   */\n  dup2\n    /* \"#utility.yul\":1774:1812   */\n  sub\n    /* \"#utility.yul\":1771:1932   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1854:1864   */\n  0x4e487b71\n    /* \"#utility.yul\":1849:1852   */\n  0xe0\n    /* \"#utility.yul\":1845:1865   */\n  shl\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1835:1866   */\n  mstore\n    /* \"#utility.yul\":1889:1893   */\n  0x22\n    /* \"#utility.yul\":1886:1887   */\n  0x04\n    /* \"#utility.yul\":1879:1894   */\n  mstore\n    /* \"#utility.yul\":1917:1921   */\n  0x24\n    /* \"#utility.yul\":1914:1915   */\n  0x00\n    /* \"#utility.yul\":1907:1922   */\n  revert\n    /* \"#utility.yul\":1771:1932   */\ntag_36:\n  pop\n    /* \"#utility.yul\":1558:1938   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2069:2614   */\ntag_14:\n    /* \"#utility.yul\":2171:2173   */\n  0x1f\n    /* \"#utility.yul\":2166:2169   */\n  dup3\n    /* \"#utility.yul\":2163:2174   */\n  gt\n    /* \"#utility.yul\":2160:2608   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":2207:2208   */\n  0x00\n    /* \"#utility.yul\":2232:2237   */\n  dup2\n    /* \"#utility.yul\":2228:2230   */\n  dup2\n    /* \"#utility.yul\":2221:2238   */\n  mstore\n    /* \"#utility.yul\":2277:2281   */\n  0x20\n    /* \"#utility.yul\":2273:2275   */\n  dup2\n    /* \"#utility.yul\":2263:2282   */\n  keccak256\n    /* \"#utility.yul\":2347:2349   */\n  0x1f\n    /* \"#utility.yul\":2335:2345   */\n  dup6\n    /* \"#utility.yul\":2331:2350   */\n  add\n    /* \"#utility.yul\":2328:2329   */\n  0x05\n    /* \"#utility.yul\":2324:2351   */\n  shr\n    /* \"#utility.yul\":2318:2322   */\n  dup2\n    /* \"#utility.yul\":2314:2352   */\n  add\n    /* \"#utility.yul\":2383:2387   */\n  0x20\n    /* \"#utility.yul\":2371:2381   */\n  dup7\n    /* \"#utility.yul\":2368:2388   */\n  lt\n    /* \"#utility.yul\":2365:2412   */\n  iszero\n  tag_40\n  jumpi\n  pop\n    /* \"#utility.yul\":2406:2410   */\n  dup1\n    /* \"#utility.yul\":2365:2412   */\ntag_40:\n    /* \"#utility.yul\":2461:2463   */\n  0x1f\n    /* \"#utility.yul\":2456:2459   */\n  dup6\n    /* \"#utility.yul\":2452:2464   */\n  add\n    /* \"#utility.yul\":2449:2450   */\n  0x05\n    /* \"#utility.yul\":2445:2465   */\n  shr\n    /* \"#utility.yul\":2439:2443   */\n  dup3\n    /* \"#utility.yul\":2435:2466   */\n  add\n    /* \"#utility.yul\":2425:2466   */\n  swap2\n  pop\n    /* \"#utility.yul\":2516:2598   */\ntag_41:\n    /* \"#utility.yul\":2534:2536   */\n  dup2\n    /* \"#utility.yul\":2527:2532   */\n  dup2\n    /* \"#utility.yul\":2524:2537   */\n  lt\n    /* \"#utility.yul\":2516:2598   */\n  iszero\n  tag_43\n  jumpi\n    /* \"#utility.yul\":2579:2596   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2560:2561   */\n  0x01\n    /* \"#utility.yul\":2549:2562   */\n  add\n    /* \"#utility.yul\":2516:2598   */\n  jump(tag_41)\ntag_43:\n    /* \"#utility.yul\":2520:2523   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2160:2608   */\ntag_39:\n    /* \"#utility.yul\":2069:2614   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2790:4142   */\ntag_7:\n    /* \"#utility.yul\":2910:2920   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2932:2962   */\n  dup2\n  gt\n    /* \"#utility.yul\":2929:2985   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":2965:2983   */\n  tag_47\n  tag_10\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":2994:3091   */\n  tag_48\n    /* \"#utility.yul\":3084:3090   */\n  dup2\n    /* \"#utility.yul\":3044:3082   */\n  tag_49\n    /* \"#utility.yul\":3076:3080   */\n  dup5\n    /* \"#utility.yul\":3070:3081   */\n  sload\n    /* \"#utility.yul\":3044:3082   */\n  tag_12\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":2994:3091   */\n  tag_14\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":3146:3150   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3210:3212   */\n  0x1f\n    /* \"#utility.yul\":3199:3213   */\n  dup4\n  gt\n    /* \"#utility.yul\":3227:3228   */\n  0x01\n    /* \"#utility.yul\":3222:3885   */\n  dup2\n  eq\n  tag_51\n  jumpi\n    /* \"#utility.yul\":3929:3930   */\n  0x00\n    /* \"#utility.yul\":3946:3952   */\n  dup5\n    /* \"#utility.yul\":3943:4032   */\n  iszero\n  tag_52\n  jumpi\n  pop\n    /* \"#utility.yul\":3998:4017   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3992:4018   */\n  mload\n    /* \"#utility.yul\":3943:4032   */\ntag_52:\n  not(0x00)\n    /* \"#utility.yul\":2747:2748   */\n  0x03\n    /* \"#utility.yul\":2743:2754   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2739:2763   */\n  shr\n    /* \"#utility.yul\":2735:2764   */\n  not\n    /* \"#utility.yul\":2725:2765   */\n  and\n    /* \"#utility.yul\":2771:2772   */\n  0x01\n    /* \"#utility.yul\":2767:2778   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2722:2779   */\n  or\n    /* \"#utility.yul\":4045:4126   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3192:4136   */\n  jump(tag_43)\n    /* \"#utility.yul\":3222:3885   */\ntag_51:\n    /* \"#utility.yul\":2016:2017   */\n  0x00\n    /* \"#utility.yul\":2009:2023   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":2053:2057   */\n  0x20\n    /* \"#utility.yul\":2040:2058   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3258:3278   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3376:3612   */\ntag_55:\n    /* \"#utility.yul\":3390:3397   */\n  dup3\n    /* \"#utility.yul\":3387:3388   */\n  dup2\n    /* \"#utility.yul\":3384:3398   */\n  lt\n    /* \"#utility.yul\":3376:3612   */\n  iszero\n  tag_57\n  jumpi\n    /* \"#utility.yul\":3479:3498   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3473:3499   */\n  mload\n    /* \"#utility.yul\":3458:3500   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3571:3598   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3539:3540   */\n  0x01\n    /* \"#utility.yul\":3527:3541   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3406:3425   */\n  dup5\n  add\n    /* \"#utility.yul\":3376:3612   */\n  jump(tag_55)\ntag_57:\n    /* \"#utility.yul\":3380:3383   */\n  pop\n    /* \"#utility.yul\":3640:3646   */\n  dup6\n    /* \"#utility.yul\":3631:3638   */\n  dup3\n    /* \"#utility.yul\":3628:3647   */\n  lt\n    /* \"#utility.yul\":3625:3826   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3701:3720   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3695:3721   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3784:3785   */\n  0x03\n    /* \"#utility.yul\":3780:3794   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3796:3799   */\n  0xf8\n    /* \"#utility.yul\":3776:3800   */\n  and\n    /* \"#utility.yul\":3772:3809   */\n  shr\n    /* \"#utility.yul\":3768:3810   */\n  not\n    /* \"#utility.yul\":3753:3811   */\n  and\n    /* \"#utility.yul\":3738:3812   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3625:3826   */\ntag_58:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3872:3873   */\n  0x01\n    /* \"#utility.yul\":3856:3870   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3852:3874   */\n  add\n    /* \"#utility.yul\":3839:3875   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2790:4142   */\n  jump\t// out\ntag_16:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1532:12844  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_79\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_86\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_98\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3170:3172   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3152:3173   */\n      mstore\n        /* \"#utility.yul\":3209:3211   */\n      0x25\n        /* \"#utility.yul\":3189:3207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3182:3212   */\n      mstore\n        /* \"#utility.yul\":3248:3282   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3228:3246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3221:3283   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3299:3317   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3292:3327   */\n      mstore\n        /* \"#utility.yul\":3344:3363   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_73\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_81\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3576:3578   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3558:3579   */\n      mstore\n        /* \"#utility.yul\":3615:3617   */\n      0x24\n        /* \"#utility.yul\":3595:3613   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3588:3618   */\n      mstore\n        /* \"#utility.yul\":3654:3688   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3634:3652   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3627:3689   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3705:3723   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3698:3732   */\n      mstore\n        /* \"#utility.yul\":3749:3768   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3374:3774   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3981:3983   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3963:3984   */\n      mstore\n        /* \"#utility.yul\":4020:4022   */\n      0x22\n        /* \"#utility.yul\":4000:4018   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3993:4023   */\n      mstore\n        /* \"#utility.yul\":4059:4093   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4039:4057   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4032:4094   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4110:4128   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4103:4135   */\n      mstore\n        /* \"#utility.yul\":4152:4171   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3779:4177   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_61\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4384:4386   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4366:4387   */\n      mstore\n        /* \"#utility.yul\":4423:4425   */\n      0x1d\n        /* \"#utility.yul\":4403:4421   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4396:4426   */\n      mstore\n        /* \"#utility.yul\":4462:4493   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4442:4460   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4435:4494   */\n      mstore\n        /* \"#utility.yul\":4511:4529   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4182:4535   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_74\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4742:4744   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4724:4745   */\n      mstore\n        /* \"#utility.yul\":4781:4783   */\n      0x25\n        /* \"#utility.yul\":4761:4779   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4754:4784   */\n      mstore\n        /* \"#utility.yul\":4820:4854   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4800:4818   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4793:4855   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4871:4889   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4864:4899   */\n      mstore\n        /* \"#utility.yul\":4916:4935   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4540:4941   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5148:5150   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5130:5151   */\n      mstore\n        /* \"#utility.yul\":5187:5189   */\n      0x23\n        /* \"#utility.yul\":5167:5185   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5160:5190   */\n      mstore\n        /* \"#utility.yul\":5226:5260   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5206:5224   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5199:5261   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5277:5295   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5270:5303   */\n      mstore\n        /* \"#utility.yul\":5320:5339   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4946:5345   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5552:5554   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5534:5555   */\n      mstore\n        /* \"#utility.yul\":5591:5593   */\n      0x26\n        /* \"#utility.yul\":5571:5589   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5564:5594   */\n      mstore\n        /* \"#utility.yul\":5630:5664   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5610:5628   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5603:5665   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5681:5699   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5674:5710   */\n      mstore\n        /* \"#utility.yul\":5727:5746   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5350:5752   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":12073:12164  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual {} */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_18:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_143:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_143)\n    tag_145:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_140:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_147:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_21:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_149:\n        /* \"#utility.yul\":913:942   */\n      tag_150\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_140\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_31:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_154:\n        /* \"#utility.yul\":1563:1592   */\n      tag_155\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_140\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_156\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_140\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2086   */\n    tag_44:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_159:\n        /* \"#utility.yul\":2051:2080   */\n      tag_160\n        /* \"#utility.yul\":2070:2079   */\n      dup3\n        /* \"#utility.yul\":2051:2080   */\n      tag_140\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":2041:2080   */\n      swap4\n        /* \"#utility.yul\":1900:2086   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2351   */\n    tag_60:\n        /* \"#utility.yul\":2159:2165   */\n      0x00\n        /* \"#utility.yul\":2167:2173   */\n      dup1\n        /* \"#utility.yul\":2220:2222   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup4\n        /* \"#utility.yul\":2199:2206   */\n      dup6\n        /* \"#utility.yul\":2195:2218   */\n      sub\n        /* \"#utility.yul\":2191:2223   */\n      slt\n        /* \"#utility.yul\":2188:2240   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":2236:2237   */\n      0x00\n        /* \"#utility.yul\":2233:2234   */\n      dup1\n        /* \"#utility.yul\":2226:2238   */\n      revert\n        /* \"#utility.yul\":2188:2240   */\n    tag_162:\n        /* \"#utility.yul\":2259:2288   */\n      tag_163\n        /* \"#utility.yul\":2278:2287   */\n      dup4\n        /* \"#utility.yul\":2259:2288   */\n      tag_140\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":2249:2288   */\n      swap2\n      pop\n        /* \"#utility.yul\":2307:2345   */\n      tag_164\n        /* \"#utility.yul\":2341:2343   */\n      0x20\n        /* \"#utility.yul\":2330:2339   */\n      dup5\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2307:2345   */\n      tag_140\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":2297:2345   */\n      swap1\n      pop\n        /* \"#utility.yul\":2091:2351   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2356:2736   */\n    tag_65:\n        /* \"#utility.yul\":2435:2436   */\n      0x01\n        /* \"#utility.yul\":2431:2443   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2478:2490   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2499:2560   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":2553:2557   */\n      0x7f\n        /* \"#utility.yul\":2545:2551   */\n      dup3\n        /* \"#utility.yul\":2541:2558   */\n      and\n        /* \"#utility.yul\":2531:2558   */\n      swap2\n      pop\n        /* \"#utility.yul\":2499:2560   */\n    tag_166:\n        /* \"#utility.yul\":2606:2608   */\n      0x20\n        /* \"#utility.yul\":2598:2604   */\n      dup3\n        /* \"#utility.yul\":2595:2609   */\n      lt\n        /* \"#utility.yul\":2575:2593   */\n      dup2\n        /* \"#utility.yul\":2572:2610   */\n      sub\n        /* \"#utility.yul\":2569:2730   */\n      tag_167\n      jumpi\n        /* \"#utility.yul\":2652:2662   */\n      0x4e487b71\n        /* \"#utility.yul\":2647:2650   */\n      0xe0\n        /* \"#utility.yul\":2643:2663   */\n      shl\n        /* \"#utility.yul\":2640:2641   */\n      0x00\n        /* \"#utility.yul\":2633:2664   */\n      mstore\n        /* \"#utility.yul\":2687:2691   */\n      0x22\n        /* \"#utility.yul\":2684:2685   */\n      0x04\n        /* \"#utility.yul\":2677:2692   */\n      mstore\n        /* \"#utility.yul\":2715:2719   */\n      0x24\n        /* \"#utility.yul\":2712:2713   */\n      0x00\n        /* \"#utility.yul\":2705:2720   */\n      revert\n        /* \"#utility.yul\":2569:2730   */\n    tag_167:\n      pop\n        /* \"#utility.yul\":2356:2736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2963   */\n    tag_88:\n        /* \"#utility.yul\":2806:2815   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2827:2837   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2824:2957   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2879:2889   */\n      0x4e487b71\n        /* \"#utility.yul\":2874:2877   */\n      0xe0\n        /* \"#utility.yul\":2870:2890   */\n      shl\n        /* \"#utility.yul\":2867:2868   */\n      0x00\n        /* \"#utility.yul\":2860:2891   */\n      mstore\n        /* \"#utility.yul\":2914:2918   */\n      0x11\n        /* \"#utility.yul\":2911:2912   */\n      0x04\n        /* \"#utility.yul\":2904:2919   */\n      mstore\n        /* \"#utility.yul\":2942:2946   */\n      0x24\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2932:2947   */\n      revert\n\n    auxdata: 0xa2646970667358221220ce6fd47ad0ad2679809533356ee07301f943af2a2adf872539c601007319177364736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_265": {
									"entryPoint": null,
									"id": 265,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 90,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4144:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:776:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "259:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "268:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "271:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "246:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:35:9"
															},
															"nodeType": "YulIf",
															"src": "220:55:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "284:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "300:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "294:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "294:13:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "288:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "316:28:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "334:2:9",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "338:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:10:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "342:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:18:9"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "320:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "369:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "359:2:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "363:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "356:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:10:9"
															},
															"nodeType": "YulIf",
															"src": "353:36:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "398:17:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "412:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "408:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:7:9"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "402:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "424:23:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "438:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "438:9:9"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "428:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "456:71:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "478:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nodeType": "YulIdentifier",
																										"src": "502:2:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "506:4:9",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "498:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "498:13:9"
																							},
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "513:2:9"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "494:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "494:22:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "518:2:9",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "490:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:31:9"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "523:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "486:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "486:40:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "474:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "474:53:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "460:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "586:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "588:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "588:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "588:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "545:10:9"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "557:2:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "542:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "565:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "562:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "562:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "539:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "539:46:9"
															},
															"nodeType": "YulIf",
															"src": "536:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "624:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "628:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "617:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "617:22:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "663:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "648:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:18:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "648:18:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:14:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "685:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "679:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "735:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "744:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "747:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "737:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "737:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "737:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "712:6:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "720:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "708:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "708:15:9"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "725:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "704:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "704:24:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "730:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "701:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:33:9"
															},
															"nodeType": "YulIf",
															"src": "698:53:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "760:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "769:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "764:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "825:87:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "854:6:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "862:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "850:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "850:14:9"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "866:2:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "846:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "846:23:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nodeType": "YulIdentifier",
																											"src": "885:6:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "893:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "881:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "881:14:9"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "897:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "877:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "877:23:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "871:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "871:30:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "839:63:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "839:63:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "790:1:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "793:2:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "787:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:9:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "797:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "799:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "808:1:9"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "811:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "804:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "799:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "783:3:9",
																"statements": []
															},
															"src": "779:133:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "936:6:9"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "932:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "932:15:9"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "949:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "928:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "928:24:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "954:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "921:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "921:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "921:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "965:15:9",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "974:6:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "965:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "184:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "192:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "200:5:9",
														"type": ""
													}
												],
												"src": "146:840:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1109:444:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1155:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1164:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1167:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1157:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1157:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1157:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1130:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1139:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1126:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1126:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1151:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1122:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:32:9"
															},
															"nodeType": "YulIf",
															"src": "1119:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1180:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1200:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1194:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:16:9"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1184:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:28:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:9",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1241:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1233:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1233:10:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1245:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:18:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1274:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1286:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1276:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1276:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1276:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1270:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1259:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:14:9"
															},
															"nodeType": "YulIf",
															"src": "1256:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1299:71:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1342:9:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1353:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1338:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1338:22:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1362:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1309:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:61:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1379:41:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1405:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1416:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1401:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1401:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1395:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:25:9"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "1383:8:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1449:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1458:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1451:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1451:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1451:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "1435:8:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1445:2:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1432:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1432:16:9"
															},
															"nodeType": "YulIf",
															"src": "1429:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1474:73:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1517:9:9"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "1528:8:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1513:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1513:24:9"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1539:7:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1484:28:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:63:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1474:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1067:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1078:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1090:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1098:6:9",
														"type": ""
													}
												],
												"src": "991:562:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1613:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1623:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1640:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1633:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1633:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1654:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1684:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1680:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1658:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1733:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1747:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1755:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1743:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1743:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1711:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1704:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1704:26:9"
															},
															"nodeType": "YulIf",
															"src": "1701:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1821:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1842:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1849:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1854:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1845:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1845:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1835:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1835:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1835:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1886:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1889:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1879:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1879:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1879:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1777:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1808:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1797:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1797:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1774:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1774:38:9"
															},
															"nodeType": "YulIf",
															"src": "1771:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1593:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1602:6:9",
														"type": ""
													}
												],
												"src": "1558:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1999:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2016:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2009:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2009:14:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2009:14:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2032:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2053:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "2040:9:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "2032:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1982:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1990:4:9",
														"type": ""
													}
												],
												"src": "1943:121:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2150:464:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2183:425:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2197:11:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "2207:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "2201:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2228:2:9"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2232:5:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2221:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2221:17:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2221:17:9"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2251:31:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2273:2:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "2263:9:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2263:19:9"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "2255:4:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2295:57:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2318:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2328:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "2335:10:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2347:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2331:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2331:19:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2324:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2324:27:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2314:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2314:38:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "2299:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2389:23:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2391:19:9",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2406:4:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2391:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2371:10:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2383:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2368:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2368:20:9"
																		},
																		"nodeType": "YulIf",
																		"src": "2365:47:9"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2425:41:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2439:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2449:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2456:3:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2461:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2452:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2452:12:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2445:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2445:20:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2435:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2435:31:9"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2429:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2479:24:9",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2492:11:9"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2483:5:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2577:21:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2586:5:9"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2593:2:9"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2579:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2579:17:9"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2579:17:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2527:5:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2534:2:9"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2524:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2524:13:9"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2538:26:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2540:22:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2553:5:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2560:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2549:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2549:13:9"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2540:5:9"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2520:3:9",
																			"statements": []
																		},
																		"src": "2516:82:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2163:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2163:11:9"
															},
															"nodeType": "YulIf",
															"src": "2160:448:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2122:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2129:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "2134:10:9",
														"type": ""
													}
												],
												"src": "2069:545:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2704:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2714:65:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2729:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2747:1:9",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2750:3:9"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2743:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2743:11:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2760:1:9",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2756:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2756:6:9"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2739:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2739:24:9"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2735:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2735:29:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2725:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2725:40:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2771:1:9",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2774:3:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2767:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2722:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2722:57:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2714:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2681:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2687:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2695:4:9",
														"type": ""
													}
												],
												"src": "2619:166:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2886:1256:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2896:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2916:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2910:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2910:10:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2900:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2963:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2965:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2965:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2965:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2951:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2955:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2947:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2947:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2959:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2943:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2943:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2932:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2932:30:9"
															},
															"nodeType": "YulIf",
															"src": "2929:56:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "3038:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "3076:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "3070:5:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3070:11:9"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "3044:25:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3044:38:9"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2994:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:97:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2994:97:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3100:18:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3117:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "3104:9:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:23:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3146:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "3131:11:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3159:24:9",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "3172:11:9"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "3159:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3229:656:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3243:35:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3262:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3274:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3270:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3270:7:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3258:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3258:20:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "3247:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3291:49:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3335:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "3305:29:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3305:35:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "3295:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3353:10:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "3357:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3440:172:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3465:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3483:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3488:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3479:3:9"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3479:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3473:5:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3473:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3458:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3458:42:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3458:42:9"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3517:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3531:6:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3539:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3527:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3527:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3517:6:9"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3558:40:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3575:9:9"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3586:11:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3571:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3571:27:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3558:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3387:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3390:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3384:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3384:14:9"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3399:28:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3401:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3410:1:9"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3413:11:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3406:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3406:19:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3401:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3380:3:9",
																					"statements": []
																				},
																				"src": "3376:236:9"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3660:166:9",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3678:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3705:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3710:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3701:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3701:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3695:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3695:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3682:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3745:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3757:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3784:1:9",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3787:6:9"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3780:3:9"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3780:14:9"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3796:3:9",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3776:3:9"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3776:24:9"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3806:1:9",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3802:3:9"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3802:6:9"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3772:3:9"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3772:37:9"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3768:3:9"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3768:42:9"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3753:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3753:58:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3738:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3738:74:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3738:74:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3631:7:9"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3640:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3628:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3628:19:9"
																				},
																				"nodeType": "YulIf",
																				"src": "3625:201:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3846:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3860:1:9",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3863:6:9"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3856:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3856:14:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3872:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3852:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3852:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3839:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3839:36:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3839:36:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3222:663:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3227:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3902:234:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3916:14:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3929:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3920:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3965:67:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3983:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "4002:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "4007:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3998:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3998:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3992:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3992:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3983:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3946:6:9"
																				},
																				"nodeType": "YulIf",
																				"src": "3943:89:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "4052:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "4111:5:9"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "4118:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "4058:52:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4058:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4045:81:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4045:81:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3894:242:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "3202:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3199:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:14:9"
															},
															"nodeType": "YulSwitch",
															"src": "3192:944:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2871:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2877:3:9",
														"type": ""
													}
												],
												"src": "2790:1352:9"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        mstore(add(add(memPtr, _1), _4), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000b4638038062000b4683398101604081905262000034916200011f565b600362000042838262000218565b50600462000051828262000218565b505050620002e4565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b600093810190920192909252949350505050565b600080604083850312156200013357600080fd5b82516001600160401b03808211156200014b57600080fd5b620001598683870162000070565b935060208501519150808211156200017057600080fd5b506200017f8582860162000070565b9150509250929050565b600181811c908216806200019e57607f821691505b602082108103620001bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021357600081815260208120601f850160051c81016020861015620001ee5750805b601f850160051c820191505b818110156200020f57828155600101620001fa565b5050505b505050565b81516001600160401b038111156200023457620002346200005a565b6200024c8162000245845462000189565b84620001c5565b602080601f8311600181146200028457600084156200026b5750858301515b600019600386901b1c1916600185901b1785556200020f565b600085815260208120601f198616915b82811015620002b55788860151825594840194600190910190840162000294565b5085821015620002d45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61085280620002f46000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220ce6fd47ad0ad2679809533356ee07301f943af2a2adf872539c601007319177364736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB46 CODESIZE SUB DUP1 PUSH3 0xB46 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x11F JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x218 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x218 JUMP JUMPDEST POP POP POP PUSH3 0x2E4 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST PUSH1 0x0 SWAP4 DUP2 ADD SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x133 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x14B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x159 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x17F DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x19E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1BF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x213 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1EE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x20F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1FA JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x234 JUMPI PUSH3 0x234 PUSH3 0x5A JUMP JUMPDEST PUSH3 0x24C DUP2 PUSH3 0x245 DUP5 SLOAD PUSH3 0x189 JUMP JUMPDEST DUP5 PUSH3 0x1C5 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x284 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x26B JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x20F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2B5 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x294 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2D4 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x852 DUP1 PUSH3 0x2F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE PUSH16 0xD47AD0AD2679809533356EE07301F943 0xAF 0x2A 0x2A 0xDF DUP8 0x25 CODECOPY 0xC6 ADD STOP PUSH20 0x19177364736F6C63430008130033000000000000 ",
							"sourceMap": "1532:11312:2:-:0;;;1980:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2046:5;:13;2054:5;2046;:13;:::i;:::-;-1:-1:-1;2069:7:2;:17;2079:7;2069;:17;:::i;:::-;;1980:113;;1532:11312;;14:127:9;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:9;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:9;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:9:o;991:562::-;1090:6;1098;1151:2;1139:9;1130:7;1126:23;1122:32;1119:52;;;1167:1;1164;1157:12;1119:52;1194:16;;-1:-1:-1;;;;;1259:14:9;;;1256:34;;;1286:1;1283;1276:12;1256:34;1309:61;1362:7;1353:6;1342:9;1338:22;1309:61;:::i;:::-;1299:71;;1416:2;1405:9;1401:18;1395:25;1379:41;;1445:2;1435:8;1432:16;1429:36;;;1461:1;1458;1451:12;1429:36;;1484:63;1539:7;1528:8;1517:9;1513:24;1484:63;:::i;:::-;1474:73;;;991:562;;;;;:::o;1558:380::-;1637:1;1633:12;;;;1680;;;1701:61;;1755:4;1747:6;1743:17;1733:27;;1701:61;1808:2;1800:6;1797:14;1777:18;1774:38;1771:161;;1854:10;1849:3;1845:20;1842:1;1835:31;1889:4;1886:1;1879:15;1917:4;1914:1;1907:15;1771:161;;1558:380;;;:::o;2069:545::-;2171:2;2166:3;2163:11;2160:448;;;2207:1;2232:5;2228:2;2221:17;2277:4;2273:2;2263:19;2347:2;2335:10;2331:19;2328:1;2324:27;2318:4;2314:38;2383:4;2371:10;2368:20;2365:47;;;-1:-1:-1;2406:4:9;2365:47;2461:2;2456:3;2452:12;2449:1;2445:20;2439:4;2435:31;2425:41;;2516:82;2534:2;2527:5;2524:13;2516:82;;;2579:17;;;2560:1;2549:13;2516:82;;;2520:3;;;2160:448;2069:545;;;:::o;2790:1352::-;2910:10;;-1:-1:-1;;;;;2932:30:9;;2929:56;;;2965:18;;:::i;:::-;2994:97;3084:6;3044:38;3076:4;3070:11;3044:38;:::i;:::-;3038:4;2994:97;:::i;:::-;3146:4;;3210:2;3199:14;;3227:1;3222:663;;;;3929:1;3946:6;3943:89;;;-1:-1:-1;3998:19:9;;;3992:26;3943:89;-1:-1:-1;;2747:1:9;2743:11;;;2739:24;2735:29;2725:40;2771:1;2767:11;;;2722:57;4045:81;;3192:944;;3222:663;2016:1;2009:14;;;2053:4;2040:18;;-1:-1:-1;;3258:20:9;;;3376:236;3390:7;3387:1;3384:14;3376:236;;;3479:19;;;3473:26;3458:42;;3571:27;;;;3539:1;3527:14;;;;3406:19;;3376:236;;;3380:3;3640:6;3631:7;3628:19;3625:201;;;3701:19;;;3695:26;-1:-1:-1;;3784:1:9;3780:14;;;3796:3;3776:24;3772:37;3768:42;3753:58;3738:74;;3625:201;-1:-1:-1;;;;;3872:1:9;3856:14;;;3852:22;3839:36;;-1:-1:-1;2790:1352:9:o;:::-;1532:11312:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_806": {
									"entryPoint": null,
									"id": 806,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_741": {
									"entryPoint": 858,
									"id": 741,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_795": {
									"entryPoint": null,
									"id": 795,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_966": {
									"entryPoint": null,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_784": {
									"entryPoint": 1150,
									"id": 784,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_567": {
									"entryPoint": 1272,
									"id": 567,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_362": {
									"entryPoint": 815,
									"id": 362,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_387": {
									"entryPoint": 562,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_319": {
									"entryPoint": null,
									"id": 319,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_295": {
									"entryPoint": null,
									"id": 295,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_490": {
									"entryPoint": 673,
									"id": 490,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_449": {
									"entryPoint": 624,
									"id": 449,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_275": {
									"entryPoint": 416,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_285": {
									"entryPoint": 658,
									"id": 285,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_305": {
									"entryPoint": null,
									"id": 305,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_420": {
									"entryPoint": 588,
									"id": 420,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_344": {
									"entryPoint": 801,
									"id": 344,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2043,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5754:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:9",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:9"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:9",
																"statements": []
															},
															"src": "294:140:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:9"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:9",
														"type": ""
													}
												],
												"src": "14:548:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:9"
															},
															"nodeType": "YulIf",
															"src": "664:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:9",
														"type": ""
													}
												],
												"src": "567:173:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:9"
															},
															"nodeType": "YulIf",
															"src": "842:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:9",
														"type": ""
													}
												],
												"src": "745:254:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:9",
														"type": ""
													}
												],
												"src": "1004:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:9",
														"type": ""
													}
												],
												"src": "1196:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:9"
															},
															"nodeType": "YulIf",
															"src": "1492:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:9",
														"type": ""
													}
												],
												"src": "1378:328:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:9",
														"type": ""
													}
												],
												"src": "1711:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:9"
															},
															"nodeType": "YulIf",
															"src": "1980:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2070:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2051:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:9",
														"type": ""
													}
												],
												"src": "1900:186:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:173:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2224:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2233:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2236:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2226:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2226:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2226:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2199:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2195:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2195:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2220:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2191:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:32:9"
															},
															"nodeType": "YulIf",
															"src": "2188:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2249:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2259:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2249:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2297:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2330:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2341:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2326:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2326:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2307:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2307:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2297:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2136:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2147:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2159:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2167:6:9",
														"type": ""
													}
												],
												"src": "2091:260:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2421:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2435:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2438:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2431:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2431:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2452:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2482:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2488:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2456:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2529:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2531:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2545:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2553:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2541:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2541:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2509:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2502:26:9"
															},
															"nodeType": "YulIf",
															"src": "2499:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2619:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2640:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2647:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2652:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2643:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2643:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2633:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2633:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2633:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2684:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2687:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2677:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2677:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2677:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2712:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2715:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2705:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2575:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2606:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2595:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2595:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2572:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:38:9"
															},
															"nodeType": "YulIf",
															"src": "2569:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2391:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2400:6:9",
														"type": ""
													}
												],
												"src": "2356:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2789:174:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2799:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2810:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2813:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2806:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2806:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2799:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2846:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2867:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2874:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2879:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2870:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2870:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2860:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2860:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2860:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2911:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2914:4:9",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2904:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2904:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2904:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2939:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2942:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2932:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2932:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2932:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2830:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2833:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2827:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:10:9"
															},
															"nodeType": "YulIf",
															"src": "2824:133:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2772:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2775:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2781:3:9",
														"type": ""
													}
												],
												"src": "2741:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3142:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3170:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3152:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3152:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3152:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3193:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3204:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3209:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3182:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3182:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3182:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3232:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3243:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3228:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3228:18:9"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3248:34:9",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3221:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3221:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3221:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3303:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3314:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:18:9"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3319:7:9",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3292:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3292:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3292:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3336:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3348:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3359:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3344:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3344:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3336:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3119:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3133:4:9",
														"type": ""
													}
												],
												"src": "2968:401:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3548:226:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3565:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3558:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3558:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3558:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3599:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3610:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3595:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3595:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3615:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3588:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3588:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3588:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3638:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3649:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3634:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3634:18:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3654:34:9",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3627:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3627:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3709:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3720:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3705:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3705:18:9"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3725:6:9",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3698:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3698:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3698:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3741:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3753:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3764:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3749:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3741:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3525:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3539:4:9",
														"type": ""
													}
												],
												"src": "3374:400:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3953:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3970:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3981:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3963:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3963:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3963:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4004:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4015:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4000:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4000:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4020:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3993:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3993:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4043:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4054:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4039:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4039:18:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4059:34:9",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4032:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4032:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4114:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4125:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4110:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4110:18:9"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4130:4:9",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4103:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4103:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4103:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4144:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4156:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4167:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4152:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4152:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3930:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3944:4:9",
														"type": ""
													}
												],
												"src": "3779:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4356:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4373:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4366:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4366:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4366:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4407:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4403:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4423:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4396:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4396:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:9"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4462:31:9",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4435:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4435:59:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4435:59:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4503:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4515:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4526:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4511:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4511:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4503:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4333:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4347:4:9",
														"type": ""
													}
												],
												"src": "4182:353:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4714:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4731:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4742:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4724:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4765:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4776:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4761:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4761:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4754:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4815:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4800:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4820:34:9",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4793:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4793:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4875:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4886:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4871:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4871:18:9"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4891:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4864:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4864:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4864:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4908:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4920:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4931:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4916:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4908:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4691:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4705:4:9",
														"type": ""
													}
												],
												"src": "4540:401:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:225:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5148:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5130:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5130:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5130:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5171:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5182:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5167:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5187:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5160:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5160:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5160:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5210:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5221:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5206:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5206:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5226:34:9",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5199:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5199:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5199:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5281:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5292:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5277:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5277:18:9"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5297:5:9",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5270:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5270:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5270:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5312:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5324:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5335:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5320:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5320:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5312:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5097:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5111:4:9",
														"type": ""
													}
												],
												"src": "4946:399:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5524:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5541:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5552:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5534:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5534:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5575:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5586:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5571:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5571:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5591:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5564:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5564:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5564:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5614:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5625:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5610:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5610:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5630:34:9",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5603:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5603:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5603:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5685:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5696:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5681:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5681:18:9"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5701:8:9",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5674:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5674:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5719:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5731:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5742:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5727:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5727:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5719:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5501:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5515:4:9",
														"type": ""
													}
												],
												"src": "5350:402:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c3919061069c565b60405180910390f35b6100df6100da366004610706565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610730565b61024c565b604051601281526020016100c3565b6100df610131366004610706565b610270565b6100f361014436600461076c565b6001600160a01b031660009081526020819052604090205490565b6100b6610292565b6100df610175366004610706565b6102a1565b6100df610188366004610706565b610321565b6100f361019b36600461078e565b61032f565b6060600380546101af906107c1565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107c1565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b60003361024081858561035a565b60019150505b92915050565b60003361025a85828561047e565b6102658585856104f8565b506001949350505050565b600033610240818585610283838361032f565b61028d91906107fb565b61035a565b6060600480546101af906107c1565b600033816102af828661032f565b9050838110156103145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b610265828686840361035a565b6000336102408185856104f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103bc5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161030b565b6001600160a01b03821661041d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161030b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061048a848461032f565b905060001981146104f257818110156104e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161030b565b6104f2848484840361035a565b50505050565b6001600160a01b03831661055c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161030b565b6001600160a01b0382166105be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161030b565b6001600160a01b038316600090815260208190526040902054818110156106365760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161030b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36104f2565b600060208083528351808285015260005b818110156106c9578581018301518582016040015282016106ad565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461070157600080fd5b919050565b6000806040838503121561071957600080fd5b610722836106ea565b946020939093013593505050565b60008060006060848603121561074557600080fd5b61074e846106ea565b925061075c602085016106ea565b9150604084013590509250925092565b60006020828403121561077e57600080fd5b610787826106ea565b9392505050565b600080604083850312156107a157600080fd5b6107aa836106ea565b91506107b8602084016106ea565b90509250929050565b600181811c908216806107d557607f821691505b6020821081036107f557634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024657634e487b7160e01b600052601160045260246000fdfea2646970667358221220ce6fd47ad0ad2679809533356ee07301f943af2a2adf872539c601007319177364736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x730 JUMP JUMPDEST PUSH2 0x24C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x76C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x292 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x2A1 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x706 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x78E JUMP JUMPDEST PUSH2 0x32F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7C1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x35A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x25A DUP6 DUP3 DUP6 PUSH2 0x47E JUMP JUMPDEST PUSH2 0x265 DUP6 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x283 DUP4 DUP4 PUSH2 0x32F JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x7FB JUMP JUMPDEST PUSH2 0x35A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7C1 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AF DUP3 DUP7 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x265 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x48A DUP5 DUP5 PUSH2 0x32F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x30B JUMP JUMPDEST PUSH2 0x4F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x35A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x636 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x30B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6C9 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6AD JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x701 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x722 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x74E DUP5 PUSH2 0x6EA JUMP JUMPDEST SWAP3 POP PUSH2 0x75C PUSH1 0x20 DUP6 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x77E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x787 DUP3 PUSH2 0x6EA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7AA DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP2 POP PUSH2 0x7B8 PUSH1 0x20 DUP5 ADD PUSH2 0x6EA JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7F5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x246 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE PUSH16 0xD47AD0AD2679809533356EE07301F943 0xAF 0x2A 0x2A 0xDF DUP8 0x25 CODECOPY 0xC6 ADD STOP PUSH20 0x19177364736F6C63430008130033000000000000 ",
							"sourceMap": "1532:11312:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:9;;1162:22;1144:41;;1132:2;1117:18;4444:197:2;1004:187:9;3255:106:2;3342:12;;3255:106;;;1342:25:9;;;1330:2;1315:18;3255:106:2;1196:177:9;5203:256:2;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1853:36:9;;1841:2;1826:18;3104:91:2;1711:184:9;5854:234:2;;;;;;:::i;:::-;;:::i;3419:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:2;3493:7;3519:18;;;;;;;;;;;;3419:125;2369:102;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2158:98::-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:6;4581:32:2;719:10:6;4597:7:2;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:6;5356:38:2;5372:4;719:10:6;5387:6:2;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:2;;5203:256;-1:-1:-1;;;;5203:256:2:o;5854:234::-;5942:4;719:10:6;5996:64:2;719:10:6;6012:7:2;6049:10;6021:25;719:10:6;6012:7:2;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;2369:102::-;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:6;6668:4:2;6749:25;719:10:6;6766:7:2;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:2;;3170:2:9;6784:85:2;;;3152:21:9;3209:2;3189:18;;;3182:30;3248:34;3228:18;;;3221:62;-1:-1:-1;;;3299:18:9;;;3292:35;3344:19;;6784:85:2;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:6;3873:28:2;719:10:6;3890:2:2;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:2;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;10457:340::-;-1:-1:-1;;;;;10558:19:2;;10550:68;;;;-1:-1:-1;;;10550:68:2;;3576:2:9;10550:68:2;;;3558:21:9;3615:2;3595:18;;;3588:30;3654:34;3634:18;;;3627:62;-1:-1:-1;;;3705:18:9;;;3698:34;3749:19;;10550:68:2;3374:400:9;10550:68:2;-1:-1:-1;;;;;10636:21:2;;10628:68;;;;-1:-1:-1;;;10628:68:2;;3981:2:9;10628:68:2;;;3963:21:9;4020:2;4000:18;;;3993:30;4059:34;4039:18;;;4032:62;-1:-1:-1;;;4110:18:9;;;4103:32;4152:19;;10628:68:2;3779:398:9;10628:68:2;-1:-1:-1;;;;;10707:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:9;;;10758:32:2;;1315:18:9;10758:32:2;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:2;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:2;;4384:2:9;11297:68:2;;;4366:21:9;4423:2;4403:18;;;4396:30;4462:31;4442:18;;;4435:59;4511:18;;11297:68:2;4182:353:9;11297:68:2;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:2;;7544:68;;;;-1:-1:-1;;;7544:68:2;;4742:2:9;7544:68:2;;;4724:21:9;4781:2;4761:18;;;4754:30;4820:34;4800:18;;;4793:62;-1:-1:-1;;;4871:18:9;;;4864:35;4916:19;;7544:68:2;4540:401:9;7544:68:2;-1:-1:-1;;;;;7630:16:2;;7622:64;;;;-1:-1:-1;;;7622:64:2;;5148:2:9;7622:64:2;;;5130:21:9;5187:2;5167:18;;;5160:30;5226:34;5206:18;;;5199:62;-1:-1:-1;;;5277:18:9;;;5270:33;5320:19;;7622:64:2;4946:399:9;7622:64:2;-1:-1:-1;;;;;7768:15:2;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:2;;5552:2:9;7793:72:2;;;5534:21:9;5591:2;5571:18;;;5564:30;5630:34;5610:18;;;5603:62;-1:-1:-1;;;5681:18:9;;;5674:36;5727:19;;7793:72:2;5350:402:9;7793:72:2;-1:-1:-1;;;;;7899:15:2;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:9;;;8114:13:2;;8163:26;;1315:18:9;8163:26:2;;;;;;;8200:37;12073:91;14:548:9;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:9;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:9:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:186::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;2051:29;2070:9;2051:29;:::i;:::-;2041:39;1900:186;-1:-1:-1;;;1900:186:9:o;2091:260::-;2159:6;2167;2220:2;2208:9;2199:7;2195:23;2191:32;2188:52;;;2236:1;2233;2226:12;2188:52;2259:29;2278:9;2259:29;:::i;:::-;2249:39;;2307:38;2341:2;2330:9;2326:18;2307:38;:::i;:::-;2297:48;;2091:260;;;;;:::o;2356:380::-;2435:1;2431:12;;;;2478;;;2499:61;;2553:4;2545:6;2541:17;2531:27;;2499:61;2606:2;2598:6;2595:14;2575:18;2572:38;2569:161;;2652:10;2647:3;2643:20;2640:1;2633:31;2687:4;2684:1;2677:15;2715:4;2712:1;2705:15;2569:161;;2356:380;;;:::o;2741:222::-;2806:9;;;2827:10;;;2824:133;;;2879:10;2874:3;2870:20;2867:1;2860:31;2914:4;2911:1;2904:15;2942:4;2939:1;2932:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "426000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24628",
								"balanceOf(address)": "2562",
								"decimals()": "266",
								"decreaseAllowance(address,uint256)": "27016",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51138",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1980,
									"end": 2093,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2054,
									"end": 2059,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2069,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 146,
									"end": 986,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 986,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 294,
									"end": 307,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 294,
									"end": 307,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 356,
									"end": 366,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 356,
									"end": 366,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 353,
									"end": 389,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 353,
									"end": 389,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 353,
									"end": 389,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 369,
									"end": 387,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 369,
									"end": 387,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 369,
									"end": 387,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 444,
									"end": 446,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 438,
									"end": 447,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 412,
									"end": 414,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 498,
									"end": 511,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 498,
									"end": 511,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 494,
									"end": 516,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 494,
									"end": 516,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 494,
									"end": 516,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 518,
									"end": 520,
									"name": "PUSH",
									"source": 9,
									"value": "3F"
								},
								{
									"begin": 490,
									"end": 521,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 486,
									"end": 526,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 474,
									"end": 527,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 474,
									"end": 527,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 474,
									"end": 527,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 542,
									"end": 560,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 542,
									"end": 560,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 562,
									"end": 584,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 562,
									"end": 584,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 539,
									"end": 585,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 536,
									"end": 608,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 536,
									"end": 608,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 536,
									"end": 608,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 588,
									"end": 606,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 588,
									"end": 606,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 588,
									"end": 606,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 628,
									"end": 638,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 624,
									"end": 626,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 617,
									"end": 639,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 663,
									"end": 665,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 648,
									"end": 666,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 685,
									"end": 689,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 675,
									"end": 689,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 675,
									"end": 689,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 730,
									"end": 733,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 725,
									"end": 727,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 720,
									"end": 722,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 712,
									"end": 718,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 708,
									"end": 723,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 704,
									"end": 728,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 701,
									"end": 734,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 698,
									"end": 751,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 698,
									"end": 751,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 744,
									"end": 745,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 737,
									"end": 749,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 698,
									"end": 751,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 751,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 769,
									"end": 770,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 760,
									"end": 770,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 760,
									"end": 770,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 793,
									"end": 795,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 790,
									"end": 791,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 787,
									"end": 796,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 779,
									"end": 912,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 881,
									"end": 895,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 881,
									"end": 895,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 877,
									"end": 900,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 877,
									"end": 900,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 871,
									"end": 901,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 850,
									"end": 864,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 850,
									"end": 864,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 846,
									"end": 869,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 846,
									"end": 869,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 839,
									"end": 902,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 804,
									"end": 814,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 804,
									"end": 814,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 804,
									"end": 814,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 779,
									"end": 912,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 779,
									"end": 912,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 779,
									"end": 912,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 954,
									"end": 955,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 947,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 932,
									"end": 947,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 932,
									"end": 947,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 928,
									"end": 952,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 928,
									"end": 952,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 921,
									"end": 956,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 921,
									"end": 956,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 936,
									"end": 942,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 146,
									"end": 986,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 986,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1090,
									"end": 1096,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1098,
									"end": 1104,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1151,
									"end": 1153,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1139,
									"end": 1148,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1130,
									"end": 1137,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1126,
									"end": 1149,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1154,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1167,
									"end": 1168,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1164,
									"end": 1165,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1157,
									"end": 1169,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1119,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1194,
									"end": 1210,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1259,
									"end": 1273,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1286,
									"end": 1287,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1283,
									"end": 1284,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1276,
									"end": 1288,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 1256,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 1309,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 1309,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1299,
									"end": 1370,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1416,
									"end": 1418,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1405,
									"end": 1414,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1401,
									"end": 1419,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1395,
									"end": 1420,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1379,
									"end": 1420,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1435,
									"end": 1443,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1432,
									"end": 1448,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1461,
									"end": 1462,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1458,
									"end": 1459,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1451,
									"end": 1463,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1429,
									"end": 1465,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1539,
									"end": 1546,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1528,
									"end": 1536,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1517,
									"end": 1526,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1513,
									"end": 1537,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 1484,
									"end": 1547,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 1484,
									"end": 1547,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1474,
									"end": 1547,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 991,
									"end": 1553,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 991,
									"end": 1553,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1637,
									"end": 1638,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1633,
									"end": 1645,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1680,
									"end": 1692,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1755,
									"end": 1759,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 1747,
									"end": 1753,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1743,
									"end": 1760,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1733,
									"end": 1760,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 1701,
									"end": 1762,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1808,
									"end": 1810,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1800,
									"end": 1806,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1797,
									"end": 1811,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1777,
									"end": 1795,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1774,
									"end": 1812,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1854,
									"end": 1864,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 1849,
									"end": 1852,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 1845,
									"end": 1865,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1835,
									"end": 1866,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1889,
									"end": 1893,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 1887,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1879,
									"end": 1894,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1917,
									"end": 1921,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1914,
									"end": 1915,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1907,
									"end": 1922,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1771,
									"end": 1932,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1558,
									"end": 1938,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1558,
									"end": 1938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2171,
									"end": 2173,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2163,
									"end": 2174,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2207,
									"end": 2208,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2232,
									"end": 2237,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2228,
									"end": 2230,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2221,
									"end": 2238,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2273,
									"end": 2275,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2263,
									"end": 2282,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 2347,
									"end": 2349,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2335,
									"end": 2345,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2331,
									"end": 2350,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2328,
									"end": 2329,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2324,
									"end": 2351,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2314,
									"end": 2352,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2383,
									"end": 2387,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2371,
									"end": 2381,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2388,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2406,
									"end": 2410,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2365,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2461,
									"end": 2463,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2456,
									"end": 2459,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2452,
									"end": 2464,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2445,
									"end": 2465,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2439,
									"end": 2443,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2435,
									"end": 2466,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2425,
									"end": 2466,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2534,
									"end": 2536,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2527,
									"end": 2532,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2524,
									"end": 2537,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2579,
									"end": 2596,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2560,
									"end": 2561,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2549,
									"end": 2562,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 2516,
									"end": 2598,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2520,
									"end": 2523,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 2160,
									"end": 2608,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2614,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2614,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2910,
									"end": 2920,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2932,
									"end": 2962,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 2929,
									"end": 2985,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 2965,
									"end": 2983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 2965,
									"end": 2983,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 3084,
									"end": 3090,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 3076,
									"end": 3080,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3070,
									"end": 3081,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 3044,
									"end": 3082,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 3044,
									"end": 3082,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 2994,
									"end": 3091,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 2994,
									"end": 3091,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3146,
									"end": 3150,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3199,
									"end": 3213,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3227,
									"end": 3228,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3929,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3946,
									"end": 3952,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3992,
									"end": 4018,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 3943,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2748,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2743,
									"end": 2754,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2739,
									"end": 2763,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2735,
									"end": 2764,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2725,
									"end": 2765,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2771,
									"end": 2772,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2767,
									"end": 2778,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2722,
									"end": 2779,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4045,
									"end": 4126,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 3192,
									"end": 4136,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 3222,
									"end": 3885,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2016,
									"end": 2017,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2009,
									"end": 2023,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2053,
									"end": 2057,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2040,
									"end": 2058,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3258,
									"end": 3278,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3390,
									"end": 3397,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3387,
									"end": 3388,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3384,
									"end": 3398,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3479,
									"end": 3498,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3473,
									"end": 3499,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3458,
									"end": 3500,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3571,
									"end": 3598,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 3539,
									"end": 3540,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3527,
									"end": 3541,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3406,
									"end": 3425,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 3376,
									"end": 3612,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3380,
									"end": 3383,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3640,
									"end": 3646,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3631,
									"end": 3638,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3628,
									"end": 3647,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3701,
									"end": 3720,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3695,
									"end": 3721,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3784,
									"end": 3785,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3780,
									"end": 3794,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3796,
									"end": 3799,
									"name": "PUSH",
									"source": 9,
									"value": "F8"
								},
								{
									"begin": 3776,
									"end": 3800,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3772,
									"end": 3809,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3768,
									"end": 3810,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3753,
									"end": 3811,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3738,
									"end": 3812,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 3625,
									"end": 3826,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3872,
									"end": 3873,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3856,
									"end": 3870,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3852,
									"end": 3874,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3839,
									"end": 3875,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2790,
									"end": 4142,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 2790,
									"end": 4142,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 12844,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ce6fd47ad0ad2679809533356ee07301f943af2a2adf872539c601007319177364736f6c63430008130033",
									".code": [
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "39509351"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "A457C2D7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "DD62ED3E"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "313CE567"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 12844,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3419,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4581,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5356,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5404,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6021,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6021,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 5996,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2450,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6749,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3170,
											"end": 3172,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3173,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3209,
											"end": 3211,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3182,
											"end": 3212,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3248,
											"end": 3282,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3228,
											"end": 3246,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3221,
											"end": 3283,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3317,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3292,
											"end": 3327,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3344,
											"end": 3363,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 6903,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3873,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3558,
											"end": 3579,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3615,
											"end": 3617,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3595,
											"end": 3613,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3588,
											"end": 3618,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3654,
											"end": 3688,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3634,
											"end": 3652,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3627,
											"end": 3689,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3705,
											"end": 3723,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3698,
											"end": 3732,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3749,
											"end": 3768,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3374,
											"end": 3774,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3981,
											"end": 3983,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3963,
											"end": 3984,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4022,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4000,
											"end": 4018,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3993,
											"end": 4023,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4059,
											"end": 4093,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4032,
											"end": 4094,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4110,
											"end": 4128,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4103,
											"end": 4135,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4152,
											"end": 4171,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3779,
											"end": 4177,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 11205,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4384,
											"end": 4386,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4387,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4423,
											"end": 4425,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4403,
											"end": 4421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4396,
											"end": 4426,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4462,
											"end": 4493,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4435,
											"end": 4494,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4511,
											"end": 4529,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4182,
											"end": 4535,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 11407,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4742,
											"end": 4744,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4724,
											"end": 4745,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4820,
											"end": 4854,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4793,
											"end": 4855,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4871,
											"end": 4889,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4864,
											"end": 4899,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4916,
											"end": 4935,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4540,
											"end": 4941,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5148,
											"end": 5150,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5130,
											"end": 5151,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5187,
											"end": 5189,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5167,
											"end": 5185,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5160,
											"end": 5190,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5226,
											"end": 5260,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5206,
											"end": 5224,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5199,
											"end": 5261,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5295,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5270,
											"end": 5303,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4946,
											"end": 5345,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5552,
											"end": 5554,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5534,
											"end": 5555,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5591,
											"end": 5593,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5571,
											"end": 5589,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5564,
											"end": 5594,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5630,
											"end": 5664,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5610,
											"end": 5628,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 5665,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5681,
											"end": 5699,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5674,
											"end": 5710,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5727,
											"end": 5746,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 5350,
											"end": 5752,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 12073,
											"end": 12164,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2070,
											"end": 2079,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2051,
											"end": 2080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2051,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2041,
											"end": 2080,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 2086,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2159,
											"end": 2165,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2173,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2220,
											"end": 2222,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2199,
											"end": 2206,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2195,
											"end": 2218,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2191,
											"end": 2223,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2234,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2226,
											"end": 2238,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2188,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2278,
											"end": 2287,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2259,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 2259,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2249,
											"end": 2288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2307,
											"end": 2345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2307,
											"end": 2345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2297,
											"end": 2345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2435,
											"end": 2436,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 2431,
											"end": 2443,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2478,
											"end": 2490,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2553,
											"end": 2557,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2531,
											"end": 2558,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2499,
											"end": 2560,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2604,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2595,
											"end": 2609,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2593,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2572,
											"end": 2610,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2652,
											"end": 2662,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 2647,
											"end": 2650,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2643,
											"end": 2663,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2640,
											"end": 2641,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2664,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2687,
											"end": 2691,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2684,
											"end": 2685,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2677,
											"end": 2692,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2715,
											"end": 2719,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2712,
											"end": 2713,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2720,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "tag",
											"source": 9,
											"value": "167"
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2569,
											"end": 2730,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2356,
											"end": 2736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 2741,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2815,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 2824,
											"end": 2957,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2879,
											"end": 2889,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 2874,
											"end": 2877,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2870,
											"end": 2890,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2867,
											"end": 2868,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2860,
											"end": 2891,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2914,
											"end": 2918,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2904,
											"end": 2919,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2942,
											"end": 2946,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2932,
											"end": 2947,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"DEX.sol",
								"MEME.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 236,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 242,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 244,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 246,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 236,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 242,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 244,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 246,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"DEX.sol": {
				"DEX": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_taxrate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "Meme_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "Buy",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "Meme_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "Sell",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "Meme_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "Stack",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "Meme_amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "UnStack",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "poolIndex",
									"type": "uint256"
								}
							],
							"name": "_distributeTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "meme_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "ownerAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "msgValue",
									"type": "uint256"
								}
							],
							"name": "buy",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "meme_amount",
									"type": "uint256"
								}
							],
							"name": "buy",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "dailyTax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "getETHPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "meme_amount",
									"type": "uint256"
								}
							],
							"name": "getMemePrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getStacks",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "meme_amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "eth_amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "time",
											"type": "uint256"
										}
									],
									"internalType": "struct DEX.Stack_Struct[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "ownerAddress",
									"type": "address"
								}
							],
							"name": "sell",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "eth_amount",
									"type": "uint256"
								}
							],
							"name": "sell",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "meme_amount",
									"type": "uint256"
								}
							],
							"name": "stack",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stackingRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "unstack",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DEX.sol\":243:12123  contract DEX is Pausable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"DEX.sol\":1008:1013  10e18 */\n  0x8ac7230489e80000\n    /* \"DEX.sol\":979:1013  uint256 internal precision = 10e18 */\n  0x08\n  sstore\n    /* \"DEX.sol\":1065:1069  1000 */\n  0x03e8\n    /* \"DEX.sol\":1052:1061  precision */\n  sload(0x08)\n    /* \"DEX.sol\":1048:1049  3 */\n  0x03\n    /* \"DEX.sol\":1048:1061  3 * precision */\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"DEX.sol\":1047:1069  (3 * precision) / 1000 */\n  tag_3\n  swap2\n  swap1\n  tag_4\n  jump\t// in\ntag_3:\n    /* \"DEX.sol\":1020:1069  uint256 internal taxRate = (3 * precision) / 1000 */\n  0x09\n  sstore\n    /* \"DEX.sol\":2619:2621  _x */\n  sload(0x06)\n    /* \"DEX.sol\":2590:2621  uint256 internal originalX = _x */\n  0x0a\n  sstore\n    /* \"DEX.sol\":1076:1241  constructor(address addr, uint256 _taxrate) {... */\n  callvalue\n  dup1\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_6\n  swap2\n  tag_7\n  jump\t// in\ntag_6:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_13\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_16\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_13:\n    /* \"DEX.sol\":1130:1134  meme */\n  0x01\n    /* \"DEX.sol\":1130:1147  meme = MEME(addr) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"DEX.sol\":1179:1188  precision */\n  sload(0x08)\n    /* \"DEX.sol\":1192:1196  1000 */\n  0x03e8\n  swap1\n    /* \"DEX.sol\":1168:1188  _taxrate * precision */\n  tag_18\n  swap1\n    /* \"DEX.sol\":1168:1176  _taxrate */\n  dup4\n    /* \"DEX.sol\":1168:1188  _taxrate * precision */\n  tag_2\n  jump\t// in\ntag_18:\n    /* \"DEX.sol\":1167:1196  (_taxrate * precision) / 1000 */\n  tag_19\n  swap2\n  swap1\n  tag_4\n  jump\t// in\ntag_19:\n    /* \"DEX.sol\":1157:1164  taxRate */\n  0x09\n    /* \"DEX.sol\":1157:1196  taxRate = (_taxrate * precision) / 1000 */\n  sstore\n  pop\n    /* \"DEX.sol\":243:12123  contract DEX is Pausable, Ownable {... */\n  tag_23\n  swap1\n  pop\n  jump\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  0x0100\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup2\n  dup2\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  dup6\n  and\n  or\n  dup6\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  swap4\n  div\n  swap2\n  swap1\n  swap2\n  and\n  swap3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  swap1\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:279   */\ntag_2:\n    /* \"#utility.yul\":87:96   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":118:127   */\n  dup2\n  iszero\n    /* \"#utility.yul\":135:150   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":129:151   */\n  dup5\n  eq\n    /* \"#utility.yul\":115:152   */\n  or\n    /* \"#utility.yul\":105:273   */\n  tag_25\n  jumpi\n    /* \"#utility.yul\":195:205   */\n  0x4e487b71\n    /* \"#utility.yul\":190:193   */\n  0xe0\n    /* \"#utility.yul\":186:206   */\n  shl\n    /* \"#utility.yul\":183:184   */\n  0x00\n    /* \"#utility.yul\":176:207   */\n  mstore\n    /* \"#utility.yul\":230:234   */\n  0x11\n    /* \"#utility.yul\":227:228   */\n  0x04\n    /* \"#utility.yul\":220:235   */\n  mstore\n    /* \"#utility.yul\":258:262   */\n  0x24\n    /* \"#utility.yul\":255:256   */\n  0x00\n    /* \"#utility.yul\":248:263   */\n  revert\n    /* \"#utility.yul\":105:273   */\ntag_25:\n    /* \"#utility.yul\":14:279   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":284:501   */\ntag_4:\n    /* \"#utility.yul\":324:325   */\n  0x00\n    /* \"#utility.yul\":350:351   */\n  dup3\n    /* \"#utility.yul\":340:472   */\n  tag_27\n  jumpi\n    /* \"#utility.yul\":394:404   */\n  0x4e487b71\n    /* \"#utility.yul\":389:392   */\n  0xe0\n    /* \"#utility.yul\":385:405   */\n  shl\n    /* \"#utility.yul\":382:383   */\n  0x00\n    /* \"#utility.yul\":375:406   */\n  mstore\n    /* \"#utility.yul\":429:433   */\n  0x12\n    /* \"#utility.yul\":426:427   */\n  0x04\n    /* \"#utility.yul\":419:434   */\n  mstore\n    /* \"#utility.yul\":457:461   */\n  0x24\n    /* \"#utility.yul\":454:455   */\n  0x00\n    /* \"#utility.yul\":447:462   */\n  revert\n    /* \"#utility.yul\":340:472   */\ntag_27:\n  pop\n    /* \"#utility.yul\":486:495   */\n  div\n  swap1\n    /* \"#utility.yul\":284:501   */\n  jump\t// out\n    /* \"#utility.yul\":506:857   */\ntag_7:\n    /* \"#utility.yul\":585:591   */\n  0x00\n    /* \"#utility.yul\":593:599   */\n  dup1\n    /* \"#utility.yul\":646:648   */\n  0x40\n    /* \"#utility.yul\":634:643   */\n  dup4\n    /* \"#utility.yul\":625:632   */\n  dup6\n    /* \"#utility.yul\":621:644   */\n  sub\n    /* \"#utility.yul\":617:649   */\n  slt\n    /* \"#utility.yul\":614:666   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":662:663   */\n  0x00\n    /* \"#utility.yul\":659:660   */\n  dup1\n    /* \"#utility.yul\":652:664   */\n  revert\n    /* \"#utility.yul\":614:666   */\ntag_29:\n    /* \"#utility.yul\":688:704   */\n  dup3\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":733:764   */\n  dup2\n  and\n    /* \"#utility.yul\":723:765   */\n  dup2\n  eq\n    /* \"#utility.yul\":713:783   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":779:780   */\n  0x00\n    /* \"#utility.yul\":776:777   */\n  dup1\n    /* \"#utility.yul\":769:781   */\n  revert\n    /* \"#utility.yul\":713:783   */\ntag_30:\n    /* \"#utility.yul\":847:849   */\n  0x20\n    /* \"#utility.yul\":832:850   */\n  swap4\n  swap1\n  swap4\n  add\n    /* \"#utility.yul\":826:851   */\n  mload\n    /* \"#utility.yul\":802:807   */\n  swap3\n  swap5\n    /* \"#utility.yul\":826:851   */\n  swap3\n  swap4\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":506:857   */\n  jump\t// out\ntag_23:\n    /* \"DEX.sol\":243:12123  contract DEX is Pausable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"DEX.sol\":243:12123  contract DEX is Pausable, Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xd96a094a\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xd96a094a\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdc9031c4\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe4849b32\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe8bca8b8\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x8456cb59\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9c74f05d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd37a389b\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x3f4ba83a\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4189a68e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5c572ed0\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x1a753fed\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x200061df\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2ad9d559\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2afaca20\n      eq\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"DEX.sol\":8402:9160  function getETHPrice(uint256 eth_amount)... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":345:370   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":333:335   */\n      0x20\n        /* \"#utility.yul\":318:336   */\n      add\n        /* \"DEX.sol\":8402:9160  function getETHPrice(uint256 eth_amount)... */\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DEX.sol\":1913:2060  function unstack(uint256 index) public whenNotPaused {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_35:\n      tag_36\n      jump\t// in\n    tag_34:\n      stop\n        /* \"DEX.sol\":819:862  mapping(uint256 => uint256) public dailyTax */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_27\n      tag_39\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_39:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"DEX.sol\":9210:9814  function buy(... */\n    tag_6:\n      tag_34\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"DEX.sol\":1314:1379  function unpause() external onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_34\n      tag_48\n      jump\t// in\n        /* \"DEX.sol\":10356:11044  function sell(uint256 eth_amount, address ownerAddress)... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_34\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n        /* \"DEX.sol\":7145:7834  function getMemePrice(uint256 meme_amount)... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_27\n      tag_56\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      mload(0x40)\n        /* \"#utility.yul\":1310:1324   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1303:1325   */\n      iszero\n        /* \"#utility.yul\":1285:1326   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1273:1275   */\n      0x20\n        /* \"#utility.yul\":1258:1276   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      tag_31\n        /* \"#utility.yul\":1145:1332   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_34\n      tag_66\n      jump\t// in\n        /* \"DEX.sol\":1247:1308  function pause() external onlyOwner {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_34\n      tag_69\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1501:1533   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1483:1534   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1471:1473   */\n      0x20\n        /* \"#utility.yul\":1456:1474   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_31\n        /* \"#utility.yul\":1337:1540   */\n      jump\n        /* \"DEX.sol\":869:896  uint256 public stackingRate */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_27\n      sload(0x04)\n      dup2\n      jump\n        /* \"DEX.sol\":5380:6176  function _distributeTax(uint256 poolIndex) public view returns (uint256) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      tag_27\n      tag_81\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n        /* \"DEX.sol\":9820:10350  function buy(uint256 meme_amount) public payable whenNotPaused {... */\n    tag_16:\n      tag_34\n      tag_85\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"DEX.sol\":1563:1907  function stack(uint256 meme_amount) public payable whenNotPaused {... */\n    tag_17:\n      tag_34\n      tag_88\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"DEX.sol\":11050:11688  function sell(uint256 eth_amount) public whenNotPaused {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_34\n      tag_92\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n        /* \"DEX.sol\":1449:1557  function getStacks() public view returns (Stack_Struct[] memory) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_34\n      tag_101\n      calldatasize\n      0x04\n      tag_102\n      jump\t// in\n    tag_101:\n      tag_103\n      jump\t// in\n        /* \"DEX.sol\":8402:9160  function getETHPrice(uint256 eth_amount)... */\n    tag_30:\n        /* \"DEX.sol\":8510:8517  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_105\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_106\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_105:\n        /* \"DEX.sol\":8546:8547  0 */\n      0x00\n        /* \"DEX.sol\":8541:8543  _k */\n      sload(0x05)\n        /* \"DEX.sol\":8541:8547  _k > 0 */\n      gt\n        /* \"DEX.sol\":8533:8572  require(_k > 0, \"Not enough liquidity\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"DEX.sol\":8582:8592  uint256 dx */\n      0x00\n        /* \"DEX.sol\":8606:8616  uint256 dy */\n      dup1\n        /* \"DEX.sol\":8634:8636  _x */\n      sload(0x06)\n        /* \"DEX.sol\":8640:8641  0 */\n      0x00\n        /* \"DEX.sol\":8634:8641  _x == 0 */\n      sub\n        /* \"DEX.sol\":8630:8748  if (_x == 0) {... */\n      tag_111\n      jumpi\n        /* \"DEX.sol\":8671:8681  eth_amount */\n      dup4\n        /* \"DEX.sol\":8667:8668  1 */\n      0x01\n        /* \"DEX.sol\":8662:8664  _k */\n      sload(0x05)\n        /* \"DEX.sol\":8662:8668  _k / 1 */\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"DEX.sol\":8662:8681  _k / 1 - eth_amount */\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"DEX.sol\":8657:8681  dy = _k / 1 - eth_amount */\n      swap1\n      pop\n        /* \"DEX.sol\":8630:8748  if (_x == 0) {... */\n      jump(tag_116)\n    tag_111:\n        /* \"DEX.sol\":8727:8737  eth_amount */\n      dup4\n        /* \"DEX.sol\":8722:8724  _x */\n      sload(0x06)\n        /* \"DEX.sol\":8717:8719  _k */\n      sload(0x05)\n        /* \"DEX.sol\":8717:8724  _k / _x */\n      tag_117\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_117:\n        /* \"DEX.sol\":8717:8737  _k / _x - eth_amount */\n      tag_118\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_118:\n        /* \"DEX.sol\":8712:8737  dy = _k / _x - eth_amount */\n      swap1\n      pop\n        /* \"DEX.sol\":8630:8748  if (_x == 0) {... */\n    tag_116:\n        /* \"DEX.sol\":8761:8763  dy */\n      dup1\n        /* \"DEX.sol\":8767:8768  0 */\n      0x00\n        /* \"DEX.sol\":8761:8768  dy == 0 */\n      sub\n        /* \"DEX.sol\":8757:8849  if (dy == 0) {... */\n      tag_119\n      jumpi\n        /* \"DEX.sol\":8794:8795  1 */\n      0x01\n        /* \"DEX.sol\":8789:8791  _k */\n      sload(0x05)\n        /* \"DEX.sol\":8789:8795  _k / 1 */\n      tag_120\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_120:\n        /* \"DEX.sol\":8784:8795  dx = _k / 1 */\n      swap2\n      pop\n        /* \"DEX.sol\":8757:8849  if (dy == 0) {... */\n      jump(tag_121)\n    tag_119:\n        /* \"DEX.sol\":8836:8838  dy */\n      dup1\n        /* \"DEX.sol\":8831:8833  _k */\n      sload(0x05)\n        /* \"DEX.sol\":8831:8838  _k / dy */\n      tag_122\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_122:\n        /* \"DEX.sol\":8826:8838  dx = _k / dy */\n      swap2\n      pop\n        /* \"DEX.sol\":8757:8849  if (dy == 0) {... */\n    tag_121:\n        /* \"DEX.sol\":8858:8888  uint256 meme_price_without_tax */\n      0x00\n        /* \"DEX.sol\":8896:8898  _x */\n      sload(0x06)\n        /* \"DEX.sol\":8891:8893  dx */\n      dup4\n        /* \"DEX.sol\":8891:8898  dx - _x */\n      tag_123\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_123:\n        /* \"DEX.sol\":8858:8898  uint256 meme_price_without_tax = dx - _x */\n      swap1\n      pop\n        /* \"DEX.sol\":8908:8924  uint256 meme_tax */\n      0x00\n        /* \"DEX.sol\":8964:8973  precision */\n      sload(0x08)\n        /* \"DEX.sol\":8953:8960  taxRate */\n      sload(0x09)\n        /* \"DEX.sol\":8928:8950  meme_price_without_tax */\n      dup4\n        /* \"DEX.sol\":8928:8960  meme_price_without_tax * taxRate */\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"DEX.sol\":8927:8973  (meme_price_without_tax * taxRate) / precision */\n      tag_126\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_126:\n        /* \"DEX.sol\":8908:8973  uint256 meme_tax = (meme_price_without_tax * taxRate) / precision */\n      swap1\n      pop\n        /* \"DEX.sol\":9090:9112  meme_price_without_tax */\n      dup2\n        /* \"DEX.sol\":9130:9153  meme_price_with_tax + 1 */\n      tag_127\n        /* \"DEX.sol\":9090:9112  meme_price_without_tax */\n      dup2\n        /* \"DEX.sol\":9152:9153  1 */\n      0x01\n        /* \"DEX.sol\":9130:9153  meme_price_with_tax + 1 */\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"DEX.sol\":9123:9153  return meme_price_with_tax + 1 */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1268:1269  _ */\n    tag_107:\n        /* \"DEX.sol\":8402:9160  function getETHPrice(uint256 eth_amount)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"DEX.sol\":1913:2060  function unstack(uint256 index) public whenNotPaused {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_130\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_106\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_130:\n        /* \"DEX.sol\":2038:2053  _unstack(index) */\n      tag_132\n        /* \"DEX.sol\":2047:2052  index */\n      dup2\n        /* \"DEX.sol\":2038:2046  _unstack */\n      tag_133\n        /* \"DEX.sol\":2038:2053  _unstack(index) */\n      jump\t// in\n    tag_132:\n        /* \"DEX.sol\":1913:2060  function unstack(uint256 index) public whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"DEX.sol\":9210:9814  function buy(... */\n    tag_45:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_135\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_106\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_135:\n        /* \"DEX.sol\":9375:9376  0 */\n      0x00\n        /* \"DEX.sol\":9361:9372  meme_amount */\n      dup4\n        /* \"DEX.sol\":9361:9376  meme_amount > 0 */\n      gt\n        /* \"DEX.sol\":9353:9395  require(meme_amount > 0, \"Send Some Meme\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"DEX.sol\":9353:9395  require(meme_amount > 0, \"Send Some Meme\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3915:3936   */\n      mstore\n        /* \"#utility.yul\":3972:3974   */\n      0x0e\n        /* \"#utility.yul\":3952:3970   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3945:3975   */\n      mstore\n      shl(0x90, 0x53656e6420536f6d65204d656d65)\n        /* \"#utility.yul\":3991:4009   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3984:4028   */\n      mstore\n        /* \"#utility.yul\":4045:4063   */\n      0x64\n      add\n        /* \"DEX.sol\":9353:9395  require(meme_amount > 0, \"Send Some Meme\") */\n      tag_109\n        /* \"#utility.yul\":3731:4069   */\n      jump\n        /* \"DEX.sol\":9353:9395  require(meme_amount > 0, \"Send Some Meme\") */\n    tag_137:\n        /* \"DEX.sol\":9405:9423  uint256 meme_price */\n      0x00\n        /* \"DEX.sol\":9426:9451  getMemePrice(meme_amount) */\n      tag_140\n        /* \"DEX.sol\":9439:9450  meme_amount */\n      dup5\n        /* \"DEX.sol\":9426:9438  getMemePrice */\n      tag_57\n        /* \"DEX.sol\":9426:9451  getMemePrice(meme_amount) */\n      jump\t// in\n    tag_140:\n        /* \"DEX.sol\":9405:9451  uint256 meme_price = getMemePrice(meme_amount) */\n      swap1\n      pop\n        /* \"DEX.sol\":9483:9491  msgValue */\n      dup2\n        /* \"DEX.sol\":9469:9479  meme_price */\n      dup2\n        /* \"DEX.sol\":9469:9491  meme_price <= msgValue */\n      gt\n      iszero\n        /* \"DEX.sol\":9461:9509  require(meme_price <= msgValue, \"Send More ETH\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4276:4278   */\n      0x20\n        /* \"DEX.sol\":9461:9509  require(meme_price <= msgValue, \"Send More ETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4258:4279   */\n      mstore\n        /* \"#utility.yul\":4315:4317   */\n      0x0d\n        /* \"#utility.yul\":4295:4313   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4288:4318   */\n      mstore\n      shl(0x9b, 0x0a6cadcc8409adee4ca408aa89)\n        /* \"#utility.yul\":4334:4352   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4327:4370   */\n      mstore\n        /* \"#utility.yul\":4387:4405   */\n      0x64\n      add\n        /* \"DEX.sol\":9461:9509  require(meme_price <= msgValue, \"Send More ETH\") */\n      tag_109\n        /* \"#utility.yul\":4074:4411   */\n      jump\n        /* \"DEX.sol\":9461:9509  require(meme_price <= msgValue, \"Send More ETH\") */\n    tag_141:\n        /* \"DEX.sol\":9520:9524  meme */\n      sload(0x01)\n        /* \"DEX.sol\":9520:9560  meme.transfer(ownerAddress, meme_amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4608:4640   */\n      dup6\n      dup2\n      and\n        /* \"DEX.sol\":9520:9560  meme.transfer(ownerAddress, meme_amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":4590:4641   */\n      mstore\n        /* \"#utility.yul\":4657:4675   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4650:4684   */\n      dup8\n      swap1\n      mstore\n        /* \"DEX.sol\":9520:9524  meme */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DEX.sol\":9520:9533  meme.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4563:4581   */\n      0x44\n      add\n        /* \"DEX.sol\":9520:9560  meme.transfer(ownerAddress, meme_amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol\":9570:9600  payable(ownerAddress).transfer */\n      dup4\n      and\n        /* \"DEX.sol\":9570:9623  payable(ownerAddress).transfer(msgValue - meme_price) */\n      0x08fc\n        /* \"DEX.sol\":9601:9622  msgValue - meme_price */\n      tag_150\n        /* \"DEX.sol\":9612:9622  meme_price */\n      dup4\n        /* \"DEX.sol\":9601:9609  msgValue */\n      dup6\n        /* \"DEX.sol\":9601:9622  msgValue - meme_price */\n      tag_115\n      jump\t// in\n    tag_150:\n        /* \"DEX.sol\":9570:9623  payable(ownerAddress).transfer(msgValue - meme_price) */\n      mload(0x40)\n      dup2\n      iszero\n      swap1\n      swap3\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_152\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_152:\n      pop\n        /* \"DEX.sol\":9672:9697  calculateTax(meme_amount) */\n      tag_153\n        /* \"DEX.sol\":9685:9696  meme_amount */\n      dup5\n        /* \"DEX.sol\":9672:9684  calculateTax */\n      tag_154\n        /* \"DEX.sol\":9672:9697  calculateTax(meme_amount) */\n      jump\t// in\n    tag_153:\n        /* \"DEX.sol\":9634:9642  dailyTax */\n      0x03\n        /* \"DEX.sol\":9634:9668  dailyTax[block.timestamp / 1 days] */\n      0x00\n        /* \"DEX.sol\":9643:9667  block.timestamp / 1 days */\n      tag_155\n        /* \"DEX.sol\":9661:9667  1 days */\n      0x015180\n        /* \"DEX.sol\":9643:9658  block.timestamp */\n      timestamp\n        /* \"DEX.sol\":9643:9667  block.timestamp / 1 days */\n      tag_113\n      jump\t// in\n    tag_155:\n        /* \"DEX.sol\":9634:9668  dailyTax[block.timestamp / 1 days] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"DEX.sol\":9634:9697  dailyTax[block.timestamp / 1 days] += calculateTax(meme_amount) */\n      dup3\n      dup3\n      sload\n      tag_156\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_156:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DEX.sol\":9714:9725  meme_amount */\n      dup4\n        /* \"DEX.sol\":9708:9710  _x */\n      0x06\n      0x00\n        /* \"DEX.sol\":9708:9725  _x -= meme_amount */\n      dup3\n      dup3\n      sload\n      tag_157\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_157:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DEX.sol\":9746:9748  _x */\n      sload(0x06)\n        /* \"DEX.sol\":9741:9743  _k */\n      sload(0x05)\n        /* \"DEX.sol\":9741:9748  _k / _x */\n      tag_158\n      swap2\n        /* \"DEX.sol\":9746:9748  _x */\n      swap1\n        /* \"DEX.sol\":9741:9748  _k / _x */\n      tag_113\n      jump\t// in\n    tag_158:\n        /* \"DEX.sol\":9735:9737  _y */\n      0x07\n        /* \"DEX.sol\":9735:9749  _y = (_k / _x) */\n      sstore\n        /* \"DEX.sol\":9765:9807  Buy(ownerAddress, meme_amount, meme_price) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5151:5176   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":5207:5209   */\n      0x20\n        /* \"#utility.yul\":5192:5210   */\n      dup2\n      add\n        /* \"#utility.yul\":5185:5219   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol\":9765:9807  Buy(ownerAddress, meme_amount, meme_price) */\n      dup6\n      and\n      swap2\n      0x1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed\n      swap2\n        /* \"#utility.yul\":5124:5142   */\n      add\n        /* \"DEX.sol\":9765:9807  Buy(ownerAddress, meme_amount, meme_price) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"DEX.sol\":9343:9814  {... */\n      pop\n        /* \"DEX.sol\":9210:9814  function buy(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DEX.sol\":1314:1379  function unpause() external onlyOwner {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_162\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_162:\n        /* \"DEX.sol\":1362:1372  _unpause() */\n      tag_165\n        /* \"DEX.sol\":1362:1370  _unpause */\n      tag_166\n        /* \"DEX.sol\":1362:1372  _unpause() */\n      jump\t// in\n    tag_165:\n        /* \"DEX.sol\":1314:1379  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"DEX.sol\":10356:11044  function sell(uint256 eth_amount, address ownerAddress)... */\n    tag_53:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_168\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_106\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_168:\n        /* \"DEX.sol\":10484:10485  0 */\n      0x00\n        /* \"DEX.sol\":10471:10481  eth_amount */\n      dup3\n        /* \"DEX.sol\":10471:10485  eth_amount > 0 */\n      gt\n        /* \"DEX.sol\":10463:10503  require(eth_amount > 0, \"Send Some ETH\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5432:5434   */\n      0x20\n        /* \"DEX.sol\":10463:10503  require(eth_amount > 0, \"Send Some ETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5414:5435   */\n      mstore\n        /* \"#utility.yul\":5471:5473   */\n      0x0d\n        /* \"#utility.yul\":5451:5469   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5444:5474   */\n      mstore\n      shl(0x9b, 0x0a6cadcc840a6dedaca408aa89)\n        /* \"#utility.yul\":5490:5508   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5483:5526   */\n      mstore\n        /* \"#utility.yul\":5543:5561   */\n      0x64\n      add\n        /* \"DEX.sol\":10463:10503  require(eth_amount > 0, \"Send Some ETH\") */\n      tag_109\n        /* \"#utility.yul\":5230:5567   */\n      jump\n        /* \"DEX.sol\":10463:10503  require(eth_amount > 0, \"Send Some ETH\") */\n    tag_170:\n        /* \"DEX.sol\":10513:10530  uint256 eth_price */\n      0x00\n        /* \"DEX.sol\":10533:10556  getETHPrice(eth_amount) */\n      tag_173\n        /* \"DEX.sol\":10545:10555  eth_amount */\n      dup4\n        /* \"DEX.sol\":10533:10544  getETHPrice */\n      tag_30\n        /* \"DEX.sol\":10533:10556  getETHPrice(eth_amount) */\n      jump\t// in\n    tag_173:\n        /* \"DEX.sol\":10601:10605  meme */\n      sload(0x01)\n        /* \"DEX.sol\":10601:10629  meme.balanceOf(ownerAddress) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1501:1533   */\n      dup6\n      dup2\n      and\n        /* \"DEX.sol\":10601:10629  meme.balanceOf(ownerAddress) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1483:1534   */\n      mstore\n        /* \"DEX.sol\":10513:10556  uint256 eth_price = getETHPrice(eth_amount) */\n      swap3\n      swap4\n      pop\n        /* \"DEX.sol\":10601:10605  meme */\n      swap2\n      and\n      swap1\n        /* \"DEX.sol\":10601:10615  meme.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1456:1474   */\n      0x24\n      add\n        /* \"DEX.sol\":10601:10629  meme.balanceOf(ownerAddress) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_176\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_177\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"DEX.sol\":10588:10597  eth_price */\n      dup2\n        /* \"DEX.sol\":10588:10629  eth_price <= meme.balanceOf(ownerAddress) */\n      gt\n      iszero\n        /* \"DEX.sol\":10567:10681  require(... */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5963:5965   */\n      0x20\n        /* \"DEX.sol\":10567:10681  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5945:5966   */\n      mstore\n        /* \"#utility.yul\":6002:6004   */\n      0x1a\n        /* \"#utility.yul\":5982:6000   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5975:6005   */\n      mstore\n        /* \"#utility.yul\":6041:6069   */\n      0x596f7520646f6e2774206861766520656e6f756768206d656d65000000000000\n        /* \"#utility.yul\":6021:6039   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6014:6070   */\n      mstore\n        /* \"#utility.yul\":6087:6105   */\n      0x64\n      add\n        /* \"DEX.sol\":10567:10681  require(... */\n      tag_109\n        /* \"#utility.yul\":5761:6111   */\n      jump\n        /* \"DEX.sol\":10567:10681  require(... */\n    tag_179:\n        /* \"DEX.sol\":10691:10695  meme */\n      sload(0x01)\n        /* \"DEX.sol\":10691:10748  meme.transferFrom(ownerAddress, address(this), eth_price) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6374:6389   */\n      dup5\n      dup2\n      and\n        /* \"DEX.sol\":10691:10748  meme.transferFrom(ownerAddress, address(this), eth_price) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":6356:6390   */\n      mstore\n        /* \"DEX.sol\":10731:10735  this */\n      address\n        /* \"#utility.yul\":6406:6424   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":6399:6442   */\n      mstore\n        /* \"#utility.yul\":6458:6476   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6451:6485   */\n      dup5\n      swap1\n      mstore\n        /* \"DEX.sol\":10691:10695  meme */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DEX.sol\":10691:10708  meme.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":6291:6309   */\n      0x64\n      add\n        /* \"DEX.sol\":10691:10748  meme.transferFrom(ownerAddress, address(this), eth_price) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_186\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_186:\n      pop\n        /* \"DEX.sol\":10758:10800  payable(ownerAddress).transfer(eth_amount) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol\":10758:10788  payable(ownerAddress).transfer */\n      dup4\n      and\n      swap1\n        /* \"DEX.sol\":10758:10800  payable(ownerAddress).transfer(eth_amount) */\n      dup5\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"DEX.sol\":10789:10799  eth_amount */\n      dup6\n      swap1\n        /* \"DEX.sol\":10758:10800  payable(ownerAddress).transfer(eth_amount) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"DEX.sol\":10789:10799  eth_amount */\n      dup6\n        /* \"DEX.sol\":10758:10788  payable(ownerAddress).transfer */\n      dup9\n        /* \"DEX.sol\":10758:10800  payable(ownerAddress).transfer(eth_amount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_188:\n      pop\n        /* \"DEX.sol\":10946:10956  eth_amount */\n      dup3\n        /* \"DEX.sol\":10940:10942  _y */\n      0x07\n      0x00\n        /* \"DEX.sol\":10940:10956  _y -= eth_amount */\n      dup3\n      dup3\n      sload\n      tag_189\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_189:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DEX.sol\":10977:10979  _y */\n      sload(0x07)\n        /* \"DEX.sol\":10972:10974  _k */\n      sload(0x05)\n        /* \"DEX.sol\":10972:10979  _k / _y */\n      tag_190\n      swap2\n        /* \"DEX.sol\":10977:10979  _y */\n      swap1\n        /* \"DEX.sol\":10972:10979  _k / _y */\n      tag_113\n      jump\t// in\n    tag_190:\n        /* \"DEX.sol\":10966:10968  _x */\n      0x06\n        /* \"DEX.sol\":10966:10980  _x = (_k / _y) */\n      sstore\n        /* \"DEX.sol\":10996:11037  Sell(ownerAddress, eth_price, eth_amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5151:5176   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":5207:5209   */\n      0x20\n        /* \"#utility.yul\":5192:5210   */\n      dup2\n      add\n        /* \"#utility.yul\":5185:5219   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol\":10996:11037  Sell(ownerAddress, eth_price, eth_amount) */\n      dup5\n      and\n      swap2\n      0xed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a\n      swap2\n        /* \"#utility.yul\":5124:5142   */\n      add\n        /* \"DEX.sol\":10996:11037  Sell(ownerAddress, eth_price, eth_amount) */\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"DEX.sol\":10453:11044  {... */\n      pop\n        /* \"DEX.sol\":10356:11044  function sell(uint256 eth_amount, address ownerAddress)... */\n      pop\n      pop\n      jump\t// out\n        /* \"DEX.sol\":7145:7834  function getMemePrice(uint256 meme_amount)... */\n    tag_57:\n        /* \"DEX.sol\":7255:7262  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_193\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_106\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_193:\n        /* \"DEX.sol\":7291:7292  0 */\n      0x00\n        /* \"DEX.sol\":7286:7288  _k */\n      sload(0x05)\n        /* \"DEX.sol\":7286:7292  _k > 0 */\n      gt\n        /* \"DEX.sol\":7278:7317  require(_k > 0, \"Not enough liquidity\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_195:\n        /* \"DEX.sol\":7327:7337  uint256 dx */\n      0x00\n        /* \"DEX.sol\":7351:7361  uint256 dy */\n      dup1\n        /* \"DEX.sol\":7379:7381  _y */\n      sload(0x07)\n        /* \"DEX.sol\":7385:7386  0 */\n      0x00\n        /* \"DEX.sol\":7379:7386  _y == 0 */\n      sub\n        /* \"DEX.sol\":7375:7495  if (_y == 0) {... */\n      tag_197\n      jumpi\n        /* \"DEX.sol\":7416:7427  meme_amount */\n      dup4\n        /* \"DEX.sol\":7412:7413  1 */\n      0x01\n        /* \"DEX.sol\":7407:7409  _k */\n      sload(0x05)\n        /* \"DEX.sol\":7407:7413  _k / 1 */\n      tag_198\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_198:\n        /* \"DEX.sol\":7407:7427  _k / 1 - meme_amount */\n      tag_199\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_199:\n        /* \"DEX.sol\":7402:7427  dx = _k / 1 - meme_amount */\n      swap2\n      pop\n        /* \"DEX.sol\":7375:7495  if (_y == 0) {... */\n      jump(tag_200)\n    tag_197:\n        /* \"DEX.sol\":7473:7484  meme_amount */\n      dup4\n        /* \"DEX.sol\":7468:7470  _y */\n      sload(0x07)\n        /* \"DEX.sol\":7463:7465  _k */\n      sload(0x05)\n        /* \"DEX.sol\":7463:7470  _k / _y */\n      tag_201\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_201:\n        /* \"DEX.sol\":7463:7484  _k / _y - meme_amount */\n      tag_202\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_202:\n        /* \"DEX.sol\":7458:7484  dx = _k / _y - meme_amount */\n      swap2\n      pop\n        /* \"DEX.sol\":7375:7495  if (_y == 0) {... */\n    tag_200:\n        /* \"DEX.sol\":7508:7510  dx */\n      dup2\n        /* \"DEX.sol\":7514:7515  0 */\n      0x00\n        /* \"DEX.sol\":7508:7515  dx == 0 */\n      sub\n        /* \"DEX.sol\":7504:7596  if (dx == 0) {... */\n      tag_203\n      jumpi\n        /* \"DEX.sol\":7541:7542  1 */\n      0x01\n        /* \"DEX.sol\":7536:7538  _k */\n      sload(0x05)\n        /* \"DEX.sol\":7536:7542  _k / 1 */\n      tag_204\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_204:\n        /* \"DEX.sol\":7531:7542  dy = _k / 1 */\n      swap1\n      pop\n        /* \"DEX.sol\":7504:7596  if (dx == 0) {... */\n      jump(tag_205)\n    tag_203:\n        /* \"DEX.sol\":7583:7585  dx */\n      dup2\n        /* \"DEX.sol\":7578:7580  _k */\n      sload(0x05)\n        /* \"DEX.sol\":7578:7585  _k / dx */\n      tag_206\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_206:\n        /* \"DEX.sol\":7573:7585  dy = _k / dx */\n      swap1\n      pop\n        /* \"DEX.sol\":7504:7596  if (dx == 0) {... */\n    tag_205:\n        /* \"DEX.sol\":7605:7634  uint256 eth_price_without_tax */\n      0x00\n        /* \"DEX.sol\":7642:7644  _y */\n      sload(0x07)\n        /* \"DEX.sol\":7637:7639  dy */\n      dup3\n        /* \"DEX.sol\":7637:7644  dy - _y */\n      tag_207\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_207:\n        /* \"DEX.sol\":7605:7644  uint256 eth_price_without_tax = dy - _y */\n      swap1\n      pop\n        /* \"DEX.sol\":7654:7669  uint256 eth_tax */\n      0x00\n        /* \"DEX.sol\":7708:7717  precision */\n      sload(0x08)\n        /* \"DEX.sol\":7697:7704  taxRate */\n      sload(0x09)\n        /* \"DEX.sol\":7673:7694  eth_price_without_tax */\n      dup4\n        /* \"DEX.sol\":7673:7704  eth_price_without_tax * taxRate */\n      tag_208\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_208:\n        /* \"DEX.sol\":7672:7717  (eth_price_without_tax * taxRate) / precision */\n      tag_209\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_209:\n        /* \"DEX.sol\":7654:7717  uint256 eth_tax = (eth_price_without_tax * taxRate) / precision */\n      swap1\n      pop\n        /* \"DEX.sol\":7728:7754  uint256 eth_price_with_tax */\n      0x00\n        /* \"DEX.sol\":7757:7788  eth_price_without_tax + eth_tax */\n      tag_210\n        /* \"DEX.sol\":7654:7717  uint256 eth_tax = (eth_price_without_tax * taxRate) / precision */\n      dup3\n        /* \"DEX.sol\":7757:7778  eth_price_without_tax */\n      dup5\n        /* \"DEX.sol\":7757:7788  eth_price_without_tax + eth_tax */\n      tag_128\n      jump\t// in\n    tag_210:\n        /* \"DEX.sol\":7728:7788  uint256 eth_price_with_tax = eth_price_without_tax + eth_tax */\n      swap1\n      pop\n        /* \"DEX.sol\":7805:7827  eth_price_with_tax + 1 */\n      tag_127\n        /* \"DEX.sol\":7728:7788  uint256 eth_price_with_tax = eth_price_without_tax + eth_tax */\n      dup2\n        /* \"DEX.sol\":7826:7827  1 */\n      0x01\n        /* \"DEX.sol\":7805:7827  eth_price_with_tax + 1 */\n      tag_128\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_214\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"DEX.sol\":1247:1308  function pause() external onlyOwner {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_219:\n        /* \"DEX.sol\":1293:1301  _pause() */\n      tag_165\n        /* \"DEX.sol\":1293:1299  _pause */\n      tag_222\n        /* \"DEX.sol\":1293:1301  _pause() */\n      jump\t// in\n        /* \"DEX.sol\":5380:6176  function _distributeTax(uint256 poolIndex) public view returns (uint256) {... */\n    tag_82:\n        /* \"DEX.sol\":5444:5451  uint256 */\n      0x00\n      dup1\n      dup1\n        /* \"DEX.sol\":5497:5505  dailyTax */\n      0x03\n        /* \"DEX.sol\":5444:5451  uint256 */\n      dup2\n        /* \"DEX.sol\":5506:5530  block.timestamp / 1 days */\n      tag_225\n        /* \"DEX.sol\":5524:5530  1 days */\n      0x015180\n        /* \"DEX.sol\":5506:5521  block.timestamp */\n      timestamp\n        /* \"DEX.sol\":5506:5530  block.timestamp / 1 days */\n      tag_113\n      jump\t// in\n    tag_225:\n        /* \"DEX.sol\":5497:5531  dailyTax[block.timestamp / 1 days] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"DEX.sol\":5497:5535  dailyTax[block.timestamp / 1 days] > 0 */\n      gt\n        /* \"DEX.sol\":5493:6145  if (dailyTax[block.timestamp / 1 days] > 0) {... */\n      iszero\n      tag_226\n      jumpi\n        /* \"DEX.sol\":5590:5600  msg.sender */\n      caller\n        /* \"DEX.sol\":5551:5579  Stack_Struct[] memory stacks */\n      0x00\n        /* \"DEX.sol\":5582:5601  Stacked[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol\":5582:5589  Stacked */\n      0x02\n        /* \"DEX.sol\":5582:5601  Stacked[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DEX.sol\":5551:5601  Stack_Struct[] memory stacks = Stacked[msg.sender] */\n      dup1\n      sload\n      dup3\n      mload\n      dup2\n      dup6\n      mul\n      dup2\n      add\n      dup6\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      dup4\n      mstore\n      swap2\n      swap3\n        /* \"DEX.sol\":5582:5601  Stacked[msg.sender] */\n      swap1\n      swap2\n        /* \"DEX.sol\":5551:5601  Stack_Struct[] memory stacks = Stacked[msg.sender] */\n      swap1\n        /* \"DEX.sol\":5551:5579  Stack_Struct[] memory stacks */\n      dup5\n      swap1\n        /* \"DEX.sol\":5551:5601  Stack_Struct[] memory stacks = Stacked[msg.sender] */\n      dup5\n      add\n    tag_227:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_228\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_227)\n    tag_228:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"DEX.sol\":5635:5641  stacks */\n      dup1\n        /* \"DEX.sol\":5635:5648  stacks.length */\n      mload\n        /* \"DEX.sol\":5623:5632  poolIndex */\n      dup5\n        /* \"DEX.sol\":5623:5648  poolIndex < stacks.length */\n      lt\n        /* \"DEX.sol\":5615:5671  require(poolIndex < stacks.length, \"Invalid pool index\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6698:6700   */\n      0x20\n        /* \"DEX.sol\":5615:5671  require(poolIndex < stacks.length, \"Invalid pool index\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6680:6701   */\n      mstore\n        /* \"#utility.yul\":6737:6739   */\n      0x12\n        /* \"#utility.yul\":6717:6735   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6710:6740   */\n      mstore\n      shl(0x73, 0x092dcecc2d8d2c840e0deded840d2dcc8caf)\n        /* \"#utility.yul\":6756:6774   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6749:6797   */\n      mstore\n        /* \"#utility.yul\":6814:6832   */\n      0x64\n      add\n        /* \"DEX.sol\":5615:5671  require(poolIndex < stacks.length, \"Invalid pool index\") */\n      tag_109\n        /* \"#utility.yul\":6496:6838   */\n      jump\n        /* \"DEX.sol\":5615:5671  require(poolIndex < stacks.length, \"Invalid pool index\") */\n    tag_230:\n        /* \"DEX.sol\":5686:5708  Stack_Struct memory ss */\n      0x00\n        /* \"DEX.sol\":5711:5717  stacks */\n      dup2\n        /* \"DEX.sol\":5718:5727  poolIndex */\n      dup6\n        /* \"DEX.sol\":5711:5728  stacks[poolIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_234\n      jumpi\n      tag_234\n      tag_235\n      jump\t// in\n    tag_234:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"DEX.sol\":5686:5728  Stack_Struct memory ss = stacks[poolIndex] */\n      swap1\n      pop\n        /* \"DEX.sol\":5742:5759  uint256 poolShare */\n      0x00\n        /* \"DEX.sol\":5793:5802  originalX */\n      sload(0x0a)\n        /* \"DEX.sol\":5780:5789  precision */\n      sload(0x08)\n        /* \"DEX.sol\":5763:5765  ss */\n      dup4\n        /* \"DEX.sol\":5763:5777  ss.meme_amount */\n      0x00\n      add\n      mload\n        /* \"DEX.sol\":5763:5789  ss.meme_amount * precision */\n      tag_236\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_236:\n        /* \"DEX.sol\":5762:5802  (ss.meme_amount * precision) / originalX */\n      tag_237\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_237:\n        /* \"DEX.sol\":5840:5847  ss.time */\n      0x40\n      dup4\n      add\n      mload\n        /* \"DEX.sol\":5742:5802  uint256 poolShare = (ss.meme_amount * precision) / originalX */\n      swap1\n      swap2\n      pop\n        /* \"DEX.sol\":5817:5837  uint256 creationTime */\n      0x00\n        /* \"DEX.sol\":5882:5906  block.timestamp / 1 days */\n      tag_238\n        /* \"DEX.sol\":5900:5906  1 days */\n      0x015180\n        /* \"DEX.sol\":5882:5897  block.timestamp */\n      timestamp\n        /* \"DEX.sol\":5882:5906  block.timestamp / 1 days */\n      tag_113\n      jump\t// in\n    tag_238:\n        /* \"DEX.sol\":5861:5906  uint256 currentDay = block.timestamp / 1 days */\n      swap1\n      pop\n        /* \"DEX.sol\":5943:5954  uint256 day */\n      0x00\n        /* \"DEX.sol\":5957:5978  creationTime / 1 days */\n      tag_242\n        /* \"DEX.sol\":5972:5978  1 days */\n      0x015180\n        /* \"DEX.sol\":5957:5969  creationTime */\n      dup5\n        /* \"DEX.sol\":5957:5978  creationTime / 1 days */\n      tag_113\n      jump\t// in\n    tag_242:\n        /* \"DEX.sol\":5943:5978  uint256 day = creationTime / 1 days */\n      swap1\n      pop\n        /* \"DEX.sol\":5921:6135  for (... */\n    tag_239:\n        /* \"DEX.sol\":6003:6013  currentDay */\n      dup2\n        /* \"DEX.sol\":5996:5999  day */\n      dup2\n        /* \"DEX.sol\":5996:6013  day <= currentDay */\n      gt\n        /* \"DEX.sol\":5921:6135  for (... */\n      tag_240\n      jumpi\n        /* \"DEX.sol\":6111:6120  precision */\n      sload(0x08)\n        /* \"DEX.sol\":6094:6107  dailyTax[day] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"DEX.sol\":6094:6102  dailyTax */\n      0x03\n        /* \"DEX.sol\":6094:6107  dailyTax[day] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"DEX.sol\":6082:6107  poolShare * dailyTax[day] */\n      tag_243\n      swap1\n        /* \"DEX.sol\":6082:6091  poolShare */\n      dup7\n        /* \"DEX.sol\":6082:6107  poolShare * dailyTax[day] */\n      tag_125\n      jump\t// in\n    tag_243:\n        /* \"DEX.sol\":6081:6120  (poolShare * dailyTax[day]) / precision */\n      tag_244\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_244:\n        /* \"DEX.sol\":6069:6120  taxShare += (poolShare * dailyTax[day]) / precision */\n      tag_245\n      swap1\n      dup9\n      tag_128\n      jump\t// in\n    tag_245:\n      swap7\n      pop\n        /* \"DEX.sol\":6031:6036  day++ */\n      dup1\n      tag_246\n      dup2\n      tag_247\n      jump\t// in\n    tag_246:\n      swap2\n      pop\n      pop\n        /* \"DEX.sol\":5921:6135  for (... */\n      jump(tag_239)\n    tag_240:\n      pop\n        /* \"DEX.sol\":5537:6145  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"DEX.sol\":5493:6145  if (dailyTax[block.timestamp / 1 days] > 0) {... */\n    tag_226:\n        /* \"DEX.sol\":6161:6169  taxShare */\n      swap3\n        /* \"DEX.sol\":5380:6176  function _distributeTax(uint256 poolIndex) public view returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"DEX.sol\":9820:10350  function buy(uint256 meme_amount) public payable whenNotPaused {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_249\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_106\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_249:\n        /* \"DEX.sol\":9915:9916  0 */\n      0x00\n        /* \"DEX.sol\":9901:9912  meme_amount */\n      dup2\n        /* \"DEX.sol\":9901:9916  meme_amount > 0 */\n      gt\n        /* \"DEX.sol\":9893:9935  require(meme_amount > 0, \"Send Some Meme\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"DEX.sol\":9893:9935  require(meme_amount > 0, \"Send Some Meme\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3915:3936   */\n      mstore\n        /* \"#utility.yul\":3972:3974   */\n      0x0e\n        /* \"#utility.yul\":3952:3970   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3945:3975   */\n      mstore\n      shl(0x90, 0x53656e6420536f6d65204d656d65)\n        /* \"#utility.yul\":3991:4009   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3984:4028   */\n      mstore\n        /* \"#utility.yul\":4045:4063   */\n      0x64\n      add\n        /* \"DEX.sol\":9893:9935  require(meme_amount > 0, \"Send Some Meme\") */\n      tag_109\n        /* \"#utility.yul\":3731:4069   */\n      jump\n        /* \"DEX.sol\":9893:9935  require(meme_amount > 0, \"Send Some Meme\") */\n    tag_251:\n        /* \"DEX.sol\":9945:9963  uint256 meme_price */\n      0x00\n        /* \"DEX.sol\":9966:9991  getMemePrice(meme_amount) */\n      tag_253\n        /* \"DEX.sol\":9979:9990  meme_amount */\n      dup3\n        /* \"DEX.sol\":9966:9978  getMemePrice */\n      tag_57\n        /* \"DEX.sol\":9966:9991  getMemePrice(meme_amount) */\n      jump\t// in\n    tag_253:\n        /* \"DEX.sol\":9945:9991  uint256 meme_price = getMemePrice(meme_amount) */\n      swap1\n      pop\n        /* \"DEX.sol\":10023:10032  msg.value */\n      callvalue\n        /* \"DEX.sol\":10009:10019  meme_price */\n      dup2\n        /* \"DEX.sol\":10009:10032  meme_price <= msg.value */\n      gt\n      iszero\n        /* \"DEX.sol\":10001:10050  require(meme_price <= msg.value, \"Send More ETH\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4276:4278   */\n      0x20\n        /* \"DEX.sol\":10001:10050  require(meme_price <= msg.value, \"Send More ETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4258:4279   */\n      mstore\n        /* \"#utility.yul\":4315:4317   */\n      0x0d\n        /* \"#utility.yul\":4295:4313   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4288:4318   */\n      mstore\n      shl(0x9b, 0x0a6cadcc8409adee4ca408aa89)\n        /* \"#utility.yul\":4334:4352   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4327:4370   */\n      mstore\n        /* \"#utility.yul\":4387:4405   */\n      0x64\n      add\n        /* \"DEX.sol\":10001:10050  require(meme_price <= msg.value, \"Send More ETH\") */\n      tag_109\n        /* \"#utility.yul\":4074:4411   */\n      jump\n        /* \"DEX.sol\":10001:10050  require(meme_price <= msg.value, \"Send More ETH\") */\n    tag_254:\n        /* \"DEX.sol\":10061:10065  meme */\n      sload(0x01)\n        /* \"DEX.sol\":10061:10099  meme.transfer(msg.sender, meme_amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"DEX.sol\":10075:10085  msg.sender */\n      caller\n        /* \"DEX.sol\":10061:10099  meme.transfer(msg.sender, meme_amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4590:4641   */\n      mstore\n        /* \"#utility.yul\":4657:4675   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4650:4684   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol\":10061:10065  meme */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DEX.sol\":10061:10074  meme.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4563:4581   */\n      0x44\n      add\n        /* \"DEX.sol\":10061:10099  meme.transfer(msg.sender, meme_amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_258\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_258:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_259\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_259:\n      pop\n        /* \"DEX.sol\":10117:10127  msg.sender */\n      caller\n        /* \"DEX.sol\":10109:10161  payable(msg.sender).transfer(msg.value - meme_price) */\n      0x08fc\n        /* \"DEX.sol\":10138:10160  msg.value - meme_price */\n      tag_260\n        /* \"DEX.sol\":10150:10160  meme_price */\n      dup4\n        /* \"DEX.sol\":10138:10147  msg.value */\n      callvalue\n        /* \"DEX.sol\":10138:10160  msg.value - meme_price */\n      tag_115\n      jump\t// in\n    tag_260:\n        /* \"DEX.sol\":10109:10161  payable(msg.sender).transfer(msg.value - meme_price) */\n      mload(0x40)\n      dup2\n      iszero\n      swap1\n      swap3\n      mul\n      swap2\n      0x00\n      dup2\n      dup2\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_262\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_262:\n      pop\n        /* \"DEX.sol\":10210:10235  calculateTax(meme_amount) */\n      tag_263\n        /* \"DEX.sol\":10223:10234  meme_amount */\n      dup3\n        /* \"DEX.sol\":10210:10222  calculateTax */\n      tag_154\n        /* \"DEX.sol\":10210:10235  calculateTax(meme_amount) */\n      jump\t// in\n    tag_263:\n        /* \"DEX.sol\":10172:10180  dailyTax */\n      0x03\n        /* \"DEX.sol\":10172:10206  dailyTax[block.timestamp / 1 days] */\n      0x00\n        /* \"DEX.sol\":10181:10205  block.timestamp / 1 days */\n      tag_264\n        /* \"DEX.sol\":10199:10205  1 days */\n      0x015180\n        /* \"DEX.sol\":10181:10196  block.timestamp */\n      timestamp\n        /* \"DEX.sol\":10181:10205  block.timestamp / 1 days */\n      tag_113\n      jump\t// in\n    tag_264:\n        /* \"DEX.sol\":10172:10206  dailyTax[block.timestamp / 1 days] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"DEX.sol\":10172:10235  dailyTax[block.timestamp / 1 days] += calculateTax(meme_amount) */\n      dup3\n      dup3\n      sload\n      tag_265\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_265:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DEX.sol\":10252:10263  meme_amount */\n      dup2\n        /* \"DEX.sol\":10246:10248  _x */\n      0x06\n      0x00\n        /* \"DEX.sol\":10246:10263  _x -= meme_amount */\n      dup3\n      dup3\n      sload\n      tag_266\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_266:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DEX.sol\":10284:10286  _x */\n      sload(0x06)\n        /* \"DEX.sol\":10279:10281  _k */\n      sload(0x05)\n        /* \"DEX.sol\":10279:10286  _k / _x */\n      tag_267\n      swap2\n        /* \"DEX.sol\":10284:10286  _x */\n      swap1\n        /* \"DEX.sol\":10279:10286  _k / _x */\n      tag_113\n      jump\t// in\n    tag_267:\n        /* \"DEX.sol\":10273:10275  _y */\n      0x07\n        /* \"DEX.sol\":10273:10287  _y = (_k / _x) */\n      sstore\n        /* \"DEX.sol\":10303:10343  Buy(msg.sender, meme_amount, meme_price) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5151:5176   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":5207:5209   */\n      0x20\n        /* \"#utility.yul\":5192:5210   */\n      dup2\n      add\n        /* \"#utility.yul\":5185:5219   */\n      dup4\n      swap1\n      mstore\n        /* \"DEX.sol\":10307:10317  msg.sender */\n      caller\n      swap2\n        /* \"DEX.sol\":10303:10343  Buy(msg.sender, meme_amount, meme_price) */\n      0x1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed\n      swap2\n        /* \"#utility.yul\":5124:5142   */\n      add\n        /* \"DEX.sol\":10303:10343  Buy(msg.sender, meme_amount, meme_price) */\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"DEX.sol\":9883:10350  {... */\n      pop\n        /* \"DEX.sol\":9820:10350  function buy(uint256 meme_amount) public payable whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"DEX.sol\":1563:1907  function stack(uint256 meme_amount) public payable whenNotPaused {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_270\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_106\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_270:\n        /* \"DEX.sol\":1660:1661  0 */\n      0x00\n        /* \"DEX.sol\":1646:1657  meme_amount */\n      dup2\n        /* \"DEX.sol\":1646:1661  meme_amount > 0 */\n      gt\n        /* \"DEX.sol\":1638:1680  require(meme_amount > 0, \"Send more MEME\") */\n      tag_272\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7317:7319   */\n      0x20\n        /* \"DEX.sol\":1638:1680  require(meme_amount > 0, \"Send more MEME\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7299:7320   */\n      mstore\n        /* \"#utility.yul\":7356:7358   */\n      0x0e\n        /* \"#utility.yul\":7336:7354   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7329:7359   */\n      mstore\n      shl(0x90, 0x53656e64206d6f7265204d454d45)\n        /* \"#utility.yul\":7375:7393   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7368:7412   */\n      mstore\n        /* \"#utility.yul\":7429:7447   */\n      0x64\n      add\n        /* \"DEX.sol\":1638:1680  require(meme_amount > 0, \"Send more MEME\") */\n      tag_109\n        /* \"#utility.yul\":7115:7453   */\n      jump\n        /* \"DEX.sol\":1638:1680  require(meme_amount > 0, \"Send more MEME\") */\n    tag_272:\n        /* \"DEX.sol\":1710:1711  0 */\n      0x00\n        /* \"DEX.sol\":1698:1707  msg.value */\n      callvalue\n        /* \"DEX.sol\":1698:1711  msg.value > 0 */\n      gt\n        /* \"DEX.sol\":1690:1729  require(msg.value > 0, \"Send more ETH\") */\n      tag_275\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7660:7662   */\n      0x20\n        /* \"DEX.sol\":1690:1729  require(msg.value > 0, \"Send more ETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7642:7663   */\n      mstore\n        /* \"#utility.yul\":7699:7701   */\n      0x0d\n        /* \"#utility.yul\":7679:7697   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7672:7702   */\n      mstore\n      shl(0x9b, 0x0a6cadcc840dadee4ca408aa89)\n        /* \"#utility.yul\":7718:7736   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7711:7754   */\n      mstore\n        /* \"#utility.yul\":7771:7789   */\n      0x64\n      add\n        /* \"DEX.sol\":1690:1729  require(msg.value > 0, \"Send more ETH\") */\n      tag_109\n        /* \"#utility.yul\":7458:7795   */\n      jump\n        /* \"DEX.sol\":1690:1729  require(msg.value > 0, \"Send more ETH\") */\n    tag_275:\n        /* \"DEX.sol\":1802:1813  meme_amount */\n      dup1\n        /* \"DEX.sol\":1789:1798  precision */\n      sload(0x08)\n        /* \"DEX.sol\":1777:1786  msg.value */\n      callvalue\n        /* \"DEX.sol\":1777:1798  msg.value * precision */\n      tag_278\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_278:\n        /* \"DEX.sol\":1776:1813  (msg.value * precision) / meme_amount */\n      tag_279\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_279:\n        /* \"DEX.sol\":1760:1772  stackingRate */\n      sload(0x04)\n        /* \"DEX.sol\":1760:1813  stackingRate <= (msg.value * precision) / meme_amount */\n      gt\n      iszero\n        /* \"DEX.sol\":1739:1860  require(... */\n      tag_280\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8002:8004   */\n      0x20\n        /* \"DEX.sol\":1739:1860  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7984:8005   */\n      mstore\n        /* \"#utility.yul\":8041:8043   */\n      0x15\n        /* \"#utility.yul\":8021:8039   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8014:8044   */\n      mstore\n      shl(0x5a, 0x14dd1858dada5b99c814985d19481b9bdd081b595d)\n        /* \"#utility.yul\":8060:8078   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8053:8104   */\n      mstore\n        /* \"#utility.yul\":8121:8139   */\n      0x64\n      add\n        /* \"DEX.sol\":1739:1860  require(... */\n      tag_109\n        /* \"#utility.yul\":7800:8145   */\n      jump\n        /* \"DEX.sol\":1739:1860  require(... */\n    tag_280:\n        /* \"DEX.sol\":1870:1900  _stack(meme_amount, msg.value) */\n      tag_132\n        /* \"DEX.sol\":1877:1888  meme_amount */\n      dup2\n        /* \"DEX.sol\":1890:1899  msg.value */\n      callvalue\n        /* \"DEX.sol\":1870:1876  _stack */\n      tag_284\n        /* \"DEX.sol\":1870:1900  _stack(meme_amount, msg.value) */\n      jump\t// in\n        /* \"DEX.sol\":11050:11688  function sell(uint256 eth_amount) public whenNotPaused {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_286\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_106\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_286:\n        /* \"DEX.sol\":11136:11137  0 */\n      0x00\n        /* \"DEX.sol\":11123:11133  eth_amount */\n      dup2\n        /* \"DEX.sol\":11123:11137  eth_amount > 0 */\n      gt\n        /* \"DEX.sol\":11115:11155  require(eth_amount > 0, \"Send Some ETH\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5432:5434   */\n      0x20\n        /* \"DEX.sol\":11115:11155  require(eth_amount > 0, \"Send Some ETH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5414:5435   */\n      mstore\n        /* \"#utility.yul\":5471:5473   */\n      0x0d\n        /* \"#utility.yul\":5451:5469   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5444:5474   */\n      mstore\n      shl(0x9b, 0x0a6cadcc840a6dedaca408aa89)\n        /* \"#utility.yul\":5490:5508   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5483:5526   */\n      mstore\n        /* \"#utility.yul\":5543:5561   */\n      0x64\n      add\n        /* \"DEX.sol\":11115:11155  require(eth_amount > 0, \"Send Some ETH\") */\n      tag_109\n        /* \"#utility.yul\":5230:5567   */\n      jump\n        /* \"DEX.sol\":11115:11155  require(eth_amount > 0, \"Send Some ETH\") */\n    tag_288:\n        /* \"DEX.sol\":11165:11182  uint256 eth_price */\n      0x00\n        /* \"DEX.sol\":11185:11208  getETHPrice(eth_amount) */\n      tag_290\n        /* \"DEX.sol\":11197:11207  eth_amount */\n      dup3\n        /* \"DEX.sol\":11185:11196  getETHPrice */\n      tag_30\n        /* \"DEX.sol\":11185:11208  getETHPrice(eth_amount) */\n      jump\t// in\n    tag_290:\n        /* \"DEX.sol\":11253:11257  meme */\n      sload(0x01)\n        /* \"DEX.sol\":11253:11279  meme.balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"DEX.sol\":11268:11278  msg.sender */\n      caller\n        /* \"DEX.sol\":11253:11279  meme.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1483:1534   */\n      mstore\n        /* \"DEX.sol\":11165:11208  uint256 eth_price = getETHPrice(eth_amount) */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol\":11253:11257  meme */\n      and\n      swap1\n        /* \"DEX.sol\":11253:11267  meme.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1456:1474   */\n      0x24\n      add\n        /* \"DEX.sol\":11253:11279  meme.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_293\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_293:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_294\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_294:\n        /* \"DEX.sol\":11240:11249  eth_price */\n      dup2\n        /* \"DEX.sol\":11240:11279  eth_price <= meme.balanceOf(msg.sender) */\n      gt\n      iszero\n        /* \"DEX.sol\":11219:11331  require(... */\n      tag_295\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5963:5965   */\n      0x20\n        /* \"DEX.sol\":11219:11331  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5945:5966   */\n      mstore\n        /* \"#utility.yul\":6002:6004   */\n      0x1a\n        /* \"#utility.yul\":5982:6000   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5975:6005   */\n      mstore\n        /* \"#utility.yul\":6041:6069   */\n      0x596f7520646f6e2774206861766520656e6f756768206d656d65000000000000\n        /* \"#utility.yul\":6021:6039   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6014:6070   */\n      mstore\n        /* \"#utility.yul\":6087:6105   */\n      0x64\n      add\n        /* \"DEX.sol\":11219:11331  require(... */\n      tag_109\n        /* \"#utility.yul\":5761:6111   */\n      jump\n        /* \"DEX.sol\":11219:11331  require(... */\n    tag_295:\n        /* \"DEX.sol\":11341:11345  meme */\n      sload(0x01)\n        /* \"DEX.sol\":11341:11396  meme.transferFrom(msg.sender, address(this), eth_price) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"DEX.sol\":11359:11369  msg.sender */\n      caller\n        /* \"DEX.sol\":11341:11396  meme.transferFrom(msg.sender, address(this), eth_price) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6356:6390   */\n      mstore\n        /* \"DEX.sol\":11379:11383  this */\n      address\n        /* \"#utility.yul\":6406:6424   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6399:6442   */\n      mstore\n        /* \"#utility.yul\":6458:6476   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6451:6485   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol\":11341:11345  meme */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DEX.sol\":11341:11358  meme.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":6291:6309   */\n      0x64\n      add\n        /* \"DEX.sol\":11341:11396  meme.transferFrom(msg.sender, address(this), eth_price) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_299\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_299:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_300\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_300:\n      pop\n        /* \"DEX.sol\":11406:11446  payable(msg.sender).transfer(eth_amount) */\n      mload(0x40)\n        /* \"DEX.sol\":11414:11424  msg.sender */\n      caller\n      swap1\n        /* \"DEX.sol\":11406:11446  payable(msg.sender).transfer(eth_amount) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"DEX.sol\":11435:11445  eth_amount */\n      dup5\n      swap1\n        /* \"DEX.sol\":11406:11446  payable(msg.sender).transfer(eth_amount) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"DEX.sol\":11435:11445  eth_amount */\n      dup6\n        /* \"DEX.sol\":11414:11424  msg.sender */\n      dup9\n        /* \"DEX.sol\":11406:11446  payable(msg.sender).transfer(eth_amount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_302\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_302:\n      pop\n        /* \"DEX.sol\":11592:11602  eth_amount */\n      dup2\n        /* \"DEX.sol\":11586:11588  _y */\n      0x07\n      0x00\n        /* \"DEX.sol\":11586:11602  _y -= eth_amount */\n      dup3\n      dup3\n      sload\n      tag_303\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_303:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DEX.sol\":11623:11625  _y */\n      sload(0x07)\n        /* \"DEX.sol\":11618:11620  _k */\n      sload(0x05)\n        /* \"DEX.sol\":11618:11625  _k / _y */\n      tag_304\n      swap2\n        /* \"DEX.sol\":11623:11625  _y */\n      swap1\n        /* \"DEX.sol\":11618:11625  _k / _y */\n      tag_113\n      jump\t// in\n    tag_304:\n        /* \"DEX.sol\":11612:11614  _x */\n      0x06\n        /* \"DEX.sol\":11612:11626  _x = (_k / _y) */\n      sstore\n        /* \"DEX.sol\":11642:11681  Sell(msg.sender, eth_price, eth_amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5151:5176   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":5207:5209   */\n      0x20\n        /* \"#utility.yul\":5192:5210   */\n      dup2\n      add\n        /* \"#utility.yul\":5185:5219   */\n      dup5\n      swap1\n      mstore\n        /* \"DEX.sol\":11647:11657  msg.sender */\n      caller\n      swap2\n        /* \"DEX.sol\":11642:11681  Sell(msg.sender, eth_price, eth_amount) */\n      0xed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a\n      swap2\n        /* \"#utility.yul\":5124:5142   */\n      add\n        /* \"DEX.sol\":11642:11681  Sell(msg.sender, eth_price, eth_amount) */\n      tag_268\n        /* \"#utility.yul\":4977:5225   */\n      jump\n        /* \"DEX.sol\":1449:1557  function getStacks() public view returns (Stack_Struct[] memory) {... */\n    tag_96:\n        /* \"DEX.sol\":1539:1549  msg.sender */\n      caller\n        /* \"DEX.sol\":1531:1550  Stacked[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol\":1531:1538  Stacked */\n      0x02\n        /* \"DEX.sol\":1531:1550  Stacked[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"DEX.sol\":1524:1550  return Stacked[msg.sender] */\n      dup1\n      sload\n      dup3\n      mload\n      dup2\n      dup6\n      mul\n      dup2\n      add\n      dup6\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      dup4\n      mstore\n        /* \"DEX.sol\":1491:1512  Stack_Struct[] memory */\n      0x60\n      swap5\n        /* \"DEX.sol\":1524:1550  return Stacked[msg.sender] */\n      swap3\n      swap4\n        /* \"DEX.sol\":1531:1550  Stacked[msg.sender] */\n      swap2\n      swap3\n        /* \"DEX.sol\":1524:1550  return Stacked[msg.sender] */\n      swap1\n      swap2\n      dup5\n      add\n    tag_307:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_308\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_307)\n    tag_308:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"DEX.sol\":1449:1557  function getStacks() public view returns (Stack_Struct[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_311\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_163\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_311:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8352:8354   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8334:8355   */\n      mstore\n        /* \"#utility.yul\":8391:8393   */\n      0x26\n        /* \"#utility.yul\":8371:8389   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8364:8394   */\n      mstore\n        /* \"#utility.yul\":8430:8464   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8410:8428   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8403:8465   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":8481:8499   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8474:8510   */\n      mstore\n        /* \"#utility.yul\":8527:8546   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_109\n        /* \"#utility.yul\":8150:8552   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_313:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8759:8761   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8741:8762   */\n      mstore\n        /* \"#utility.yul\":8798:8800   */\n      0x10\n        /* \"#utility.yul\":8778:8796   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8771:8801   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":8817:8835   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8810:8856   */\n      mstore\n        /* \"#utility.yul\":8873:8891   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_109\n        /* \"#utility.yul\":8557:8897   */\n      jump\n        /* \"DEX.sol\":2628:3814  function _unstack(uint256 index) internal {... */\n    tag_133:\n        /* \"DEX.sol\":2704:2714  msg.sender */\n      caller\n        /* \"DEX.sol\":2696:2715  Stacked[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol\":2696:2703  Stacked */\n      0x02\n        /* \"DEX.sol\":2696:2715  Stacked[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DEX.sol\":2696:2722  Stacked[msg.sender].length */\n      sload\n        /* \"DEX.sol\":2688:2722  index < Stacked[msg.sender].length */\n      dup2\n      lt\n        /* \"DEX.sol\":2680:2746  require(index < Stacked[msg.sender].length, \"Index out of bounds\") */\n      tag_323\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9104:9106   */\n      0x20\n        /* \"DEX.sol\":2680:2746  require(index < Stacked[msg.sender].length, \"Index out of bounds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9086:9107   */\n      mstore\n        /* \"#utility.yul\":9143:9145   */\n      0x13\n        /* \"#utility.yul\":9123:9141   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9116:9146   */\n      mstore\n      shl(0x68, 0x496e646578206f7574206f6620626f756e6473)\n        /* \"#utility.yul\":9162:9180   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9155:9204   */\n      mstore\n        /* \"#utility.yul\":9221:9239   */\n      0x64\n      add\n        /* \"DEX.sol\":2680:2746  require(index < Stacked[msg.sender].length, \"Index out of bounds\") */\n      tag_109\n        /* \"#utility.yul\":8902:9245   */\n      jump\n        /* \"DEX.sol\":2680:2746  require(index < Stacked[msg.sender].length, \"Index out of bounds\") */\n    tag_323:\n        /* \"DEX.sol\":2790:2800  msg.sender */\n      caller\n        /* \"DEX.sol\":2757:2779  Stack_Struct memory ss */\n      0x00\n        /* \"DEX.sol\":2782:2801  Stacked[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol\":2782:2789  Stacked */\n      0x02\n        /* \"DEX.sol\":2782:2801  Stacked[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"DEX.sol\":2782:2808  Stacked[msg.sender][index] */\n      dup1\n      sload\n        /* \"DEX.sol\":2802:2807  index */\n      dup4\n      swap1\n        /* \"DEX.sol\":2782:2808  Stacked[msg.sender][index] */\n      dup2\n      lt\n      tag_327\n      jumpi\n      tag_327\n      tag_235\n      jump\t// in\n    tag_327:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"DEX.sol\":2757:2808  Stack_Struct memory ss = Stacked[msg.sender][index] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"DEX.sol\":2819:2830  uint256 tax */\n      0x00\n        /* \"DEX.sol\":2833:2854  _distributeTax(index) */\n      tag_329\n        /* \"DEX.sol\":2848:2853  index */\n      dup4\n        /* \"DEX.sol\":2833:2847  _distributeTax */\n      tag_82\n        /* \"DEX.sol\":2833:2854  _distributeTax(index) */\n      jump\t// in\n    tag_329:\n        /* \"DEX.sol\":2889:2903  ss.meme_amount */\n      dup3\n      mload\n        /* \"DEX.sol\":2937:2950  ss.eth_amount */\n      0x20\n      dup5\n      add\n      mload\n        /* \"DEX.sol\":2819:2854  uint256 tax = _distributeTax(index) */\n      swap2\n      swap3\n      pop\n        /* \"DEX.sol\":2889:2903  ss.meme_amount */\n      swap1\n        /* \"DEX.sol\":2864:2886  uint256 meme_to_return */\n      0x00\n      swap1\n        /* \"DEX.sol\":2937:2956  ss.eth_amount + tax */\n      tag_330\n      swap1\n        /* \"DEX.sol\":2819:2854  uint256 tax = _distributeTax(index) */\n      dup5\n      swap1\n        /* \"DEX.sol\":2937:2956  ss.eth_amount + tax */\n      tag_128\n      jump\t// in\n    tag_330:\n        /* \"DEX.sol\":2978:2980  _x */\n      sload(0x06)\n        /* \"DEX.sol\":2966:2975  originalX */\n      0x0a\n        /* \"DEX.sol\":2966:2980  originalX = _x */\n      sstore\n        /* \"DEX.sol\":3030:3034  meme */\n      sload(0x01)\n        /* \"DEX.sol\":3030:3059  meme.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"DEX.sol\":3053:3057  this */\n      address\n        /* \"DEX.sol\":3030:3059  meme.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1483:1534   */\n      mstore\n        /* \"DEX.sol\":2913:2956  uint256 eth_to_return = ss.eth_amount + tax */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol\":3030:3034  meme */\n      and\n      swap1\n        /* \"DEX.sol\":3030:3044  meme.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1456:1474   */\n      0x24\n      add\n        /* \"DEX.sol\":3030:3059  meme.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_333\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_333:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_334\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_334:\n        /* \"DEX.sol\":3012:3026  meme_to_return */\n      dup3\n        /* \"DEX.sol\":3012:3059  meme_to_return <= meme.balanceOf(address(this)) */\n      gt\n      iszero\n        /* \"DEX.sol\":2991:3160  require(... */\n      tag_335\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9452:9454   */\n      0x20\n        /* \"DEX.sol\":2991:3160  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9434:9455   */\n      mstore\n        /* \"#utility.yul\":9491:9493   */\n      0x4b\n        /* \"#utility.yul\":9471:9489   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9464:9494   */\n      mstore\n        /* \"#utility.yul\":9530:9564   */\n      0x536f7272792043757272656e746c79207468697320636f6e747261637420646f\n        /* \"#utility.yul\":9510:9528   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9503:9565   */\n      mstore\n        /* \"#utility.yul\":9601:9635   */\n      0x65736e27742068617665204d656d6520746f2072657475726e2c20436865636b\n        /* \"#utility.yul\":9581:9599   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9574:9636   */\n      mstore\n      shl(0xa8, 0x206261636b20536f6f6e21)\n        /* \"#utility.yul\":9652:9671   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":9645:9687   */\n      mstore\n        /* \"#utility.yul\":9704:9723   */\n      0xa4\n      add\n        /* \"DEX.sol\":2991:3160  require(... */\n      tag_109\n        /* \"#utility.yul\":9250:9729   */\n      jump\n        /* \"DEX.sol\":2991:3160  require(... */\n    tag_335:\n        /* \"DEX.sol\":3208:3229  address(this).balance */\n      selfbalance\n        /* \"DEX.sol\":3191:3204  eth_to_return */\n      dup2\n        /* \"DEX.sol\":3191:3229  eth_to_return <= address(this).balance */\n      gt\n      iszero\n        /* \"DEX.sol\":3170:3329  require(... */\n      tag_338\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9936:9938   */\n      0x20\n        /* \"DEX.sol\":3170:3329  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9918:9939   */\n      mstore\n        /* \"#utility.yul\":9975:9977   */\n      0x4a\n        /* \"#utility.yul\":9955:9973   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9948:9978   */\n      mstore\n        /* \"#utility.yul\":10014:10048   */\n      0x536f7272792043757272656e746c79207468697320636f6e747261637420646f\n        /* \"#utility.yul\":9994:10012   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9987:10049   */\n      mstore\n        /* \"#utility.yul\":10085:10119   */\n      0x65736e277420686176652045746820746f2072657475726e2c20436865636b20\n        /* \"#utility.yul\":10065:10083   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10058:10120   */\n      mstore\n      shl(0xb0, 0x6261636b20536f6f6e21)\n        /* \"#utility.yul\":10136:10155   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":10129:10170   */\n      mstore\n        /* \"#utility.yul\":10187:10206   */\n      0xa4\n      add\n        /* \"DEX.sol\":3170:3329  require(... */\n      tag_109\n        /* \"#utility.yul\":9734:10212   */\n      jump\n        /* \"DEX.sol\":3170:3329  require(... */\n    tag_338:\n        /* \"DEX.sol\":3339:3343  meme */\n      sload(0x01)\n        /* \"DEX.sol\":3339:3380  meme.transfer(msg.sender, meme_to_return) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"DEX.sol\":3353:3363  msg.sender */\n      caller\n        /* \"DEX.sol\":3339:3380  meme.transfer(msg.sender, meme_to_return) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4590:4641   */\n      mstore\n        /* \"#utility.yul\":4657:4675   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4650:4684   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol\":3339:3343  meme */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DEX.sol\":3339:3352  meme.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":4563:4581   */\n      0x44\n      add\n        /* \"DEX.sol\":3339:3380  meme.transfer(msg.sender, meme_to_return) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_343\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_343:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_344\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_344:\n      pop\n        /* \"DEX.sol\":3390:3433  payable(msg.sender).transfer(eth_to_return) */\n      mload(0x40)\n        /* \"DEX.sol\":3398:3408  msg.sender */\n      caller\n      swap1\n        /* \"DEX.sol\":3390:3433  payable(msg.sender).transfer(eth_to_return) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"DEX.sol\":3419:3432  eth_to_return */\n      dup4\n      swap1\n        /* \"DEX.sol\":3390:3433  payable(msg.sender).transfer(eth_to_return) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"DEX.sol\":3419:3432  eth_to_return */\n      dup6\n        /* \"DEX.sol\":3398:3408  msg.sender */\n      dup9\n        /* \"DEX.sol\":3390:3433  payable(msg.sender).transfer(eth_to_return) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_346\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_346:\n      pop\n        /* \"DEX.sol\":3456:3470  meme_to_return */\n      dup2\n        /* \"DEX.sol\":3450:3452  _x */\n      sload(0x06)\n        /* \"DEX.sol\":3450:3470  _x >= meme_to_return */\n      lt\n      iszero\n        /* \"DEX.sol\":3449:3499  (_x >= meme_to_return) ? (_x - meme_to_return) : 0 */\n      tag_347\n      jumpi\n        /* \"DEX.sol\":3498:3499  0 */\n      0x00\n        /* \"DEX.sol\":3449:3499  (_x >= meme_to_return) ? (_x - meme_to_return) : 0 */\n      jump(tag_349)\n    tag_347:\n        /* \"DEX.sol\":3480:3494  meme_to_return */\n      dup2\n        /* \"DEX.sol\":3475:3477  _x */\n      sload(0x06)\n        /* \"DEX.sol\":3475:3494  _x - meme_to_return */\n      tag_349\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_349:\n        /* \"DEX.sol\":3444:3446  _x */\n      0x06\n        /* \"DEX.sol\":3444:3499  _x = (_x >= meme_to_return) ? (_x - meme_to_return) : 0 */\n      sstore\n        /* \"DEX.sol\":3515:3517  _y */\n      sload(0x07)\n        /* \"DEX.sol\":3515:3534  _y >= eth_to_return */\n      dup2\n      gt\n      iszero\n        /* \"DEX.sol\":3514:3562  (_y >= eth_to_return) ? (_y - eth_to_return) : 0 */\n      tag_350\n      jumpi\n        /* \"DEX.sol\":3561:3562  0 */\n      0x00\n        /* \"DEX.sol\":3514:3562  (_y >= eth_to_return) ? (_y - eth_to_return) : 0 */\n      jump(tag_352)\n    tag_350:\n        /* \"DEX.sol\":3544:3557  eth_to_return */\n      dup1\n        /* \"DEX.sol\":3539:3541  _y */\n      sload(0x07)\n        /* \"DEX.sol\":3539:3557  _y - eth_to_return */\n      tag_352\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_352:\n        /* \"DEX.sol\":3509:3511  _y */\n      0x07\n        /* \"DEX.sol\":3509:3562  _y = (_y >= eth_to_return) ? (_y - eth_to_return) : 0 */\n      sstore\n        /* \"DEX.sol\":3577:3579  _x */\n      sload(0x06)\n        /* \"DEX.sol\":3583:3584  0 */\n      0x00\n        /* \"DEX.sol\":3577:3584  _x == 0 */\n      sub\n        /* \"DEX.sol\":3573:3694  if (_x == 0) {... */\n      tag_353\n      jumpi\n        /* \"DEX.sol\":3615:3616  0 */\n      0x00\n        /* \"DEX.sol\":3600:3612  stackingRate */\n      0x04\n        /* \"DEX.sol\":3600:3616  stackingRate = 0 */\n      sstore\n        /* \"DEX.sol\":3573:3694  if (_x == 0) {... */\n      jump(tag_354)\n    tag_353:\n        /* \"DEX.sol\":3681:3683  _x */\n      sload(0x06)\n        /* \"DEX.sol\":3668:3677  precision */\n      sload(0x08)\n        /* \"DEX.sol\":3663:3665  _y */\n      sload(0x07)\n        /* \"DEX.sol\":3663:3677  _y * precision */\n      tag_355\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_355:\n        /* \"DEX.sol\":3662:3683  (_y * precision) / _x */\n      tag_356\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_356:\n        /* \"DEX.sol\":3647:3659  stackingRate */\n      0x04\n        /* \"DEX.sol\":3647:3683  stackingRate = (_y * precision) / _x */\n      sstore\n        /* \"DEX.sol\":3573:3694  if (_x == 0) {... */\n    tag_354:\n        /* \"DEX.sol\":3704:3721  _removeArr(index) */\n      tag_357\n        /* \"DEX.sol\":3715:3720  index */\n      dup6\n        /* \"DEX.sol\":3704:3714  _removeArr */\n      tag_358\n        /* \"DEX.sol\":3704:3721  _removeArr(index) */\n      jump\t// in\n    tag_357:\n        /* \"DEX.sol\":3732:3742  _updateK() */\n      tag_359\n        /* \"DEX.sol\":3732:3740  _updateK */\n      tag_360\n        /* \"DEX.sol\":3732:3742  _updateK() */\n      jump\t// in\n    tag_359:\n        /* \"DEX.sol\":3757:3807  UnStack(msg.sender, meme_to_return, eth_to_return) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5151:5176   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":5207:5209   */\n      0x20\n        /* \"#utility.yul\":5192:5210   */\n      dup2\n      add\n        /* \"#utility.yul\":5185:5219   */\n      dup4\n      swap1\n      mstore\n        /* \"DEX.sol\":3765:3775  msg.sender */\n      caller\n      swap2\n        /* \"DEX.sol\":3757:3807  UnStack(msg.sender, meme_to_return, eth_to_return) */\n      0xbb564df1f5d4ebb97b073adcab505c7796a37035ac5d14f51269660939c39cf4\n      swap2\n        /* \"#utility.yul\":5124:5142   */\n      add\n        /* \"DEX.sol\":3757:3807  UnStack(msg.sender, meme_to_return, eth_to_return) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"DEX.sol\":2670:3814  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"DEX.sol\":2628:3814  function _unstack(uint256 index) internal {... */\n      pop\n      jump\t// out\n        /* \"DEX.sol\":7840:8396  function calculateTax(uint256 meme_amount) internal view returns (uint256) {... */\n    tag_154:\n        /* \"DEX.sol\":7906:7913  uint256 */\n      0x00\n        /* \"DEX.sol\":7938:7939  0 */\n      dup1\n        /* \"DEX.sol\":7933:7935  _k */\n      sload(0x05)\n        /* \"DEX.sol\":7933:7939  _k > 0 */\n      gt\n        /* \"DEX.sol\":7925:7964  require(_k > 0, \"Not enough liquidity\") */\n      tag_363\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_363:\n        /* \"DEX.sol\":7974:7984  uint256 dx */\n      0x00\n        /* \"DEX.sol\":7998:8008  uint256 dy */\n      dup1\n        /* \"DEX.sol\":8026:8028  _y */\n      sload(0x07)\n        /* \"DEX.sol\":8032:8033  0 */\n      0x00\n        /* \"DEX.sol\":8026:8033  _y == 0 */\n      sub\n        /* \"DEX.sol\":8022:8142  if (_y == 0) {... */\n      tag_365\n      jumpi\n        /* \"DEX.sol\":8063:8074  meme_amount */\n      dup4\n        /* \"DEX.sol\":8059:8060  1 */\n      0x01\n        /* \"DEX.sol\":8054:8056  _k */\n      sload(0x05)\n        /* \"DEX.sol\":8054:8060  _k / 1 */\n      tag_366\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_366:\n        /* \"DEX.sol\":8054:8074  _k / 1 - meme_amount */\n      tag_367\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_367:\n        /* \"DEX.sol\":8049:8074  dx = _k / 1 - meme_amount */\n      swap2\n      pop\n        /* \"DEX.sol\":8022:8142  if (_y == 0) {... */\n      jump(tag_368)\n    tag_365:\n        /* \"DEX.sol\":8120:8131  meme_amount */\n      dup4\n        /* \"DEX.sol\":8115:8117  _y */\n      sload(0x07)\n        /* \"DEX.sol\":8110:8112  _k */\n      sload(0x05)\n        /* \"DEX.sol\":8110:8117  _k / _y */\n      tag_369\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_369:\n        /* \"DEX.sol\":8110:8131  _k / _y - meme_amount */\n      tag_370\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_370:\n        /* \"DEX.sol\":8105:8131  dx = _k / _y - meme_amount */\n      swap2\n      pop\n        /* \"DEX.sol\":8022:8142  if (_y == 0) {... */\n    tag_368:\n        /* \"DEX.sol\":8155:8157  dx */\n      dup2\n        /* \"DEX.sol\":8161:8162  0 */\n      0x00\n        /* \"DEX.sol\":8155:8162  dx == 0 */\n      sub\n        /* \"DEX.sol\":8151:8243  if (dx == 0) {... */\n      tag_371\n      jumpi\n        /* \"DEX.sol\":8188:8189  1 */\n      0x01\n        /* \"DEX.sol\":8183:8185  _k */\n      sload(0x05)\n        /* \"DEX.sol\":8183:8189  _k / 1 */\n      tag_372\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_372:\n        /* \"DEX.sol\":8178:8189  dy = _k / 1 */\n      swap1\n      pop\n        /* \"DEX.sol\":8151:8243  if (dx == 0) {... */\n      jump(tag_373)\n    tag_371:\n        /* \"DEX.sol\":8230:8232  dx */\n      dup2\n        /* \"DEX.sol\":8225:8227  _k */\n      sload(0x05)\n        /* \"DEX.sol\":8225:8232  _k / dx */\n      tag_374\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_374:\n        /* \"DEX.sol\":8220:8232  dy = _k / dx */\n      swap1\n      pop\n        /* \"DEX.sol\":8151:8243  if (dx == 0) {... */\n    tag_373:\n        /* \"DEX.sol\":8252:8281  uint256 eth_price_without_tax */\n      0x00\n        /* \"DEX.sol\":8289:8291  _y */\n      sload(0x07)\n        /* \"DEX.sol\":8284:8286  dy */\n      dup3\n        /* \"DEX.sol\":8284:8291  dy - _y */\n      tag_375\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_375:\n        /* \"DEX.sol\":8252:8291  uint256 eth_price_without_tax = dy - _y */\n      swap1\n      pop\n        /* \"DEX.sol\":8301:8316  uint256 eth_tax */\n      0x00\n        /* \"DEX.sol\":8355:8364  precision */\n      sload(0x08)\n        /* \"DEX.sol\":8344:8351  taxRate */\n      sload(0x09)\n        /* \"DEX.sol\":8320:8341  eth_price_without_tax */\n      dup4\n        /* \"DEX.sol\":8320:8351  eth_price_without_tax * taxRate */\n      tag_376\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_376:\n        /* \"DEX.sol\":8319:8364  (eth_price_without_tax * taxRate) / precision */\n      tag_377\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_377:\n        /* \"DEX.sol\":8301:8364  uint256 eth_tax = (eth_price_without_tax * taxRate) / precision */\n      swap7\n        /* \"DEX.sol\":7840:8396  function calculateTax(uint256 meme_amount) internal view returns (uint256) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10419:10421   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10401:10422   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":10438:10456   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10431:10461   */\n      mstore\n        /* \"#utility.yul\":10497:10531   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":10477:10495   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10470:10532   */\n      mstore\n        /* \"#utility.yul\":10549:10567   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_109\n        /* \"#utility.yul\":10217:10573   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_386\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_387\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_386:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n    tag_389:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1501:1533   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1483:1534   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1471:1473   */\n      0x20\n        /* \"#utility.yul\":1456:1474   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      0x0100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      dup6\n      and\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      swap4\n      div\n      swap2\n      swap1\n      swap2\n      and\n      swap3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      swap1\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_393\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_106\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_393:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_389\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"DEX.sol\":2066:2584  function _stack(uint256 meme_amount, uint256 eth_amount) internal {... */\n    tag_284:\n        /* \"DEX.sol\":2142:2146  meme */\n      sload(0x01)\n        /* \"DEX.sol\":2142:2199  meme.transferFrom(msg.sender, address(this), meme_amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"DEX.sol\":2160:2170  msg.sender */\n      caller\n        /* \"DEX.sol\":2142:2199  meme.transferFrom(msg.sender, address(this), meme_amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6356:6390   */\n      mstore\n        /* \"DEX.sol\":2180:2184  this */\n      address\n        /* \"#utility.yul\":6406:6424   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6399:6442   */\n      mstore\n        /* \"#utility.yul\":6458:6476   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":6451:6485   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol\":2142:2146  meme */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"DEX.sol\":2142:2159  meme.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":6291:6309   */\n      0x64\n      add\n        /* \"DEX.sol\":2142:2199  meme.transferFrom(msg.sender, address(this), meme_amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_400\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_400:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_401\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_401:\n      pop\n        /* \"DEX.sol\":2215:2226  meme_amount */\n      dup2\n        /* \"DEX.sol\":2209:2211  _x */\n      0x06\n      0x00\n        /* \"DEX.sol\":2209:2226  _x += meme_amount */\n      dup3\n      dup3\n      sload\n      tag_402\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_402:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"DEX.sol\":2242:2252  eth_amount */\n      dup1\n        /* \"DEX.sol\":2236:2238  _y */\n      0x07\n      0x00\n        /* \"DEX.sol\":2236:2252  _y += eth_amount */\n      dup3\n      dup3\n      sload\n      tag_403\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_403:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"DEX.sol\":2288:2388  Stack_Struct(... */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      dup4\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup5\n      dup2\n      mstore\n        /* \"DEX.sol\":2363:2378  block.timestamp */\n      timestamp\n        /* \"DEX.sol\":2288:2388  Stack_Struct(... */\n      dup4\n      dup6\n      add\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol\":2406:2416  msg.sender */\n      caller\n        /* \"DEX.sol\":2263:2285  Stack_Struct memory ss */\n      0x00\n        /* \"DEX.sol\":2398:2417  Stacked[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol\":2398:2405  Stacked */\n      0x02\n        /* \"DEX.sol\":2398:2417  Stacked[msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap6\n      dup2\n      keccak256\n        /* \"DEX.sol\":2398:2426  Stacked[msg.sender].push(ss) */\n      dup1\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup4\n      sstore\n      swap2\n      dup4\n      mstore\n      swap5\n      swap1\n      swap2\n      keccak256\n      dup6\n      mload\n      0x03\n      swap1\n      swap6\n      mul\n      add\n      swap4\n      dup5\n      sstore\n      swap2\n      mload\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      mload\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"DEX.sol\":2472:2474  _x */\n      sload(0x06)\n        /* \"DEX.sol\":2459:2468  precision */\n      sload(0x08)\n        /* \"DEX.sol\":2454:2456  _y */\n      sload(0x07)\n        /* \"DEX.sol\":2454:2468  _y * precision */\n      tag_405\n      swap2\n        /* \"DEX.sol\":2459:2468  precision */\n      swap1\n        /* \"DEX.sol\":2454:2468  _y * precision */\n      tag_125\n      jump\t// in\n    tag_405:\n        /* \"DEX.sol\":2453:2474  (_y * precision) / _x */\n      tag_406\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_406:\n        /* \"DEX.sol\":2437:2449  stackingRate */\n      0x04\n        /* \"DEX.sol\":2437:2475  stackingRate = ((_y * precision) / _x) */\n      sstore\n        /* \"DEX.sol\":2498:2500  _x */\n      sload(0x06)\n        /* \"DEX.sol\":2486:2495  originalX */\n      0x0a\n        /* \"DEX.sol\":2486:2500  originalX = _x */\n      sstore\n        /* \"DEX.sol\":2511:2521  _updateK() */\n      tag_407\n        /* \"DEX.sol\":2511:2519  _updateK */\n      tag_360\n        /* \"DEX.sol\":2511:2521  _updateK() */\n      jump\t// in\n    tag_407:\n        /* \"DEX.sol\":2536:2577  Stack(msg.sender, meme_amount, msg.value) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":5151:5176   */\n      dup5\n      dup2\n      mstore\n        /* \"DEX.sol\":2567:2576  msg.value */\n      callvalue\n        /* \"#utility.yul\":5207:5209   */\n      0x20\n        /* \"#utility.yul\":5192:5210   */\n      dup3\n      add\n        /* \"#utility.yul\":5185:5219   */\n      mstore\n        /* \"DEX.sol\":2542:2552  msg.sender */\n      caller\n      swap2\n        /* \"DEX.sol\":2536:2577  Stack(msg.sender, meme_amount, msg.value) */\n      0x5caad8f5613b6f1d592fc8c69d8f0999453740f0806c754f20cc92f3d4b2b1b6\n      swap2\n        /* \"#utility.yul\":5124:5142   */\n      add\n        /* \"DEX.sol\":2536:2577  Stack(msg.sender, meme_amount, msg.value) */\n      tag_191\n        /* \"#utility.yul\":4977:5225   */\n      jump\n        /* \"DEX.sol\":3820:4132  function _removeArr(uint256 index) internal {... */\n    tag_358:\n        /* \"DEX.sol\":3898:3908  msg.sender */\n      caller\n        /* \"DEX.sol\":3890:3909  Stacked[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol\":3890:3897  Stacked */\n      0x02\n        /* \"DEX.sol\":3890:3909  Stacked[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DEX.sol\":3890:3916  Stacked[msg.sender].length */\n      sload\n        /* \"DEX.sol\":3882:3916  index < Stacked[msg.sender].length */\n      dup2\n      lt\n        /* \"DEX.sol\":3874:3940  require(index < Stacked[msg.sender].length, \"Index out of bounds\") */\n      tag_410\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9104:9106   */\n      0x20\n        /* \"DEX.sol\":3874:3940  require(index < Stacked[msg.sender].length, \"Index out of bounds\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9086:9107   */\n      mstore\n        /* \"#utility.yul\":9143:9145   */\n      0x13\n        /* \"#utility.yul\":9123:9141   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9116:9146   */\n      mstore\n      shl(0x68, 0x496e646578206f7574206f6620626f756e6473)\n        /* \"#utility.yul\":9162:9180   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9155:9204   */\n      mstore\n        /* \"#utility.yul\":9221:9239   */\n      0x64\n      add\n        /* \"DEX.sol\":3874:3940  require(index < Stacked[msg.sender].length, \"Index out of bounds\") */\n      tag_109\n        /* \"#utility.yul\":8902:9245   */\n      jump\n        /* \"DEX.sol\":3874:3940  require(index < Stacked[msg.sender].length, \"Index out of bounds\") */\n    tag_410:\n        /* \"DEX.sol\":3967:3972  index */\n      dup1\n        /* \"DEX.sol\":3950:4091  for (uint256 i = index; i < Stacked[msg.sender].length - 1; i++) {... */\n    tag_412:\n        /* \"DEX.sol\":3986:3996  msg.sender */\n      caller\n        /* \"DEX.sol\":3978:3997  Stacked[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol\":3978:3985  Stacked */\n      0x02\n        /* \"DEX.sol\":3978:3997  Stacked[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DEX.sol\":3978:4004  Stacked[msg.sender].length */\n      sload\n        /* \"DEX.sol\":3978:4008  Stacked[msg.sender].length - 1 */\n      tag_415\n      swap1\n        /* \"DEX.sol\":4007:4008  1 */\n      0x01\n      swap1\n        /* \"DEX.sol\":3978:4008  Stacked[msg.sender].length - 1 */\n      tag_115\n      jump\t// in\n    tag_415:\n        /* \"DEX.sol\":3974:3975  i */\n      dup2\n        /* \"DEX.sol\":3974:4008  i < Stacked[msg.sender].length - 1 */\n      lt\n        /* \"DEX.sol\":3950:4091  for (uint256 i = index; i < Stacked[msg.sender].length - 1; i++) {... */\n      iszero\n      tag_413\n      jumpi\n        /* \"DEX.sol\":4062:4072  msg.sender */\n      caller\n        /* \"DEX.sol\":4054:4073  Stacked[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol\":4054:4061  Stacked */\n      0x02\n        /* \"DEX.sol\":4054:4073  Stacked[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DEX.sol\":4074:4079  i + 1 */\n      tag_416\n        /* \"DEX.sol\":4074:4075  i */\n      dup3\n        /* \"DEX.sol\":4078:4079  1 */\n      0x01\n        /* \"DEX.sol\":4074:4079  i + 1 */\n      tag_128\n      jump\t// in\n    tag_416:\n        /* \"DEX.sol\":4054:4080  Stacked[msg.sender][i + 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_418\n      jumpi\n      tag_418\n      tag_235\n      jump\t// in\n    tag_418:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"DEX.sol\":4029:4036  Stacked */\n      0x02\n        /* \"DEX.sol\":4029:4048  Stacked[msg.sender] */\n      0x00\n        /* \"DEX.sol\":4037:4047  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"DEX.sol\":4029:4048  Stacked[msg.sender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DEX.sol\":4049:4050  i */\n      dup3\n        /* \"DEX.sol\":4029:4051  Stacked[msg.sender][i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_421\n      jumpi\n      tag_421\n      tag_235\n      jump\t// in\n    tag_421:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"DEX.sol\":4029:4080  Stacked[msg.sender][i] = Stacked[msg.sender][i + 1] */\n      dup3\n      sload\n        /* \"DEX.sol\":4029:4051  Stacked[msg.sender][i] */\n      0x03\n      swap1\n      swap3\n      mul\n      add\n        /* \"DEX.sol\":4029:4080  Stacked[msg.sender][i] = Stacked[msg.sender][i + 1] */\n      swap1\n      dup2\n      sstore\n      0x01\n      dup1\n      dup4\n      add\n      sload\n      swap1\n      dup3\n      add\n      sstore\n      0x02\n      swap2\n      dup3\n      add\n      sload\n      swap2\n      add\n      sstore\n        /* \"DEX.sol\":4010:4013  i++ */\n      dup1\n      tag_423\n      dup2\n      tag_247\n      jump\t// in\n    tag_423:\n      swap2\n      pop\n      pop\n        /* \"DEX.sol\":3950:4091  for (uint256 i = index; i < Stacked[msg.sender].length - 1; i++) {... */\n      jump(tag_412)\n    tag_413:\n      pop\n        /* \"DEX.sol\":4108:4118  msg.sender */\n      caller\n        /* \"DEX.sol\":4100:4119  Stacked[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"DEX.sol\":4100:4107  Stacked */\n      0x02\n        /* \"DEX.sol\":4100:4119  Stacked[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"DEX.sol\":4100:4125  Stacked[msg.sender].pop() */\n      dup1\n      sload\n      dup1\n      tag_425\n      jumpi\n      tag_425\n      tag_426\n      jump\t// in\n    tag_425:\n      0x00\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      keccak256\n      0x03\n      not(0x00)\n      swap1\n      swap4\n      add\n      swap3\n      dup4\n      mul\n      add\n      dup2\n      dup2\n      sstore\n      0x01\n      dup2\n      add\n      dup3\n      swap1\n      sstore\n      0x02\n      add\n      sstore\n      swap1\n      sstore\n      pop\n        /* \"DEX.sol\":3820:4132  function _removeArr(uint256 index) internal {... */\n      jump\t// out\n        /* \"DEX.sol\":1385:1443  function _updateK() internal {... */\n    tag_360:\n        /* \"DEX.sol\":1434:1436  _y */\n      sload(0x07)\n        /* \"DEX.sol\":1429:1431  _x */\n      sload(0x06)\n        /* \"DEX.sol\":1429:1436  _x * _y */\n      tag_429\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_429:\n        /* \"DEX.sol\":1424:1426  _k */\n      0x05\n        /* \"DEX.sol\":1424:1436  _k = _x * _y */\n      sstore\n        /* \"DEX.sol\":1385:1443  function _updateK() internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_387:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10912:10914   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10894:10915   */\n      mstore\n        /* \"#utility.yul\":10951:10953   */\n      0x14\n        /* \"#utility.yul\":10931:10949   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10924:10954   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":10970:10988   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10963:11013   */\n      mstore\n        /* \"#utility.yul\":11030:11048   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_109\n        /* \"#utility.yul\":10710:11054   */\n      jump\n        /* \"#utility.yul\":14:194   */\n    tag_29:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_440:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":381:554   */\n    tag_436:\n        /* \"#utility.yul\":449:469   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":498:529   */\n      dup2\n      and\n        /* \"#utility.yul\":488:530   */\n      dup2\n      eq\n        /* \"#utility.yul\":478:548   */\n      tag_107\n      jumpi\n        /* \"#utility.yul\":544:545   */\n      0x00\n        /* \"#utility.yul\":541:542   */\n      dup1\n        /* \"#utility.yul\":534:546   */\n      revert\n        /* \"#utility.yul\":559:881   */\n    tag_44:\n        /* \"#utility.yul\":636:642   */\n      0x00\n        /* \"#utility.yul\":644:650   */\n      dup1\n        /* \"#utility.yul\":652:658   */\n      0x00\n        /* \"#utility.yul\":705:707   */\n      0x60\n        /* \"#utility.yul\":693:702   */\n      dup5\n        /* \"#utility.yul\":684:691   */\n      dup7\n        /* \"#utility.yul\":680:703   */\n      sub\n        /* \"#utility.yul\":676:708   */\n      slt\n        /* \"#utility.yul\":673:725   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":721:722   */\n      0x00\n        /* \"#utility.yul\":718:719   */\n      dup1\n        /* \"#utility.yul\":711:723   */\n      revert\n        /* \"#utility.yul\":673:725   */\n    tag_445:\n        /* \"#utility.yul\":757:766   */\n      dup4\n        /* \"#utility.yul\":744:767   */\n      calldataload\n        /* \"#utility.yul\":734:767   */\n      swap3\n      pop\n        /* \"#utility.yul\":786:824   */\n      tag_446\n        /* \"#utility.yul\":820:822   */\n      0x20\n        /* \"#utility.yul\":809:818   */\n      dup6\n        /* \"#utility.yul\":805:823   */\n      add\n        /* \"#utility.yul\":786:824   */\n      tag_436\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":776:824   */\n      swap2\n      pop\n        /* \"#utility.yul\":871:873   */\n      0x40\n        /* \"#utility.yul\":860:869   */\n      dup5\n        /* \"#utility.yul\":856:874   */\n      add\n        /* \"#utility.yul\":843:875   */\n      calldataload\n        /* \"#utility.yul\":833:875   */\n      swap1\n      pop\n        /* \"#utility.yul\":559:881   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":886:1140   */\n    tag_52:\n        /* \"#utility.yul\":954:960   */\n      0x00\n        /* \"#utility.yul\":962:968   */\n      dup1\n        /* \"#utility.yul\":1015:1017   */\n      0x40\n        /* \"#utility.yul\":1003:1012   */\n      dup4\n        /* \"#utility.yul\":994:1001   */\n      dup6\n        /* \"#utility.yul\":990:1013   */\n      sub\n        /* \"#utility.yul\":986:1018   */\n      slt\n        /* \"#utility.yul\":983:1035   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":1031:1032   */\n      0x00\n        /* \"#utility.yul\":1028:1029   */\n      dup1\n        /* \"#utility.yul\":1021:1033   */\n      revert\n        /* \"#utility.yul\":983:1035   */\n    tag_448:\n        /* \"#utility.yul\":1067:1076   */\n      dup3\n        /* \"#utility.yul\":1054:1077   */\n      calldataload\n        /* \"#utility.yul\":1044:1077   */\n      swap2\n      pop\n        /* \"#utility.yul\":1096:1134   */\n      tag_449\n        /* \"#utility.yul\":1130:1132   */\n      0x20\n        /* \"#utility.yul\":1119:1128   */\n      dup5\n        /* \"#utility.yul\":1115:1133   */\n      add\n        /* \"#utility.yul\":1096:1134   */\n      tag_436\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":1086:1134   */\n      swap1\n      pop\n        /* \"#utility.yul\":886:1140   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1545:2396   */\n    tag_98:\n        /* \"#utility.yul\":1774:1776   */\n      0x20\n        /* \"#utility.yul\":1826:1847   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":1896:1909   */\n      dup3\n      mload\n        /* \"#utility.yul\":1799:1817   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":1918:1940   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1745:1749   */\n      0x00\n      swap2\n        /* \"#utility.yul\":1774:1776   */\n      swap1\n        /* \"#utility.yul\":1959:1961   */\n      0x40\n      swap1\n        /* \"#utility.yul\":1977:1995   */\n      dup2\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":2018:2033   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":1745:1749   */\n      dup6\n        /* \"#utility.yul\":2061:2370   */\n    tag_453:\n        /* \"#utility.yul\":2075:2081   */\n      dup3\n        /* \"#utility.yul\":2072:2073   */\n      dup2\n        /* \"#utility.yul\":2069:2082   */\n      lt\n        /* \"#utility.yul\":2061:2370   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":2134:2147   */\n      dup2\n      mload\n        /* \"#utility.yul\":2172:2181   */\n      dup1\n      mload\n        /* \"#utility.yul\":2160:2182   */\n      dup6\n      mstore\n        /* \"#utility.yul\":2222:2233   */\n      dup7\n      dup2\n      add\n        /* \"#utility.yul\":2216:2234   */\n      mload\n        /* \"#utility.yul\":2202:2214   */\n      dup8\n      dup7\n      add\n        /* \"#utility.yul\":2195:2235   */\n      mstore\n        /* \"#utility.yul\":2275:2286   */\n      dup6\n      add\n        /* \"#utility.yul\":2269:2287   */\n      mload\n        /* \"#utility.yul\":2255:2267   */\n      dup6\n      dup6\n      add\n        /* \"#utility.yul\":2248:2288   */\n      mstore\n        /* \"#utility.yul\":2317:2321   */\n      0x60\n        /* \"#utility.yul\":2308:2322   */\n      swap1\n      swap4\n      add\n      swap3\n        /* \"#utility.yul\":2345:2360   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":2097:2098   */\n      0x01\n        /* \"#utility.yul\":2090:2099   */\n      add\n        /* \"#utility.yul\":2061:2370   */\n      jump(tag_453)\n    tag_455:\n      pop\n        /* \"#utility.yul\":2387:2390   */\n      swap2\n      swap8\n        /* \"#utility.yul\":1545:2396   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2401:2587   */\n    tag_102:\n        /* \"#utility.yul\":2460:2466   */\n      0x00\n        /* \"#utility.yul\":2513:2515   */\n      0x20\n        /* \"#utility.yul\":2501:2510   */\n      dup3\n        /* \"#utility.yul\":2492:2499   */\n      dup5\n        /* \"#utility.yul\":2488:2511   */\n      sub\n        /* \"#utility.yul\":2484:2516   */\n      slt\n        /* \"#utility.yul\":2481:2533   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":2529:2530   */\n      0x00\n        /* \"#utility.yul\":2526:2527   */\n      dup1\n        /* \"#utility.yul\":2519:2531   */\n      revert\n        /* \"#utility.yul\":2481:2533   */\n    tag_457:\n        /* \"#utility.yul\":2552:2581   */\n      tag_458\n        /* \"#utility.yul\":2571:2580   */\n      dup3\n        /* \"#utility.yul\":2552:2581   */\n      tag_436\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":2542:2581   */\n      swap4\n        /* \"#utility.yul\":2401:2587   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2592:2936   */\n    tag_110:\n        /* \"#utility.yul\":2794:2796   */\n      0x20\n        /* \"#utility.yul\":2776:2797   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2833:2835   */\n      0x14\n        /* \"#utility.yul\":2813:2831   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2806:2836   */\n      mstore\n      shl(0x60, 0x4e6f7420656e6f756768206c6971756964697479)\n        /* \"#utility.yul\":2867:2869   */\n      0x40\n        /* \"#utility.yul\":2852:2870   */\n      dup3\n      add\n        /* \"#utility.yul\":2845:2895   */\n      mstore\n        /* \"#utility.yul\":2927:2929   */\n      0x60\n        /* \"#utility.yul\":2912:2930   */\n      add\n      swap1\n        /* \"#utility.yul\":2592:2936   */\n      jump\t// out\n        /* \"#utility.yul\":2941:3068   */\n    tag_437:\n        /* \"#utility.yul\":3002:3012   */\n      0x4e487b71\n        /* \"#utility.yul\":2997:3000   */\n      0xe0\n        /* \"#utility.yul\":2993:3013   */\n      shl\n        /* \"#utility.yul\":2990:2991   */\n      0x00\n        /* \"#utility.yul\":2983:3014   */\n      mstore\n        /* \"#utility.yul\":3033:3037   */\n      0x11\n        /* \"#utility.yul\":3030:3031   */\n      0x04\n        /* \"#utility.yul\":3023:3038   */\n      mstore\n        /* \"#utility.yul\":3057:3061   */\n      0x24\n        /* \"#utility.yul\":3054:3055   */\n      0x00\n        /* \"#utility.yul\":3047:3062   */\n      revert\n        /* \"#utility.yul\":3073:3290   */\n    tag_113:\n        /* \"#utility.yul\":3113:3114   */\n      0x00\n        /* \"#utility.yul\":3139:3140   */\n      dup3\n        /* \"#utility.yul\":3129:3261   */\n      tag_462\n      jumpi\n        /* \"#utility.yul\":3183:3193   */\n      0x4e487b71\n        /* \"#utility.yul\":3178:3181   */\n      0xe0\n        /* \"#utility.yul\":3174:3194   */\n      shl\n        /* \"#utility.yul\":3171:3172   */\n      0x00\n        /* \"#utility.yul\":3164:3195   */\n      mstore\n        /* \"#utility.yul\":3218:3222   */\n      0x12\n        /* \"#utility.yul\":3215:3216   */\n      0x04\n        /* \"#utility.yul\":3208:3223   */\n      mstore\n        /* \"#utility.yul\":3246:3250   */\n      0x24\n        /* \"#utility.yul\":3243:3244   */\n      0x00\n        /* \"#utility.yul\":3236:3251   */\n      revert\n        /* \"#utility.yul\":3129:3261   */\n    tag_462:\n      pop\n        /* \"#utility.yul\":3275:3284   */\n      div\n      swap1\n        /* \"#utility.yul\":3073:3290   */\n      jump\t// out\n        /* \"#utility.yul\":3295:3423   */\n    tag_115:\n        /* \"#utility.yul\":3362:3371   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3383:3394   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3380:3417   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":3397:3415   */\n      tag_226\n      tag_437\n      jump\t// in\n        /* \"#utility.yul\":3428:3596   */\n    tag_125:\n        /* \"#utility.yul\":3501:3510   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3532:3541   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3549:3564   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3543:3565   */\n      dup5\n      eq\n        /* \"#utility.yul\":3529:3566   */\n      or\n        /* \"#utility.yul\":3519:3590   */\n      tag_226\n      jumpi\n        /* \"#utility.yul\":3570:3588   */\n      tag_226\n      tag_437\n      jump\t// in\n        /* \"#utility.yul\":3601:3726   */\n    tag_128:\n        /* \"#utility.yul\":3666:3675   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3687:3697   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3684:3720   */\n      iszero\n      tag_226\n      jumpi\n        /* \"#utility.yul\":3700:3718   */\n      tag_226\n      tag_437\n      jump\t// in\n        /* \"#utility.yul\":4695:4972   */\n    tag_149:\n        /* \"#utility.yul\":4762:4768   */\n      0x00\n        /* \"#utility.yul\":4815:4817   */\n      0x20\n        /* \"#utility.yul\":4803:4812   */\n      dup3\n        /* \"#utility.yul\":4794:4801   */\n      dup5\n        /* \"#utility.yul\":4790:4813   */\n      sub\n        /* \"#utility.yul\":4786:4818   */\n      slt\n        /* \"#utility.yul\":4783:4835   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":4831:4832   */\n      0x00\n        /* \"#utility.yul\":4828:4829   */\n      dup1\n        /* \"#utility.yul\":4821:4833   */\n      revert\n        /* \"#utility.yul\":4783:4835   */\n    tag_476:\n        /* \"#utility.yul\":4863:4872   */\n      dup2\n        /* \"#utility.yul\":4857:4873   */\n      mload\n        /* \"#utility.yul\":4916:4921   */\n      dup1\n        /* \"#utility.yul\":4909:4922   */\n      iszero\n        /* \"#utility.yul\":4902:4923   */\n      iszero\n        /* \"#utility.yul\":4895:4900   */\n      dup2\n        /* \"#utility.yul\":4892:4924   */\n      eq\n        /* \"#utility.yul\":4882:4942   */\n      tag_458\n      jumpi\n        /* \"#utility.yul\":4938:4939   */\n      0x00\n        /* \"#utility.yul\":4935:4936   */\n      dup1\n        /* \"#utility.yul\":4928:4940   */\n      revert\n        /* \"#utility.yul\":5572:5756   */\n    tag_178:\n        /* \"#utility.yul\":5642:5648   */\n      0x00\n        /* \"#utility.yul\":5695:5697   */\n      0x20\n        /* \"#utility.yul\":5683:5692   */\n      dup3\n        /* \"#utility.yul\":5674:5681   */\n      dup5\n        /* \"#utility.yul\":5670:5693   */\n      sub\n        /* \"#utility.yul\":5666:5698   */\n      slt\n        /* \"#utility.yul\":5663:5715   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":5711:5712   */\n      0x00\n        /* \"#utility.yul\":5708:5709   */\n      dup1\n        /* \"#utility.yul\":5701:5713   */\n      revert\n        /* \"#utility.yul\":5663:5715   */\n    tag_481:\n      pop\n        /* \"#utility.yul\":5734:5750   */\n      mload\n      swap2\n        /* \"#utility.yul\":5572:5756   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6843:6970   */\n    tag_235:\n        /* \"#utility.yul\":6904:6914   */\n      0x4e487b71\n        /* \"#utility.yul\":6899:6902   */\n      0xe0\n        /* \"#utility.yul\":6895:6915   */\n      shl\n        /* \"#utility.yul\":6892:6893   */\n      0x00\n        /* \"#utility.yul\":6885:6916   */\n      mstore\n        /* \"#utility.yul\":6935:6939   */\n      0x32\n        /* \"#utility.yul\":6932:6933   */\n      0x04\n        /* \"#utility.yul\":6925:6940   */\n      mstore\n        /* \"#utility.yul\":6959:6963   */\n      0x24\n        /* \"#utility.yul\":6956:6957   */\n      0x00\n        /* \"#utility.yul\":6949:6964   */\n      revert\n        /* \"#utility.yul\":6975:7110   */\n    tag_247:\n        /* \"#utility.yul\":7014:7017   */\n      0x00\n        /* \"#utility.yul\":7035:7052   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":7032:7075   */\n      tag_488\n      jumpi\n        /* \"#utility.yul\":7055:7073   */\n      tag_488\n      tag_437\n      jump\t// in\n    tag_488:\n      pop\n        /* \"#utility.yul\":7102:7103   */\n      0x01\n        /* \"#utility.yul\":7091:7104   */\n      add\n      swap1\n        /* \"#utility.yul\":6975:7110   */\n      jump\t// out\n        /* \"#utility.yul\":10578:10705   */\n    tag_426:\n        /* \"#utility.yul\":10639:10649   */\n      0x4e487b71\n        /* \"#utility.yul\":10634:10637   */\n      0xe0\n        /* \"#utility.yul\":10630:10650   */\n      shl\n        /* \"#utility.yul\":10627:10628   */\n      0x00\n        /* \"#utility.yul\":10620:10651   */\n      mstore\n        /* \"#utility.yul\":10670:10674   */\n      0x31\n        /* \"#utility.yul\":10667:10668   */\n      0x04\n        /* \"#utility.yul\":10660:10675   */\n      mstore\n        /* \"#utility.yul\":10694:10698   */\n      0x24\n        /* \"#utility.yul\":10691:10692   */\n      0x00\n        /* \"#utility.yul\":10684:10699   */\n      revert\n\n    auxdata: 0xa2646970667358221220abbf938c022282536450e21b1be418d2d177af34fa7cd6f48be8c65aa3ab08c564736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1080": {
									"entryPoint": null,
									"id": 1080,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_139": {
									"entryPoint": null,
									"id": 139,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_966": {
									"entryPoint": null,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 196,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 364,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_div_t_uint256": {
									"entryPoint": 329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 285,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:859:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "66:213:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "76:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "91:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "94:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "87:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "87:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "76:7:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "162:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "183:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "190:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "195:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "186:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "186:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "176:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "176:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "176:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "227:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "230:4:9",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "220:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "220:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "220:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "255:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "258:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "248:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "248:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "248:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "125:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "118:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "118:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "132:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "139:7:9"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "148:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "135:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "135:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "129:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "129:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "115:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "115:37:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "108:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:45:9"
															},
															"nodeType": "YulIf",
															"src": "105:168:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "45:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "48:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "54:7:9",
														"type": ""
													}
												],
												"src": "14:265:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "330:171:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "361:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "382:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "389:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "394:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "385:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "385:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "375:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "375:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "375:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "426:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "429:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "419:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "419:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "419:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "454:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "457:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "447:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "447:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "447:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "350:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:9:9"
															},
															"nodeType": "YulIf",
															"src": "340:132:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "481:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "490:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "493:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "486:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "486:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "481:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "315:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "318:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "324:1:9",
														"type": ""
													}
												],
												"src": "284:217:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "604:253:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "650:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "659:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "662:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "652:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "652:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "652:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "625:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "634:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "621:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "621:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "646:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "617:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "617:32:9"
															},
															"nodeType": "YulIf",
															"src": "614:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "675:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "694:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "688:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "688:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "679:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "767:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "776:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "779:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "769:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "769:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "726:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "737:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "752:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "757:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "748:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "748:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "761:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "744:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "744:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "733:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "733:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "723:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "723:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "716:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:50:9"
															},
															"nodeType": "YulIf",
															"src": "713:70:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "792:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "802:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "792:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "816:35:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "836:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "847:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "832:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:18:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "826:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "826:25:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "816:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "562:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "573:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "585:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "593:6:9",
														"type": ""
													}
												],
												"src": "506:351:9"
											}
										]
									},
									"contents": "{\n    { }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x))))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052678ac7230489e800006008556103e860085460036200002491906200011d565b62000030919062000149565b600955600654600a553480156200004657600080fd5b5060405162001ed338038062001ed383398101604081905262000069916200016c565b6000805460ff191690556200007e33620000c4565b600180546001600160a01b0319166001600160a01b0384161790556008546103e890620000ac90836200011d565b620000b8919062000149565b60095550620001a89050565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b80820281158282048414176200014357634e487b7160e01b600052601160045260246000fd5b92915050565b6000826200016757634e487b7160e01b600052601260045260246000fd5b500490565b600080604083850312156200018057600080fd5b82516001600160a01b03811681146200019857600080fd5b6020939093015192949293505050565b611d1b80620001b86000396000f3fe60806040526004361061010d5760003560e01c80638456cb5911610095578063d96a094a11610064578063d96a094a146102bc578063dc9031c4146102cf578063e4849b32146102e2578063e8bca8b814610302578063f2fde38b1461032457600080fd5b80638456cb591461023b5780638da5cb5b146102505780639c74f05d14610286578063d37a389b1461029c57600080fd5b80633f4ba83a116100dc5780633f4ba83a146101ae5780634189a68e146101c35780635c572ed0146101e35780635c975abb14610203578063715018a61461022657600080fd5b80631a753fed14610119578063200061df1461014c5780632ad9d5591461016e5780632afaca201461019b57600080fd5b3661011457005b600080fd5b34801561012557600080fd5b50610139610134366004611ab6565b610344565b6040519081526020015b60405180910390f35b34801561015857600080fd5b5061016c610167366004611ab6565b61043e565b005b34801561017a57600080fd5b50610139610189366004611ab6565b60036020526000908152604090205481565b61016c6101a9366004611ae6565b610452565b3480156101ba57600080fd5b5061016c610652565b3480156101cf57600080fd5b5061016c6101de366004611b1b565b610664565b3480156101ef57600080fd5b506101396101fe366004611ab6565b61089f565b34801561020f57600080fd5b5060005460ff166040519015158152602001610143565b34801561023257600080fd5b5061016c610990565b34801561024757600080fd5b5061016c6109a2565b34801561025c57600080fd5b5060005461010090046001600160a01b03166040516001600160a01b039091168152602001610143565b34801561029257600080fd5b5061013960045481565b3480156102a857600080fd5b506101396102b7366004611ab6565b6109b2565b61016c6102ca366004611ab6565b610b65565b61016c6102dd366004611ab6565b610d50565b3480156102ee57600080fd5b5061016c6102fd366004611ab6565b610e45565b34801561030e57600080fd5b50610317611060565b6040516101439190611b47565b34801561033057600080fd5b5061016c61033f366004611ba0565b6110e8565b600061034e61115e565b6000600554116103795760405162461bcd60e51b815260040161037090611bc2565b60405180910390fd5b6000806006546000036103a7578360016005546103969190611c06565b6103a09190611c28565b90506103c5565b836006546005546103b89190611c06565b6103c29190611c28565b90505b806000036103e35760016005546103dc9190611c06565b91506103f4565b806005546103f19190611c06565b91505b6000600654836104049190611c28565b90506000600854600954836104199190611c3b565b6104239190611c06565b905081610431816001611c52565b955050505050505b919050565b61044661115e565b61044f816111a4565b50565b61045a61115e565b6000831161049b5760405162461bcd60e51b815260206004820152600e60248201526d53656e6420536f6d65204d656d6560901b6044820152606401610370565b60006104a68461089f565b9050818111156104e85760405162461bcd60e51b815260206004820152600d60248201526c0a6cadcc8409adee4ca408aa89609b1b6044820152606401610370565b60015460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018790529091169063a9059cbb906044016020604051808303816000875af115801561053b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055f9190611c65565b506001600160a01b0383166108fc6105778385611c28565b6040518115909202916000818181858888f1935050505015801561059f573d6000803e3d6000fd5b506105a98461156b565b600360006105ba6201518042611c06565b815260200190815260200160002060008282546105d79190611c52565b9250508190555083600660008282546105f09190611c28565b90915550506006546005546106059190611c06565b60075560408051858152602081018390526001600160a01b038516917f1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed910160405180910390a250505050565b61065a611642565b6106626116a2565b565b61066c61115e565b600082116106ac5760405162461bcd60e51b815260206004820152600d60248201526c0a6cadcc840a6dedaca408aa89609b1b6044820152606401610370565b60006106b783610344565b6001546040516370a0823160e01b81526001600160a01b0385811660048301529293509116906370a0823190602401602060405180830381865afa158015610703573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107279190611c87565b8111156107765760405162461bcd60e51b815260206004820152601a60248201527f596f7520646f6e2774206861766520656e6f756768206d656d650000000000006044820152606401610370565b6001546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201849052909116906323b872dd906064016020604051808303816000875af11580156107cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f39190611c65565b506040516001600160a01b0383169084156108fc029085906000818181858888f1935050505015801561082a573d6000803e3d6000fd5b50826007600082825461083d9190611c28565b90915550506007546005546108529190611c06565b60065560408051828152602081018590526001600160a01b038416917fed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a91015b60405180910390a2505050565b60006108a961115e565b6000600554116108cb5760405162461bcd60e51b815260040161037090611bc2565b6000806007546000036108f9578360016005546108e89190611c06565b6108f29190611c28565b9150610917565b8360075460055461090a9190611c06565b6109149190611c28565b91505b8160000361093557600160055461092e9190611c06565b9050610946565b816005546109439190611c06565b90505b6000600754826109569190611c28565b905060006008546009548361096b9190611c3b565b6109759190611c06565b905060006109838284611c52565b9050610431816001611c52565b610998611642565b61066260006116f4565b6109aa611642565b61066261174d565b600080806003816109c66201518042611c06565b8152602001908152602001600020541115610b5f5733600090815260026020908152604080832080548251818502810185019093528083529192909190849084015b82821015610a585783829060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020019060010190610a08565b50505050905080518410610aa35760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840e0deded840d2dcc8caf60731b6044820152606401610370565b6000818581518110610ab757610ab7611ca0565b602002602001015190506000600a546008548360000151610ad89190611c3b565b610ae29190611c06565b60408301519091506000610af96201518042611c06565b90506000610b0a6201518084611c06565b90505b818111610b5857600854600082815260036020526040902054610b309086611c3b565b610b3a9190611c06565b610b449088611c52565b965080610b5081611cb6565b915050610b0d565b5050505050505b92915050565b610b6d61115e565b60008111610bae5760405162461bcd60e51b815260206004820152600e60248201526d53656e6420536f6d65204d656d6560901b6044820152606401610370565b6000610bb98261089f565b905034811115610bfb5760405162461bcd60e51b815260206004820152600d60248201526c0a6cadcc8409adee4ca408aa89609b1b6044820152606401610370565b60015460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610c4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c709190611c65565b50336108fc610c7f8334611c28565b6040518115909202916000818181858888f19350505050158015610ca7573d6000803e3d6000fd5b50610cb18261156b565b60036000610cc26201518042611c06565b81526020019081526020016000206000828254610cdf9190611c52565b925050819055508160066000828254610cf89190611c28565b9091555050600654600554610d0d9190611c06565b600755604080518381526020810183905233917f1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed91015b60405180910390a25050565b610d5861115e565b60008111610d995760405162461bcd60e51b815260206004820152600e60248201526d53656e64206d6f7265204d454d4560901b6044820152606401610370565b60003411610dd95760405162461bcd60e51b815260206004820152600d60248201526c0a6cadcc840dadee4ca408aa89609b1b6044820152606401610370565b8060085434610de89190611c3b565b610df29190611c06565b6004541115610e3b5760405162461bcd60e51b815260206004820152601560248201527414dd1858dada5b99c814985d19481b9bdd081b595d605a1b6044820152606401610370565b61044f813461178a565b610e4d61115e565b60008111610e8d5760405162461bcd60e51b815260206004820152600d60248201526c0a6cadcc840a6dedaca408aa89609b1b6044820152606401610370565b6000610e9882610344565b6001546040516370a0823160e01b81523360048201529192506001600160a01b0316906370a0823190602401602060405180830381865afa158015610ee1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f059190611c87565b811115610f545760405162461bcd60e51b815260206004820152601a60248201527f596f7520646f6e2774206861766520656e6f756768206d656d650000000000006044820152606401610370565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610fab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcf9190611c65565b50604051339083156108fc029084906000818181858888f19350505050158015610ffd573d6000803e3d6000fd5b5081600760008282546110109190611c28565b90915550506007546005546110259190611c06565b600655604080518281526020810184905233917fed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a9101610d44565b336000908152600260209081526040808320805482518185028101850190935280835260609492939192909184015b828210156110df578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250508152602001906001019061108f565b50505050905090565b6110f0611642565b6001600160a01b0381166111555760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610370565b61044f816116f4565b60005460ff16156106625760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610370565b3360009081526002602052604090205481106111f85760405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610370565b33600090815260026020526040812080548390811061121957611219611ca0565b906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250509050600061125d836109b2565b8251602084015191925090600090611276908490611c52565b600654600a556001546040516370a0823160e01b81523060048201529192506001600160a01b0316906370a0823190602401602060405180830381865afa1580156112c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e99190611c87565b8211156113725760405162461bcd60e51b815260206004820152604b60248201527f536f7272792043757272656e746c79207468697320636f6e747261637420646f60448201527f65736e27742068617665204d656d6520746f2072657475726e2c20436865636b60648201526a206261636b20536f6f6e2160a81b608482015260a401610370565b478111156113fb5760405162461bcd60e51b815260206004820152604a60248201527f536f7272792043757272656e746c79207468697320636f6e747261637420646f60448201527f65736e277420686176652045746820746f2072657475726e2c20436865636b206064820152696261636b20536f6f6e2160b01b608482015260a401610370565b60015460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561144c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114709190611c65565b50604051339082156108fc029083906000818181858888f1935050505015801561149e573d6000803e3d6000fd5b508160065410156114b05760006114be565b816006546114be9190611c28565b6006556007548111156114d25760006114e0565b806007546114e09190611c28565b6007556006546000036114f7576000600455611518565b60065460085460075461150a9190611c3b565b6115149190611c06565b6004555b611521856118f0565b611529611a58565b604080518381526020810183905233917fbb564df1f5d4ebb97b073adcab505c7796a37035ac5d14f51269660939c39cf4910160405180910390a25050505050565b6000806005541161158e5760405162461bcd60e51b815260040161037090611bc2565b6000806007546000036115bc578360016005546115ab9190611c06565b6115b59190611c28565b91506115da565b836007546005546115cd9190611c06565b6115d79190611c28565b91505b816000036115f85760016005546115f19190611c06565b9050611609565b816005546116069190611c06565b90505b6000600754826116199190611c28565b905060006008546009548361162e9190611c3b565b6116389190611c06565b9695505050505050565b6000546001600160a01b036101009091041633146106625760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610370565b6116aa611a6d565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b61175561115e565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586116d73390565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156117e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118059190611c65565b5081600660008282546118189190611c52565b9250508190555080600760008282546118319190611c52565b90915550506040805160608101825283815260208082018481524283850190815233600090815260028085529581208054600181810183559183529490912085516003909502019384559151918301919091555192019190915560065460085460075461189e9190611c3b565b6118a89190611c06565b600455600654600a556118b9611a58565b6040805184815234602082015233917f5caad8f5613b6f1d592fc8c69d8f0999453740f0806c754f20cc92f3d4b2b1b69101610892565b3360009081526002602052604090205481106119445760405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610370565b805b3360009081526002602052604090205461196290600190611c28565b811015611a1157336000908152600260205260409020611983826001611c52565b8154811061199357611993611ca0565b906000526020600020906003020160026000336001600160a01b03166001600160a01b0316815260200190815260200160002082815481106119d7576119d7611ca0565b6000918252602090912082546003909202019081556001808301549082015560029182015491015580611a0981611cb6565b915050611946565b50336000908152600260205260409020805480611a3057611a30611ccf565b6000828152602081206003600019909301928302018181556001810182905560020155905550565b600754600654611a689190611c3b565b600555565b60005460ff166106625760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610370565b600060208284031215611ac857600080fd5b5035919050565b80356001600160a01b038116811461043957600080fd5b600080600060608486031215611afb57600080fd5b83359250611b0b60208501611acf565b9150604084013590509250925092565b60008060408385031215611b2e57600080fd5b82359150611b3e60208401611acf565b90509250929050565b602080825282518282018190526000919060409081850190868401855b82811015611b935781518051855286810151878601528501518585015260609093019290850190600101611b64565b5091979650505050505050565b600060208284031215611bb257600080fd5b611bbb82611acf565b9392505050565b6020808252601490820152734e6f7420656e6f756768206c697175696469747960601b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082611c2357634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610b5f57610b5f611bf0565b8082028115828204841417610b5f57610b5f611bf0565b80820180821115610b5f57610b5f611bf0565b600060208284031215611c7757600080fd5b81518015158114611bbb57600080fd5b600060208284031215611c9957600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600060018201611cc857611cc8611bf0565b5060010190565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220abbf938c022282536450e21b1be418d2d177af34fa7cd6f48be8c65aa3ab08c564736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0x8AC7230489E80000 PUSH1 0x8 SSTORE PUSH2 0x3E8 PUSH1 0x8 SLOAD PUSH1 0x3 PUSH3 0x24 SWAP2 SWAP1 PUSH3 0x11D JUMP JUMPDEST PUSH3 0x30 SWAP2 SWAP1 PUSH3 0x149 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0x6 SLOAD PUSH1 0xA SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1ED3 CODESIZE SUB DUP1 PUSH3 0x1ED3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x69 SWAP2 PUSH3 0x16C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH3 0x7E CALLER PUSH3 0xC4 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE PUSH1 0x8 SLOAD PUSH2 0x3E8 SWAP1 PUSH3 0xAC SWAP1 DUP4 PUSH3 0x11D JUMP JUMPDEST PUSH3 0xB8 SWAP2 SWAP1 PUSH3 0x149 JUMP JUMPDEST PUSH1 0x9 SSTORE POP PUSH3 0x1A8 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR DUP6 SSTORE PUSH1 0x40 MLOAD SWAP4 DIV SWAP2 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x143 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x167 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x180 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD MLOAD SWAP3 SWAP5 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH2 0x1D1B DUP1 PUSH3 0x1B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD96A094A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xDC9031C4 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xE8BCA8B8 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x9C74F05D EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xD37A389B EQ PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x4189A68E EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x5C572ED0 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A753FED EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x200061DF EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x2AD9D559 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x2AFACA20 EQ PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x114 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB6 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AE6 JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH2 0x652 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1B JUMP JUMPDEST PUSH2 0x664 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x89F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x143 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH2 0x990 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH2 0x9A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x143 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0xD50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH2 0x2FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0xE45 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA0 JUMP JUMPDEST PUSH2 0x10E8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E PUSH2 0x115E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD GT PUSH2 0x379 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x370 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD PUSH1 0x0 SUB PUSH2 0x3A7 JUMPI DUP4 PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP1 POP PUSH2 0x3C5 JUMP JUMPDEST DUP4 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x3E3 JUMPI PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F4 JUMP JUMPDEST DUP1 PUSH1 0x5 SLOAD PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD DUP4 PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD DUP4 PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x1C3B JUMP JUMPDEST PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x431 DUP2 PUSH1 0x1 PUSH2 0x1C52 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x446 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x44F DUP2 PUSH2 0x11A4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x45A PUSH2 0x115E JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x53656E6420536F6D65204D656D65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A6 DUP5 PUSH2 0x89F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA6CADCC8409ADEE4CA408AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x53B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8FC PUSH2 0x577 DUP4 DUP6 PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x59F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x5A9 DUP5 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH2 0x5BA PUSH3 0x15180 TIMESTAMP PUSH2 0x1C06 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5F0 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x605 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0x1CBC5AB135991BD2B6A4B034A04AA2AA086DAC1371CB9B16B8B5E2ED6B036BED SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x65A PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x662 PUSH2 0x16A2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x66C PUSH2 0x115E JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x6AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA6CADCC840A6DEDACA408AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B7 DUP4 PUSH2 0x344 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x703 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x727 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F756768206D656D65000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x82A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP3 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x83D SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH2 0x852 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH32 0xED7A144FAD14804D5C249145E3E0E2B63A9EB455B76AEE5BC92D711E9BBA3E4A SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A9 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD GT PUSH2 0x8CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x370 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 SLOAD PUSH1 0x0 SUB PUSH2 0x8F9 JUMPI DUP4 PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x8E8 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH2 0x8F2 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP2 POP PUSH2 0x917 JUMP JUMPDEST DUP4 PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH2 0x90A SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH2 0x914 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x935 JUMPI PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x92E SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST SWAP1 POP PUSH2 0x946 JUMP JUMPDEST DUP2 PUSH1 0x5 SLOAD PUSH2 0x943 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x956 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD DUP4 PUSH2 0x96B SWAP2 SWAP1 PUSH2 0x1C3B JUMP JUMPDEST PUSH2 0x975 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x983 DUP3 DUP5 PUSH2 0x1C52 JUMP JUMPDEST SWAP1 POP PUSH2 0x431 DUP2 PUSH1 0x1 PUSH2 0x1C52 JUMP JUMPDEST PUSH2 0x998 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x662 PUSH1 0x0 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x9AA PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x662 PUSH2 0x174D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x3 DUP2 PUSH2 0x9C6 PUSH3 0x15180 TIMESTAMP PUSH2 0x1C06 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0xB5F JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xA58 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA08 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD DUP5 LT PUSH2 0xAA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x92DCECC2D8D2C840E0DEDED840D2DCC8CAF PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xAB7 JUMPI PUSH2 0xAB7 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xA SLOAD PUSH1 0x8 SLOAD DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0xAD8 SWAP2 SWAP1 PUSH2 0x1C3B JUMP JUMPDEST PUSH2 0xAE2 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0x0 PUSH2 0xAF9 PUSH3 0x15180 TIMESTAMP PUSH2 0x1C06 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB0A PUSH3 0x15180 DUP5 PUSH2 0x1C06 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 GT PUSH2 0xB58 JUMPI PUSH1 0x8 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB30 SWAP1 DUP7 PUSH2 0x1C3B JUMP JUMPDEST PUSH2 0xB3A SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH2 0xB44 SWAP1 DUP9 PUSH2 0x1C52 JUMP JUMPDEST SWAP7 POP DUP1 PUSH2 0xB50 DUP2 PUSH2 0x1CB6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB0D JUMP JUMPDEST POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB6D PUSH2 0x115E JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x53656E6420536F6D65204D656D65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB9 DUP3 PUSH2 0x89F JUMP JUMPDEST SWAP1 POP CALLVALUE DUP2 GT ISZERO PUSH2 0xBFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA6CADCC8409ADEE4CA408AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC70 SWAP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST POP CALLER PUSH2 0x8FC PUSH2 0xC7F DUP4 CALLVALUE PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xCB1 DUP3 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH2 0xCC2 PUSH3 0x15180 TIMESTAMP PUSH2 0x1C06 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCDF SWAP2 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCF8 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0xD0D SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x1CBC5AB135991BD2B6A4B034A04AA2AA086DAC1371CB9B16B8B5E2ED6B036BED SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xD58 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xD99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x53656E64206D6F7265204D454D45 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0xDD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA6CADCC840DADEE4CA408AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST DUP1 PUSH1 0x8 SLOAD CALLVALUE PUSH2 0xDE8 SWAP2 SWAP1 PUSH2 0x1C3B JUMP JUMPDEST PUSH2 0xDF2 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH1 0x4 SLOAD GT ISZERO PUSH2 0xE3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14DD1858DADA5B99C814985D19481B9BDD081B595D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH2 0x44F DUP2 CALLVALUE PUSH2 0x178A JUMP JUMPDEST PUSH2 0xE4D PUSH2 0x115E JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xE8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA6CADCC840A6DEDACA408AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE98 DUP3 PUSH2 0x344 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF05 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xF54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F756768206D656D65000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFCF SWAP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xFFD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1010 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH2 0x1025 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xED7A144FAD14804D5C249145E3E0E2B63A9EB455B76AEE5BC92D711E9BBA3E4A SWAP2 ADD PUSH2 0xD44 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x10DF JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x108F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x10F0 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1155 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x370 JUMP JUMPDEST PUSH2 0x44F DUP2 PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT PUSH2 0x11F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x1219 JUMPI PUSH2 0x1219 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x125D DUP4 PUSH2 0x9B2 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1276 SWAP1 DUP5 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xA SSTORE PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12E9 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x1372 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792043757272656E746C79207468697320636F6E747261637420646F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65736E27742068617665204D656D6520746F2072657475726E2C20436865636B PUSH1 0x64 DUP3 ADD MSTORE PUSH11 0x206261636B20536F6F6E21 PUSH1 0xA8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x370 JUMP JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x13FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792043757272656E746C79207468697320636F6E747261637420646F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65736E277420686176652045746820746F2072657475726E2C20436865636B20 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0x6261636B20536F6F6E21 PUSH1 0xB0 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x144C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1470 SWAP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x149E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 PUSH1 0x6 SLOAD LT ISZERO PUSH2 0x14B0 JUMPI PUSH1 0x0 PUSH2 0x14BE JUMP JUMPDEST DUP2 PUSH1 0x6 SLOAD PUSH2 0x14BE SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x14D2 JUMPI PUSH1 0x0 PUSH2 0x14E0 JUMP JUMPDEST DUP1 PUSH1 0x7 SLOAD PUSH2 0x14E0 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0x0 SUB PUSH2 0x14F7 JUMPI PUSH1 0x0 PUSH1 0x4 SSTORE PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0x150A SWAP2 SWAP1 PUSH2 0x1C3B JUMP JUMPDEST PUSH2 0x1514 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMPDEST PUSH2 0x1521 DUP6 PUSH2 0x18F0 JUMP JUMPDEST PUSH2 0x1529 PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xBB564DF1F5D4EBB97B073ADCAB505C7796A37035AC5D14F51269660939C39CF4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD GT PUSH2 0x158E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x370 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 SLOAD PUSH1 0x0 SUB PUSH2 0x15BC JUMPI DUP4 PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x15AB SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH2 0x15B5 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP2 POP PUSH2 0x15DA JUMP JUMPDEST DUP4 PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH2 0x15CD SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH2 0x15D7 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x15F8 JUMPI PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x15F1 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST SWAP1 POP PUSH2 0x1609 JUMP JUMPDEST DUP2 PUSH1 0x5 SLOAD PUSH2 0x1606 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x1619 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD DUP4 PUSH2 0x162E SWAP2 SWAP1 PUSH2 0x1C3B JUMP JUMPDEST PUSH2 0x1638 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH2 0x16AA PUSH2 0x1A6D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR DUP6 SSTORE PUSH1 0x40 MLOAD SWAP4 DIV SWAP2 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1755 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x16D7 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1805 SWAP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1818 SWAP2 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1831 SWAP2 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE TIMESTAMP DUP4 DUP6 ADD SWAP1 DUP2 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP1 DUP6 MSTORE SWAP6 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP4 MSTORE SWAP5 SWAP1 SWAP2 KECCAK256 DUP6 MLOAD PUSH1 0x3 SWAP1 SWAP6 MUL ADD SWAP4 DUP5 SSTORE SWAP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0x189E SWAP2 SWAP1 PUSH2 0x1C3B JUMP JUMPDEST PUSH2 0x18A8 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x6 SLOAD PUSH1 0xA SSTORE PUSH2 0x18B9 PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0x5CAAD8F5613B6F1D592FC8C69D8F0999453740F0806C754F20CC92F3D4B2B1B6 SWAP2 ADD PUSH2 0x892 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT PUSH2 0x1944 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST DUP1 JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1962 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1A11 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1983 DUP3 PUSH1 0x1 PUSH2 0x1C52 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1993 JUMPI PUSH2 0x1993 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x19D7 JUMPI PUSH2 0x19D7 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x2 SWAP2 DUP3 ADD SLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0x1A09 DUP2 PUSH2 0x1CB6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1946 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x1A30 JUMPI PUSH2 0x1A30 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x3 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x2 ADD SSTORE SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0x1A68 SWAP2 SWAP1 PUSH2 0x1C3B JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x1B0B PUSH1 0x20 DUP6 ADD PUSH2 0x1ACF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1B3E PUSH1 0x20 DUP5 ADD PUSH2 0x1ACF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1B93 JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 ADD MLOAD DUP6 DUP6 ADD MSTORE PUSH1 0x60 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1B64 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BBB DUP3 PUSH2 0x1ACF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x4E6F7420656E6F756768206C6971756964697479 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C23 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xB5F JUMPI PUSH2 0xB5F PUSH2 0x1BF0 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xB5F JUMPI PUSH2 0xB5F PUSH2 0x1BF0 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xB5F JUMPI PUSH2 0xB5F PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1BBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1CC8 JUMPI PUSH2 0x1CC8 PUSH2 0x1BF0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xBF SWAP4 DUP13 MUL 0x22 DUP3 MSTORE8 PUSH5 0x50E21B1BE4 XOR 0xD2 0xD1 PUSH24 0xAF34FA7CD6F48BE8C65AA3AB08C564736F6C634300081300 CALLER ",
							"sourceMap": "243:11880:7:-:0;;;1008:5;979:34;;1065:4;1052:9;;1048:1;:13;;;;:::i;:::-;1047:22;;;;:::i;:::-;1020:49;;2619:2;;2590:31;;1076:165;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1006:5:1;996:15;;-1:-1:-1;;996:15:1;;;936:32:0;719:10:6;936:18:0;:32::i;:::-;1130:4:7;:17;;-1:-1:-1;;;;;;1130:17:7;-1:-1:-1;;;;;1130:17:7;;;;;1179:9;;1192:4;;1168:20;;:8;:20;:::i;:::-;1167:29;;;;:::i;:::-;1157:7;:39;-1:-1:-1;243:11880:7;;-1:-1:-1;243:11880:7;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;2518:6;2534:17;;;-1:-1:-1;;;;;;2534:17:0;;;;;2566:40;;2518:6;;;;;;;2534:17;;2518:6;;2566:40;;;2489:124;2426:187;:::o;14:265:9:-;87:9;;;118;;135:15;;;129:22;;115:37;105:168;;195:10;190:3;186:20;183:1;176:31;230:4;227:1;220:15;258:4;255:1;248:15;105:168;14:265;;;;:::o;284:217::-;324:1;350;340:132;;394:10;389:3;385:20;382:1;375:31;429:4;426:1;419:15;457:4;454:1;447:15;340:132;-1:-1:-1;486:9:9;;284:217::o;506:351::-;585:6;593;646:2;634:9;625:7;621:23;617:32;614:52;;;662:1;659;652:12;614:52;688:16;;-1:-1:-1;;;;;733:31:9;;723:42;;713:70;;779:1;776;769:12;713:70;847:2;832:18;;;;826:25;802:5;;826:25;;-1:-1:-1;;;506:351:9:o;:::-;243:11880:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1814": {
									"entryPoint": null,
									"id": 1814,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 5698,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_distributeTax_1552": {
									"entryPoint": 2482,
									"id": 1552,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_966": {
									"entryPoint": null,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_203": {
									"entryPoint": 5965,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_removeArr_1456": {
									"entryPoint": 6384,
									"id": 1456,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_requireNotPaused_176": {
									"entryPoint": 4446,
									"id": 176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_187": {
									"entryPoint": 6765,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_stack_1246": {
									"entryPoint": 6026,
									"id": 1246,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 5876,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_219": {
									"entryPoint": 5794,
									"id": 219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_unstack_1398": {
									"entryPoint": 4516,
									"id": 1398,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateK_1108": {
									"entryPoint": 6744,
									"id": 1108,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buy_1891": {
									"entryPoint": 1106,
									"id": 1891,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@buy_1969": {
									"entryPoint": 2917,
									"id": 1969,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@calculateTax_1722": {
									"entryPoint": 5483,
									"id": 1722,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@dailyTax_1038": {
									"entryPoint": null,
									"id": 1038,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getETHPrice_1810": {
									"entryPoint": 836,
									"id": 1810,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getMemePrice_1642": {
									"entryPoint": 2207,
									"id": 1642,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getStacks_1121": {
									"entryPoint": 4192,
									"id": 1121,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1089": {
									"entryPoint": 2466,
									"id": 1089,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_164": {
									"entryPoint": null,
									"id": 164,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 2448,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sell_2038": {
									"entryPoint": 1636,
									"id": 2038,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sell_2109": {
									"entryPoint": 3653,
									"id": 2109,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stack_1163": {
									"entryPoint": 3408,
									"id": 1163,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stackingRate_1040": {
									"entryPoint": null,
									"id": 1040,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 4328,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_1098": {
									"entryPoint": 1618,
									"id": 1098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unstack_1175": {
									"entryPoint": 1086,
									"id": 1175,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 6863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 6939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256": {
									"entryPoint": 6886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Stack_Struct_$993_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stack_Struct_$993_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_420e5b55c2a1e24d83b9e05813ebfcbc021e37999e94a679003aeae679b03f0b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4a553fec1f423c8cd4748b1aaff7e9000972fd303793b6f6abe7b83513bc6b9a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5f3a7037a6f515e768f09bbd7b942e7ec8e428cdd68ed2428de9d02c6ace4c1a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_78b7994db21b321ba8531e19f302fa7a3e3fe17bff2fbaa020f4bcef4cd665f8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a1e959a285e43b242539206d7aeb580dab96669d53083eb53a901cc352065b41__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a846ae426b95dae7130b856727d5256e6d2011b269481b9be8507efe8d0d207e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b99b2e78c78f1318a3232374cbc7b00c7eadb27370706844a7052723adaf5ddc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ca05f8819ffb49eed362c8482e2f89607806b624518b85b488890406834d3efe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dd6b63468bea601aadd3bce26c907cd8f24675c7343a04be7e19210fd1c03f99__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f217f4029b3c2ea1dfaeee069952be2dcf9aed543c82bb251eb99c6e5f4f6f3d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7174,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7208,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7152,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 7375,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7328,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11056:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:9"
															},
															"nodeType": "YulIf",
															"src": "94:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:9",
														"type": ""
													}
												],
												"src": "14:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "310:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "333:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "363:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "345:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "269:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "280:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "291:4:9",
														"type": ""
													}
												],
												"src": "199:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "430:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "440:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "462:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "449:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "449:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "440:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "532:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "541:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "544:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "534:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "534:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "534:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "491:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "502:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "517:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "522:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "513:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "513:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "526:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "509:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "509:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "498:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "498:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "488:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "488:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "481:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "481:50:9"
															},
															"nodeType": "YulIf",
															"src": "478:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "409:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "420:5:9",
														"type": ""
													}
												],
												"src": "381:173:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "663:218:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "709:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "718:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "721:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "711:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "711:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "711:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "684:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "693:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "680:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "680:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "705:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "676:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:32:9"
															},
															"nodeType": "YulIf",
															"src": "673:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "734:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "757:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "744:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "744:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "734:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "776:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "809:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "820:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "805:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "786:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "786:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "776:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "833:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "860:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "871:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "856:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "856:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "843:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "843:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "833:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "613:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "624:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "636:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "644:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "652:6:9",
														"type": ""
													}
												],
												"src": "559:322:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "973:167:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1019:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1028:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1031:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1021:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1021:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1021:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1003:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "990:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "990:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1015:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "986:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "986:32:9"
															},
															"nodeType": "YulIf",
															"src": "983:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1044:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1054:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1054:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1044:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1086:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1119:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1130:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1115:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1096:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1096:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1086:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "931:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "942:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "954:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "962:6:9",
														"type": ""
													}
												],
												"src": "886:254:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1240:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1250:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1262:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1273:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1258:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1292:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1317:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1310:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1310:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1303:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1303:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1285:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1285:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1285:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1209:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1220:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1231:4:9",
														"type": ""
													}
												],
												"src": "1145:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1438:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1448:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1460:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1471:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1456:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1456:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1448:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1490:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1505:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1521:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1526:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1517:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1517:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1530:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1513:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1513:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1501:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1501:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1483:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1483:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1483:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1407:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1418:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1429:4:9",
														"type": ""
													}
												],
												"src": "1337:203:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1754:642:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1764:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1774:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1768:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1785:32:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1803:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1814:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1799:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1799:18:9"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "1789:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1833:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1844:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1826:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1826:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1856:17:9",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "1867:6:9"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "1860:3:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1882:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1902:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1896:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1896:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1886:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "1925:6:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1933:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1918:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1918:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1918:22:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1949:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1959:2:9",
																"type": "",
																"value": "64"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1953:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1970:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1981:9:9"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1992:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1977:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1977:18:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1970:3:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2004:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2022:6:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2030:2:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2018:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2018:15:9"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "2008:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2042:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2051:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2046:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2110:260:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2124:23:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2140:6:9"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "2134:5:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2134:13:9"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "2128:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2167:3:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "2178:2:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2172:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2172:9:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2160:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2160:22:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2160:22:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "2206:3:9"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "2211:2:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2202:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2202:12:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "2226:2:9"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2230:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2222:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2222:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2216:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2195:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2195:40:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2195:40:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "2259:3:9"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "2264:2:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2255:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2255:12:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "2279:2:9"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "2283:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2275:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2275:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2269:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2269:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2248:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2248:40:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2248:40:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2301:21:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "2312:3:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2317:4:9",
																					"type": "",
																					"value": "0x60"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2308:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2308:14:9"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "2301:3:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2335:25:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "2349:6:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2357:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2345:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2345:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2335:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2072:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2075:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2069:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2069:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2083:18:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2085:14:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2094:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2097:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2090:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2090:9:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2085:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2065:3:9",
																"statements": []
															},
															"src": "2061:309:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2379:11:9",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2387:3:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2379:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Stack_Struct_$993_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stack_Struct_$993_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1723:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1734:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1745:4:9",
														"type": ""
													}
												],
												"src": "1545:851:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2471:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2517:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2526:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2529:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2519:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2519:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2519:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2492:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2501:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2488:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2488:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2513:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2484:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2484:32:9"
															},
															"nodeType": "YulIf",
															"src": "2481:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2542:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2571:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2552:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2552:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2542:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2437:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2448:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2460:6:9",
														"type": ""
													}
												],
												"src": "2401:186:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2766:170:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2783:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2794:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2776:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2776:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2776:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2817:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2828:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2813:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2813:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2806:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2806:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2806:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2856:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2867:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2852:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2852:18:9"
																	},
																	{
																		"hexValue": "4e6f7420656e6f756768206c6971756964697479",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2872:22:9",
																		"type": "",
																		"value": "Not enough liquidity"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2845:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2845:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2845:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2904:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2916:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2927:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2912:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2912:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2904:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2743:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2757:4:9",
														"type": ""
													}
												],
												"src": "2592:344:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2973:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2990:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2997:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3002:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2993:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2993:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2983:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2983:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2983:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3030:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3033:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3023:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3023:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3023:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3054:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3057:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3047:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3047:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2941:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3119:171:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3150:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3171:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3178:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3183:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3174:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3174:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3164:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3164:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3164:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3215:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3218:4:9",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3208:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3208:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3208:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3243:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3246:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3236:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3236:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3236:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3139:1:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3132:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3132:9:9"
															},
															"nodeType": "YulIf",
															"src": "3129:132:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3270:14:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3279:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3282:1:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3275:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3275:9:9"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3270:1:9"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3104:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3107:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3113:1:9",
														"type": ""
													}
												],
												"src": "3073:217:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3344:79:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3354:17:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3366:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3369:1:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "3362:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3362:9:9"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "3354:4:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3395:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3397:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3397:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3397:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "3386:4:9"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3392:1:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3383:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3383:11:9"
															},
															"nodeType": "YulIf",
															"src": "3380:37:9"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3326:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3329:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "3335:4:9",
														"type": ""
													}
												],
												"src": "3295:128:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3480:116:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3490:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3505:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3508:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "3501:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3501:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "3490:7:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3568:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3570:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3570:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3570:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "3539:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "3532:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3532:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "3546:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "3553:7:9"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "3562:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "3549:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3549:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "3543:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3543:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "3529:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3529:37:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3522:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3522:45:9"
															},
															"nodeType": "YulIf",
															"src": "3519:71:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3459:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3462:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "3468:7:9",
														"type": ""
													}
												],
												"src": "3428:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3649:77:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3659:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3670:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3673:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3666:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3666:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3659:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3698:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3700:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3700:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3700:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3690:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3693:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3687:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3687:10:9"
															},
															"nodeType": "YulIf",
															"src": "3684:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3632:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3635:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3641:3:9",
														"type": ""
													}
												],
												"src": "3601:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3905:164:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3915:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3915:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3915:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3956:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3967:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3952:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3952:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3972:2:9",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3945:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3945:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3995:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4006:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3991:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3991:18:9"
																	},
																	{
																		"hexValue": "53656e6420536f6d65204d656d65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4011:16:9",
																		"type": "",
																		"value": "Send Some Meme"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3984:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3984:44:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3984:44:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4037:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4049:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4060:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4045:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4037:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a1e959a285e43b242539206d7aeb580dab96669d53083eb53a901cc352065b41__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3882:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3896:4:9",
														"type": ""
													}
												],
												"src": "3731:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4248:163:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4265:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4276:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4258:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4258:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4258:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4299:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4310:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4295:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4295:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4315:2:9",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4288:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4288:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4288:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4338:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4349:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4334:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4334:18:9"
																	},
																	{
																		"hexValue": "53656e64204d6f726520455448",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4354:15:9",
																		"type": "",
																		"value": "Send More ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4327:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4327:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4327:43:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4379:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4391:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4402:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4387:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4387:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4379:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f217f4029b3c2ea1dfaeee069952be2dcf9aed543c82bb251eb99c6e5f4f6f3d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4225:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4239:4:9",
														"type": ""
													}
												],
												"src": "4074:337:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4545:145:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4555:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4567:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4578:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4563:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4555:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4597:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4612:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4628:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4633:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4624:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4624:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4637:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4620:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4620:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4608:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4608:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4590:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4590:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4590:51:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4661:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4672:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4657:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4657:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4677:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4650:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4650:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4650:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4506:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4517:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4525:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4536:4:9",
														"type": ""
													}
												],
												"src": "4416:274:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4773:199:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4819:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4828:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4831:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4821:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4821:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4821:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4794:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4803:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4790:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4790:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4815:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4786:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4786:32:9"
															},
															"nodeType": "YulIf",
															"src": "4783:52:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4844:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4863:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4857:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4857:16:9"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4848:5:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4926:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4935:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4938:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4928:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4928:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4928:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4895:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "4916:5:9"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "4909:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4909:13:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4902:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4902:21:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4892:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4892:32:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4885:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4885:40:9"
															},
															"nodeType": "YulIf",
															"src": "4882:60:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4951:15:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4961:5:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4951:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4739:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4750:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4762:6:9",
														"type": ""
													}
												],
												"src": "4695:277:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5106:119:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5116:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5128:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5139:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5124:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5124:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5116:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5158:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5169:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5151:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5151:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5151:25:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5196:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5207:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5192:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5192:18:9"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5212:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5185:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5185:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5185:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5067:9:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5078:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5086:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5097:4:9",
														"type": ""
													}
												],
												"src": "4977:248:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5404:163:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5421:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5432:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5414:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5414:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5455:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5466:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5451:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5451:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5471:2:9",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5444:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5444:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5444:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5494:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5505:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5490:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5490:18:9"
																	},
																	{
																		"hexValue": "53656e6420536f6d6520455448",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5510:15:9",
																		"type": "",
																		"value": "Send Some ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5483:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5483:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5483:43:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5535:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5547:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5543:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5543:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5535:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ca05f8819ffb49eed362c8482e2f89607806b624518b85b488890406834d3efe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5381:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5395:4:9",
														"type": ""
													}
												],
												"src": "5230:337:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5653:103:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5699:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5708:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5711:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5701:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5701:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5701:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5674:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5683:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5670:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5670:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5695:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5666:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5666:32:9"
															},
															"nodeType": "YulIf",
															"src": "5663:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5724:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5740:9:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5734:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5734:16:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5724:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5619:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5630:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5642:6:9",
														"type": ""
													}
												],
												"src": "5572:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5935:176:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5952:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5963:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5945:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5945:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5945:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5986:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5997:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5982:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5982:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6002:2:9",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5975:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5975:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5975:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6025:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6036:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6021:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6021:18:9"
																	},
																	{
																		"hexValue": "596f7520646f6e2774206861766520656e6f756768206d656d65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6041:28:9",
																		"type": "",
																		"value": "You don't have enough meme"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6014:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6014:56:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6014:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6079:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6091:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6102:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6087:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6087:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6079:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b99b2e78c78f1318a3232374cbc7b00c7eadb27370706844a7052723adaf5ddc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5912:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5926:4:9",
														"type": ""
													}
												],
												"src": "5761:350:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6273:218:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6283:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6295:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6306:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6291:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6291:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6283:4:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6318:29:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6336:3:9",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6341:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6332:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6332:11:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6345:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6328:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:19:9"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6322:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6363:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6378:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6386:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6374:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6374:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6356:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6356:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6356:34:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6410:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6421:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6406:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6406:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6430:6:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6438:2:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6426:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6426:15:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6399:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6399:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6399:43:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6462:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6473:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6458:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6458:18:9"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6478:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6451:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6451:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6451:34:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6226:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6237:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6245:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6253:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6264:4:9",
														"type": ""
													}
												],
												"src": "6116:375:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6670:168:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6687:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6698:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6680:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6680:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6680:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6721:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6732:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6717:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6717:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6737:2:9",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6710:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6710:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6710:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6760:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6771:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6756:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6756:18:9"
																	},
																	{
																		"hexValue": "496e76616c696420706f6f6c20696e646578",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6776:20:9",
																		"type": "",
																		"value": "Invalid pool index"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6749:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6749:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6749:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6806:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6818:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6829:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6814:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6814:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6806:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dd6b63468bea601aadd3bce26c907cd8f24675c7343a04be7e19210fd1c03f99__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6647:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6661:4:9",
														"type": ""
													}
												],
												"src": "6496:342:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6875:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6892:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6899:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6904:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6895:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6895:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6885:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6885:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6885:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6932:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6935:4:9",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6925:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6925:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6925:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6956:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6959:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6949:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6949:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6949:15:9"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "6843:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7022:88:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7053:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7055:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7055:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7055:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7038:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7049:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7045:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7045:6:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "7035:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7035:17:9"
															},
															"nodeType": "YulIf",
															"src": "7032:43:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7084:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7095:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7102:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7091:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7091:13:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "7084:3:9"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7004:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "7014:3:9",
														"type": ""
													}
												],
												"src": "6975:135:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7289:164:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7306:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7317:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7299:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7299:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7299:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7340:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7351:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7336:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7336:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7356:2:9",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7329:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7329:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7329:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7379:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7390:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7375:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7375:18:9"
																	},
																	{
																		"hexValue": "53656e64206d6f7265204d454d45",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7395:16:9",
																		"type": "",
																		"value": "Send more MEME"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7368:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7368:44:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7368:44:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7421:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7433:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7444:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7429:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7429:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7421:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a846ae426b95dae7130b856727d5256e6d2011b269481b9be8507efe8d0d207e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7266:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7280:4:9",
														"type": ""
													}
												],
												"src": "7115:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7632:163:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7649:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7660:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7642:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7642:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7642:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7683:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7694:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7679:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7679:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7699:2:9",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7672:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7672:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7672:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7722:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7733:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7718:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7718:18:9"
																	},
																	{
																		"hexValue": "53656e64206d6f726520455448",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7738:15:9",
																		"type": "",
																		"value": "Send more ETH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7711:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7711:43:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7711:43:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7763:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7775:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7786:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7771:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7771:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7763:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_78b7994db21b321ba8531e19f302fa7a3e3fe17bff2fbaa020f4bcef4cd665f8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7609:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7623:4:9",
														"type": ""
													}
												],
												"src": "7458:337:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7974:171:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7991:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8002:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7984:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7984:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7984:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8025:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8036:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8021:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8021:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8041:2:9",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8014:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8014:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8014:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8064:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8075:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8060:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8060:18:9"
																	},
																	{
																		"hexValue": "537461636b696e672052617465206e6f74206d6574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8080:23:9",
																		"type": "",
																		"value": "Stacking Rate not met"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8053:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8053:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8053:51:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8113:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8125:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8136:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8121:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8121:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8113:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5f3a7037a6f515e768f09bbd7b942e7ec8e428cdd68ed2428de9d02c6ace4c1a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7951:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7965:4:9",
														"type": ""
													}
												],
												"src": "7800:345:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8324:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8341:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8352:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8334:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8334:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8334:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8375:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8386:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8371:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8371:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8391:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8364:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8364:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8364:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8414:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8425:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8410:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8410:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8430:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8403:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8403:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8403:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8485:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8496:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8481:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8481:18:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8501:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8474:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8474:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8474:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8519:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8531:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8542:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8527:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8527:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8519:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8301:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8315:4:9",
														"type": ""
													}
												],
												"src": "8150:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8731:166:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8748:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8759:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8741:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8741:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8741:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8782:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8793:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8778:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8778:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8798:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8771:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8771:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8771:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8821:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8832:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8817:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8817:18:9"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8837:18:9",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8810:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8810:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8810:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8865:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8877:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8888:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8873:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8873:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8865:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8708:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8722:4:9",
														"type": ""
													}
												],
												"src": "8557:340:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9076:169:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9093:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9104:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9086:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9086:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9086:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9127:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9138:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9123:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9123:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9143:2:9",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9116:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9116:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9116:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9166:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9177:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9162:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9162:18:9"
																	},
																	{
																		"hexValue": "496e646578206f7574206f6620626f756e6473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9182:21:9",
																		"type": "",
																		"value": "Index out of bounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9155:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9155:49:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9155:49:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9213:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9225:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9236:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9221:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9221:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9213:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9053:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9067:4:9",
														"type": ""
													}
												],
												"src": "8902:343:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9424:305:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9441:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9452:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9434:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9434:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9434:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9475:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9486:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9471:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9471:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9491:2:9",
																		"type": "",
																		"value": "75"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9464:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9464:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9464:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9514:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9525:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9510:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9510:18:9"
																	},
																	{
																		"hexValue": "536f7272792043757272656e746c79207468697320636f6e747261637420646f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9530:34:9",
																		"type": "",
																		"value": "Sorry Currently this contract do"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9503:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9503:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9503:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9585:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9596:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9581:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9581:18:9"
																	},
																	{
																		"hexValue": "65736e27742068617665204d656d6520746f2072657475726e2c20436865636b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9601:34:9",
																		"type": "",
																		"value": "esn't have Meme to return, Check"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9574:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9574:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9574:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9656:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9667:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9652:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9652:19:9"
																	},
																	{
																		"hexValue": "206261636b20536f6f6e21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9673:13:9",
																		"type": "",
																		"value": " back Soon!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9645:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9645:42:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9645:42:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9696:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9708:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9719:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9704:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9704:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9696:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_420e5b55c2a1e24d83b9e05813ebfcbc021e37999e94a679003aeae679b03f0b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9401:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9415:4:9",
														"type": ""
													}
												],
												"src": "9250:479:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9908:304:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9925:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9936:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9918:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9918:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9918:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9959:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9970:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9955:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9955:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9975:2:9",
																		"type": "",
																		"value": "74"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9948:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9948:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9948:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9998:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10009:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9994:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9994:18:9"
																	},
																	{
																		"hexValue": "536f7272792043757272656e746c79207468697320636f6e747261637420646f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10014:34:9",
																		"type": "",
																		"value": "Sorry Currently this contract do"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9987:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9987:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9987:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10069:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10080:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10065:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10065:18:9"
																	},
																	{
																		"hexValue": "65736e277420686176652045746820746f2072657475726e2c20436865636b20",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10085:34:9",
																		"type": "",
																		"value": "esn't have Eth to return, Check "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10058:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10058:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10058:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10140:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10151:3:9",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10136:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10136:19:9"
																	},
																	{
																		"hexValue": "6261636b20536f6f6e21",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10157:12:9",
																		"type": "",
																		"value": "back Soon!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10129:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10129:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10129:41:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10179:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10191:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10202:3:9",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10187:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10187:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10179:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4a553fec1f423c8cd4748b1aaff7e9000972fd303793b6f6abe7b83513bc6b9a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9885:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9899:4:9",
														"type": ""
													}
												],
												"src": "9734:478:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10391:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10408:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10419:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10401:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10401:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10401:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10442:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10453:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10438:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10438:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10458:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10431:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10431:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10431:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10481:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10492:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10477:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10477:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10497:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10470:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10470:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10470:62:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10541:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10553:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10564:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10549:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10549:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10541:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10368:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10382:4:9",
														"type": ""
													}
												],
												"src": "10217:356:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10610:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10627:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10634:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10639:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10630:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10630:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10620:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10620:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10620:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10667:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10670:4:9",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10660:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10660:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10660:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10691:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10694:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10684:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10684:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10684:15:9"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "10578:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10884:170:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10901:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10912:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10894:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10894:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10894:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10935:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10946:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10931:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10931:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10951:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10924:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10924:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10924:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10974:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10985:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10970:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10970:18:9"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10990:22:9",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10963:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10963:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10963:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11022:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11034:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11045:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11030:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11030:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11022:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10861:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10875:4:9",
														"type": ""
													}
												],
												"src": "10710:344:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_array$_t_struct$_Stack_Struct_$993_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Stack_Struct_$993_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        let _2 := 64\n        pos := add(headStart, _2)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _3 := mload(srcPtr)\n            mstore(pos, mload(_3))\n            mstore(add(pos, _1), mload(add(_3, _1)))\n            mstore(add(pos, _2), mload(add(_3, _2)))\n            pos := add(pos, 0x60)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Not enough liquidity\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_a1e959a285e43b242539206d7aeb580dab96669d53083eb53a901cc352065b41__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Send Some Meme\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f217f4029b3c2ea1dfaeee069952be2dcf9aed543c82bb251eb99c6e5f4f6f3d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Send More ETH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_ca05f8819ffb49eed362c8482e2f89607806b624518b85b488890406834d3efe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Send Some ETH\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_b99b2e78c78f1318a3232374cbc7b00c7eadb27370706844a7052723adaf5ddc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"You don't have enough meme\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_dd6b63468bea601aadd3bce26c907cd8f24675c7343a04be7e19210fd1c03f99__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid pool index\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_a846ae426b95dae7130b856727d5256e6d2011b269481b9be8507efe8d0d207e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Send more MEME\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_78b7994db21b321ba8531e19f302fa7a3e3fe17bff2fbaa020f4bcef4cd665f8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Send more ETH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5f3a7037a6f515e768f09bbd7b942e7ec8e428cdd68ed2428de9d02c6ace4c1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Stacking Rate not met\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Index out of bounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_420e5b55c2a1e24d83b9e05813ebfcbc021e37999e94a679003aeae679b03f0b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 75)\n        mstore(add(headStart, 64), \"Sorry Currently this contract do\")\n        mstore(add(headStart, 96), \"esn't have Meme to return, Check\")\n        mstore(add(headStart, 128), \" back Soon!\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_4a553fec1f423c8cd4748b1aaff7e9000972fd303793b6f6abe7b83513bc6b9a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 74)\n        mstore(add(headStart, 64), \"Sorry Currently this contract do\")\n        mstore(add(headStart, 96), \"esn't have Eth to return, Check \")\n        mstore(add(headStart, 128), \"back Soon!\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061010d5760003560e01c80638456cb5911610095578063d96a094a11610064578063d96a094a146102bc578063dc9031c4146102cf578063e4849b32146102e2578063e8bca8b814610302578063f2fde38b1461032457600080fd5b80638456cb591461023b5780638da5cb5b146102505780639c74f05d14610286578063d37a389b1461029c57600080fd5b80633f4ba83a116100dc5780633f4ba83a146101ae5780634189a68e146101c35780635c572ed0146101e35780635c975abb14610203578063715018a61461022657600080fd5b80631a753fed14610119578063200061df1461014c5780632ad9d5591461016e5780632afaca201461019b57600080fd5b3661011457005b600080fd5b34801561012557600080fd5b50610139610134366004611ab6565b610344565b6040519081526020015b60405180910390f35b34801561015857600080fd5b5061016c610167366004611ab6565b61043e565b005b34801561017a57600080fd5b50610139610189366004611ab6565b60036020526000908152604090205481565b61016c6101a9366004611ae6565b610452565b3480156101ba57600080fd5b5061016c610652565b3480156101cf57600080fd5b5061016c6101de366004611b1b565b610664565b3480156101ef57600080fd5b506101396101fe366004611ab6565b61089f565b34801561020f57600080fd5b5060005460ff166040519015158152602001610143565b34801561023257600080fd5b5061016c610990565b34801561024757600080fd5b5061016c6109a2565b34801561025c57600080fd5b5060005461010090046001600160a01b03166040516001600160a01b039091168152602001610143565b34801561029257600080fd5b5061013960045481565b3480156102a857600080fd5b506101396102b7366004611ab6565b6109b2565b61016c6102ca366004611ab6565b610b65565b61016c6102dd366004611ab6565b610d50565b3480156102ee57600080fd5b5061016c6102fd366004611ab6565b610e45565b34801561030e57600080fd5b50610317611060565b6040516101439190611b47565b34801561033057600080fd5b5061016c61033f366004611ba0565b6110e8565b600061034e61115e565b6000600554116103795760405162461bcd60e51b815260040161037090611bc2565b60405180910390fd5b6000806006546000036103a7578360016005546103969190611c06565b6103a09190611c28565b90506103c5565b836006546005546103b89190611c06565b6103c29190611c28565b90505b806000036103e35760016005546103dc9190611c06565b91506103f4565b806005546103f19190611c06565b91505b6000600654836104049190611c28565b90506000600854600954836104199190611c3b565b6104239190611c06565b905081610431816001611c52565b955050505050505b919050565b61044661115e565b61044f816111a4565b50565b61045a61115e565b6000831161049b5760405162461bcd60e51b815260206004820152600e60248201526d53656e6420536f6d65204d656d6560901b6044820152606401610370565b60006104a68461089f565b9050818111156104e85760405162461bcd60e51b815260206004820152600d60248201526c0a6cadcc8409adee4ca408aa89609b1b6044820152606401610370565b60015460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018790529091169063a9059cbb906044016020604051808303816000875af115801561053b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055f9190611c65565b506001600160a01b0383166108fc6105778385611c28565b6040518115909202916000818181858888f1935050505015801561059f573d6000803e3d6000fd5b506105a98461156b565b600360006105ba6201518042611c06565b815260200190815260200160002060008282546105d79190611c52565b9250508190555083600660008282546105f09190611c28565b90915550506006546005546106059190611c06565b60075560408051858152602081018390526001600160a01b038516917f1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed910160405180910390a250505050565b61065a611642565b6106626116a2565b565b61066c61115e565b600082116106ac5760405162461bcd60e51b815260206004820152600d60248201526c0a6cadcc840a6dedaca408aa89609b1b6044820152606401610370565b60006106b783610344565b6001546040516370a0823160e01b81526001600160a01b0385811660048301529293509116906370a0823190602401602060405180830381865afa158015610703573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107279190611c87565b8111156107765760405162461bcd60e51b815260206004820152601a60248201527f596f7520646f6e2774206861766520656e6f756768206d656d650000000000006044820152606401610370565b6001546040516323b872dd60e01b81526001600160a01b03848116600483015230602483015260448201849052909116906323b872dd906064016020604051808303816000875af11580156107cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f39190611c65565b506040516001600160a01b0383169084156108fc029085906000818181858888f1935050505015801561082a573d6000803e3d6000fd5b50826007600082825461083d9190611c28565b90915550506007546005546108529190611c06565b60065560408051828152602081018590526001600160a01b038416917fed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a91015b60405180910390a2505050565b60006108a961115e565b6000600554116108cb5760405162461bcd60e51b815260040161037090611bc2565b6000806007546000036108f9578360016005546108e89190611c06565b6108f29190611c28565b9150610917565b8360075460055461090a9190611c06565b6109149190611c28565b91505b8160000361093557600160055461092e9190611c06565b9050610946565b816005546109439190611c06565b90505b6000600754826109569190611c28565b905060006008546009548361096b9190611c3b565b6109759190611c06565b905060006109838284611c52565b9050610431816001611c52565b610998611642565b61066260006116f4565b6109aa611642565b61066261174d565b600080806003816109c66201518042611c06565b8152602001908152602001600020541115610b5f5733600090815260026020908152604080832080548251818502810185019093528083529192909190849084015b82821015610a585783829060005260206000209060030201604051806060016040529081600082015481526020016001820154815260200160028201548152505081526020019060010190610a08565b50505050905080518410610aa35760405162461bcd60e51b8152602060048201526012602482015271092dcecc2d8d2c840e0deded840d2dcc8caf60731b6044820152606401610370565b6000818581518110610ab757610ab7611ca0565b602002602001015190506000600a546008548360000151610ad89190611c3b565b610ae29190611c06565b60408301519091506000610af96201518042611c06565b90506000610b0a6201518084611c06565b90505b818111610b5857600854600082815260036020526040902054610b309086611c3b565b610b3a9190611c06565b610b449088611c52565b965080610b5081611cb6565b915050610b0d565b5050505050505b92915050565b610b6d61115e565b60008111610bae5760405162461bcd60e51b815260206004820152600e60248201526d53656e6420536f6d65204d656d6560901b6044820152606401610370565b6000610bb98261089f565b905034811115610bfb5760405162461bcd60e51b815260206004820152600d60248201526c0a6cadcc8409adee4ca408aa89609b1b6044820152606401610370565b60015460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610c4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c709190611c65565b50336108fc610c7f8334611c28565b6040518115909202916000818181858888f19350505050158015610ca7573d6000803e3d6000fd5b50610cb18261156b565b60036000610cc26201518042611c06565b81526020019081526020016000206000828254610cdf9190611c52565b925050819055508160066000828254610cf89190611c28565b9091555050600654600554610d0d9190611c06565b600755604080518381526020810183905233917f1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed91015b60405180910390a25050565b610d5861115e565b60008111610d995760405162461bcd60e51b815260206004820152600e60248201526d53656e64206d6f7265204d454d4560901b6044820152606401610370565b60003411610dd95760405162461bcd60e51b815260206004820152600d60248201526c0a6cadcc840dadee4ca408aa89609b1b6044820152606401610370565b8060085434610de89190611c3b565b610df29190611c06565b6004541115610e3b5760405162461bcd60e51b815260206004820152601560248201527414dd1858dada5b99c814985d19481b9bdd081b595d605a1b6044820152606401610370565b61044f813461178a565b610e4d61115e565b60008111610e8d5760405162461bcd60e51b815260206004820152600d60248201526c0a6cadcc840a6dedaca408aa89609b1b6044820152606401610370565b6000610e9882610344565b6001546040516370a0823160e01b81523360048201529192506001600160a01b0316906370a0823190602401602060405180830381865afa158015610ee1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f059190611c87565b811115610f545760405162461bcd60e51b815260206004820152601a60248201527f596f7520646f6e2774206861766520656e6f756768206d656d650000000000006044820152606401610370565b6001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610fab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcf9190611c65565b50604051339083156108fc029084906000818181858888f19350505050158015610ffd573d6000803e3d6000fd5b5081600760008282546110109190611c28565b90915550506007546005546110259190611c06565b600655604080518281526020810184905233917fed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a9101610d44565b336000908152600260209081526040808320805482518185028101850190935280835260609492939192909184015b828210156110df578382906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250508152602001906001019061108f565b50505050905090565b6110f0611642565b6001600160a01b0381166111555760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610370565b61044f816116f4565b60005460ff16156106625760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610370565b3360009081526002602052604090205481106111f85760405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610370565b33600090815260026020526040812080548390811061121957611219611ca0565b906000526020600020906003020160405180606001604052908160008201548152602001600182015481526020016002820154815250509050600061125d836109b2565b8251602084015191925090600090611276908490611c52565b600654600a556001546040516370a0823160e01b81523060048201529192506001600160a01b0316906370a0823190602401602060405180830381865afa1580156112c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e99190611c87565b8211156113725760405162461bcd60e51b815260206004820152604b60248201527f536f7272792043757272656e746c79207468697320636f6e747261637420646f60448201527f65736e27742068617665204d656d6520746f2072657475726e2c20436865636b60648201526a206261636b20536f6f6e2160a81b608482015260a401610370565b478111156113fb5760405162461bcd60e51b815260206004820152604a60248201527f536f7272792043757272656e746c79207468697320636f6e747261637420646f60448201527f65736e277420686176652045746820746f2072657475726e2c20436865636b206064820152696261636b20536f6f6e2160b01b608482015260a401610370565b60015460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561144c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114709190611c65565b50604051339082156108fc029083906000818181858888f1935050505015801561149e573d6000803e3d6000fd5b508160065410156114b05760006114be565b816006546114be9190611c28565b6006556007548111156114d25760006114e0565b806007546114e09190611c28565b6007556006546000036114f7576000600455611518565b60065460085460075461150a9190611c3b565b6115149190611c06565b6004555b611521856118f0565b611529611a58565b604080518381526020810183905233917fbb564df1f5d4ebb97b073adcab505c7796a37035ac5d14f51269660939c39cf4910160405180910390a25050505050565b6000806005541161158e5760405162461bcd60e51b815260040161037090611bc2565b6000806007546000036115bc578360016005546115ab9190611c06565b6115b59190611c28565b91506115da565b836007546005546115cd9190611c06565b6115d79190611c28565b91505b816000036115f85760016005546115f19190611c06565b9050611609565b816005546116069190611c06565b90505b6000600754826116199190611c28565b905060006008546009548361162e9190611c3b565b6116389190611c06565b9695505050505050565b6000546001600160a01b036101009091041633146106625760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610370565b6116aa611a6d565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b61175561115e565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586116d73390565b6001546040516323b872dd60e01b8152336004820152306024820152604481018490526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156117e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118059190611c65565b5081600660008282546118189190611c52565b9250508190555080600760008282546118319190611c52565b90915550506040805160608101825283815260208082018481524283850190815233600090815260028085529581208054600181810183559183529490912085516003909502019384559151918301919091555192019190915560065460085460075461189e9190611c3b565b6118a89190611c06565b600455600654600a556118b9611a58565b6040805184815234602082015233917f5caad8f5613b6f1d592fc8c69d8f0999453740f0806c754f20cc92f3d4b2b1b69101610892565b3360009081526002602052604090205481106119445760405162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b6044820152606401610370565b805b3360009081526002602052604090205461196290600190611c28565b811015611a1157336000908152600260205260409020611983826001611c52565b8154811061199357611993611ca0565b906000526020600020906003020160026000336001600160a01b03166001600160a01b0316815260200190815260200160002082815481106119d7576119d7611ca0565b6000918252602090912082546003909202019081556001808301549082015560029182015491015580611a0981611cb6565b915050611946565b50336000908152600260205260409020805480611a3057611a30611ccf565b6000828152602081206003600019909301928302018181556001810182905560020155905550565b600754600654611a689190611c3b565b600555565b60005460ff166106625760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610370565b600060208284031215611ac857600080fd5b5035919050565b80356001600160a01b038116811461043957600080fd5b600080600060608486031215611afb57600080fd5b83359250611b0b60208501611acf565b9150604084013590509250925092565b60008060408385031215611b2e57600080fd5b82359150611b3e60208401611acf565b90509250929050565b602080825282518282018190526000919060409081850190868401855b82811015611b935781518051855286810151878601528501518585015260609093019290850190600101611b64565b5091979650505050505050565b600060208284031215611bb257600080fd5b611bbb82611acf565b9392505050565b6020808252601490820152734e6f7420656e6f756768206c697175696469747960601b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600082611c2357634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610b5f57610b5f611bf0565b8082028115828204841417610b5f57610b5f611bf0565b80820180821115610b5f57610b5f611bf0565b600060208284031215611c7757600080fd5b81518015158114611bbb57600080fd5b600060208284031215611c9957600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b600060018201611cc857611cc8611bf0565b5060010190565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220abbf938c022282536450e21b1be418d2d177af34fa7cd6f48be8c65aa3ab08c564736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xD96A094A GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xD96A094A EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0xDC9031C4 EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0xE4849B32 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xE8BCA8B8 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x250 JUMPI DUP1 PUSH4 0x9C74F05D EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0xD37A389B EQ PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x4189A68E EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x5C572ED0 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A753FED EQ PUSH2 0x119 JUMPI DUP1 PUSH4 0x200061DF EQ PUSH2 0x14C JUMPI DUP1 PUSH4 0x2AD9D559 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x2AFACA20 EQ PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x114 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x125 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x344 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x158 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH2 0x167 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x189 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB6 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AE6 JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH2 0x652 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH2 0x1DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1B JUMP JUMPDEST PUSH2 0x664 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x1FE CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x89F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x143 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x232 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH2 0x990 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH2 0x9A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x143 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x292 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x2B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0x9B2 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x2CA CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x16C PUSH2 0x2DD CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0xD50 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH2 0x2FD CALLDATASIZE PUSH1 0x4 PUSH2 0x1AB6 JUMP JUMPDEST PUSH2 0xE45 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x317 PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x1B47 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16C PUSH2 0x33F CALLDATASIZE PUSH1 0x4 PUSH2 0x1BA0 JUMP JUMPDEST PUSH2 0x10E8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34E PUSH2 0x115E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD GT PUSH2 0x379 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x370 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD PUSH1 0x0 SUB PUSH2 0x3A7 JUMPI DUP4 PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP1 POP PUSH2 0x3C5 JUMP JUMPDEST DUP4 PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH2 0x3C2 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 PUSH1 0x0 SUB PUSH2 0x3E3 JUMPI PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x3DC SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST SWAP2 POP PUSH2 0x3F4 JUMP JUMPDEST DUP1 PUSH1 0x5 SLOAD PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD DUP4 PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD DUP4 PUSH2 0x419 SWAP2 SWAP1 PUSH2 0x1C3B JUMP JUMPDEST PUSH2 0x423 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST SWAP1 POP DUP2 PUSH2 0x431 DUP2 PUSH1 0x1 PUSH2 0x1C52 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x446 PUSH2 0x115E JUMP JUMPDEST PUSH2 0x44F DUP2 PUSH2 0x11A4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x45A PUSH2 0x115E JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x53656E6420536F6D65204D656D65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A6 DUP5 PUSH2 0x89F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA6CADCC8409ADEE4CA408AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x53B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55F SWAP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x8FC PUSH2 0x577 DUP4 DUP6 PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x59F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0x5A9 DUP5 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH2 0x5BA PUSH3 0x15180 TIMESTAMP PUSH2 0x1C06 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x5F0 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0x605 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0x1CBC5AB135991BD2B6A4B034A04AA2AA086DAC1371CB9B16B8B5E2ED6B036BED SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x65A PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x662 PUSH2 0x16A2 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x66C PUSH2 0x115E JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x6AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA6CADCC840A6DEDACA408AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B7 DUP4 PUSH2 0x344 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x703 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x727 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F756768206D656D65000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x7F3 SWAP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x82A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP3 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x83D SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH2 0x852 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 PUSH32 0xED7A144FAD14804D5C249145E3E0E2B63A9EB455B76AEE5BC92D711E9BBA3E4A SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8A9 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD GT PUSH2 0x8CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x370 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 SLOAD PUSH1 0x0 SUB PUSH2 0x8F9 JUMPI DUP4 PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x8E8 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH2 0x8F2 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP2 POP PUSH2 0x917 JUMP JUMPDEST DUP4 PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH2 0x90A SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH2 0x914 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x935 JUMPI PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x92E SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST SWAP1 POP PUSH2 0x946 JUMP JUMPDEST DUP2 PUSH1 0x5 SLOAD PUSH2 0x943 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x956 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD DUP4 PUSH2 0x96B SWAP2 SWAP1 PUSH2 0x1C3B JUMP JUMPDEST PUSH2 0x975 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x983 DUP3 DUP5 PUSH2 0x1C52 JUMP JUMPDEST SWAP1 POP PUSH2 0x431 DUP2 PUSH1 0x1 PUSH2 0x1C52 JUMP JUMPDEST PUSH2 0x998 PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x662 PUSH1 0x0 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x9AA PUSH2 0x1642 JUMP JUMPDEST PUSH2 0x662 PUSH2 0x174D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH1 0x3 DUP2 PUSH2 0x9C6 PUSH3 0x15180 TIMESTAMP PUSH2 0x1C06 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT ISZERO PUSH2 0xB5F JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP5 SWAP1 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xA58 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA08 JUMP JUMPDEST POP POP POP POP SWAP1 POP DUP1 MLOAD DUP5 LT PUSH2 0xAA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x92DCECC2D8D2C840E0DEDED840D2DCC8CAF PUSH1 0x73 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xAB7 JUMPI PUSH2 0xAB7 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xA SLOAD PUSH1 0x8 SLOAD DUP4 PUSH1 0x0 ADD MLOAD PUSH2 0xAD8 SWAP2 SWAP1 PUSH2 0x1C3B JUMP JUMPDEST PUSH2 0xAE2 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0x0 PUSH2 0xAF9 PUSH3 0x15180 TIMESTAMP PUSH2 0x1C06 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB0A PUSH3 0x15180 DUP5 PUSH2 0x1C06 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 GT PUSH2 0xB58 JUMPI PUSH1 0x8 SLOAD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB30 SWAP1 DUP7 PUSH2 0x1C3B JUMP JUMPDEST PUSH2 0xB3A SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH2 0xB44 SWAP1 DUP9 PUSH2 0x1C52 JUMP JUMPDEST SWAP7 POP DUP1 PUSH2 0xB50 DUP2 PUSH2 0x1CB6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB0D JUMP JUMPDEST POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB6D PUSH2 0x115E JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x53656E6420536F6D65204D656D65 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB9 DUP3 PUSH2 0x89F JUMP JUMPDEST SWAP1 POP CALLVALUE DUP2 GT ISZERO PUSH2 0xBFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA6CADCC8409ADEE4CA408AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC4C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC70 SWAP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST POP CALLER PUSH2 0x8FC PUSH2 0xC7F DUP4 CALLVALUE PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 ISZERO SWAP1 SWAP3 MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCA7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH2 0xCB1 DUP3 PUSH2 0x156B JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH2 0xCC2 PUSH3 0x15180 TIMESTAMP PUSH2 0x1C06 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCDF SWAP2 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCF8 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x6 SLOAD PUSH1 0x5 SLOAD PUSH2 0xD0D SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x1CBC5AB135991BD2B6A4B034A04AA2AA086DAC1371CB9B16B8B5E2ED6B036BED SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0xD58 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xD99 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x53656E64206D6F7265204D454D45 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0xDD9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA6CADCC840DADEE4CA408AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST DUP1 PUSH1 0x8 SLOAD CALLVALUE PUSH2 0xDE8 SWAP2 SWAP1 PUSH2 0x1C3B JUMP JUMPDEST PUSH2 0xDF2 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH1 0x4 SLOAD GT ISZERO PUSH2 0xE3B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x14DD1858DADA5B99C814985D19481B9BDD081B595D PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH2 0x44F DUP2 CALLVALUE PUSH2 0x178A JUMP JUMPDEST PUSH2 0xE4D PUSH2 0x115E JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xE8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0xA6CADCC840A6DEDACA408AA89 PUSH1 0x9B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE98 DUP3 PUSH2 0x344 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEE1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF05 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0xF54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520656E6F756768206D656D65000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFAB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFCF SWAP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xFFD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1010 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH2 0x1025 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xED7A144FAD14804D5C249145E3E0E2B63A9EB455B76AEE5BC92D711E9BBA3E4A SWAP2 ADD PUSH2 0xD44 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE PUSH1 0x60 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x10DF JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x108F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x10F0 PUSH2 0x1642 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1155 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x370 JUMP JUMPDEST PUSH2 0x44F DUP2 PUSH2 0x16F4 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT PUSH2 0x11F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x1219 JUMPI PUSH2 0x1219 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x125D DUP4 PUSH2 0x9B2 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD SWAP2 SWAP3 POP SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x1276 SWAP1 DUP5 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0xA SSTORE PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12E9 SWAP2 SWAP1 PUSH2 0x1C87 JUMP JUMPDEST DUP3 GT ISZERO PUSH2 0x1372 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792043757272656E746C79207468697320636F6E747261637420646F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65736E27742068617665204D656D6520746F2072657475726E2C20436865636B PUSH1 0x64 DUP3 ADD MSTORE PUSH11 0x206261636B20536F6F6E21 PUSH1 0xA8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x370 JUMP JUMPDEST SELFBALANCE DUP2 GT ISZERO PUSH2 0x13FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x4A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F7272792043757272656E746C79207468697320636F6E747261637420646F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x65736E277420686176652045746820746F2072657475726E2C20436865636B20 PUSH1 0x64 DUP3 ADD MSTORE PUSH10 0x6261636B20536F6F6E21 PUSH1 0xB0 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x144C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1470 SWAP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x149E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP2 PUSH1 0x6 SLOAD LT ISZERO PUSH2 0x14B0 JUMPI PUSH1 0x0 PUSH2 0x14BE JUMP JUMPDEST DUP2 PUSH1 0x6 SLOAD PUSH2 0x14BE SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x6 SSTORE PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x14D2 JUMPI PUSH1 0x0 PUSH2 0x14E0 JUMP JUMPDEST DUP1 PUSH1 0x7 SLOAD PUSH2 0x14E0 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x7 SSTORE PUSH1 0x6 SLOAD PUSH1 0x0 SUB PUSH2 0x14F7 JUMPI PUSH1 0x0 PUSH1 0x4 SSTORE PUSH2 0x1518 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0x150A SWAP2 SWAP1 PUSH2 0x1C3B JUMP JUMPDEST PUSH2 0x1514 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMPDEST PUSH2 0x1521 DUP6 PUSH2 0x18F0 JUMP JUMPDEST PUSH2 0x1529 PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xBB564DF1F5D4EBB97B073ADCAB505C7796A37035AC5D14F51269660939C39CF4 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 SLOAD GT PUSH2 0x158E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x370 SWAP1 PUSH2 0x1BC2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x7 SLOAD PUSH1 0x0 SUB PUSH2 0x15BC JUMPI DUP4 PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x15AB SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH2 0x15B5 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP2 POP PUSH2 0x15DA JUMP JUMPDEST DUP4 PUSH1 0x7 SLOAD PUSH1 0x5 SLOAD PUSH2 0x15CD SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH2 0x15D7 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP2 POP JUMPDEST DUP2 PUSH1 0x0 SUB PUSH2 0x15F8 JUMPI PUSH1 0x1 PUSH1 0x5 SLOAD PUSH2 0x15F1 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST SWAP1 POP PUSH2 0x1609 JUMP JUMPDEST DUP2 PUSH1 0x5 SLOAD PUSH2 0x1606 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x1619 SWAP2 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD DUP4 PUSH2 0x162E SWAP2 SWAP1 PUSH2 0x1C3B JUMP JUMPDEST PUSH2 0x1638 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH2 0x16AA PUSH2 0x1A6D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR DUP6 SSTORE PUSH1 0x40 MLOAD SWAP4 DIV SWAP2 SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1755 PUSH2 0x115E JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x16D7 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17E1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1805 SWAP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST POP DUP2 PUSH1 0x6 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1818 SWAP2 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1831 SWAP2 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE TIMESTAMP DUP4 DUP6 ADD SWAP1 DUP2 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 DUP1 DUP6 MSTORE SWAP6 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP4 SSTORE SWAP2 DUP4 MSTORE SWAP5 SWAP1 SWAP2 KECCAK256 DUP6 MLOAD PUSH1 0x3 SWAP1 SWAP6 MUL ADD SWAP4 DUP5 SSTORE SWAP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD PUSH2 0x189E SWAP2 SWAP1 PUSH2 0x1C3B JUMP JUMPDEST PUSH2 0x18A8 SWAP2 SWAP1 PUSH2 0x1C06 JUMP JUMPDEST PUSH1 0x4 SSTORE PUSH1 0x6 SLOAD PUSH1 0xA SSTORE PUSH2 0x18B9 PUSH2 0x1A58 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0x5CAAD8F5613B6F1D592FC8C69D8F0999453740F0806C754F20CC92F3D4B2B1B6 SWAP2 ADD PUSH2 0x892 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT PUSH2 0x1944 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x496E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST DUP1 JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1962 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1A11 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x1983 DUP3 PUSH1 0x1 PUSH2 0x1C52 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1993 JUMPI PUSH2 0x1993 PUSH2 0x1CA0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x2 PUSH1 0x0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x19D7 JUMPI PUSH2 0x19D7 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x3 SWAP1 SWAP3 MUL ADD SWAP1 DUP2 SSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x2 SWAP2 DUP3 ADD SLOAD SWAP2 ADD SSTORE DUP1 PUSH2 0x1A09 DUP2 PUSH2 0x1CB6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1946 JUMP JUMPDEST POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0x1A30 JUMPI PUSH2 0x1A30 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x3 PUSH1 0x0 NOT SWAP1 SWAP4 ADD SWAP3 DUP4 MUL ADD DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x2 ADD SSTORE SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD PUSH2 0x1A68 SWAP2 SWAP1 PUSH2 0x1C3B JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x370 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x439 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0x1B0B PUSH1 0x20 DUP6 ADD PUSH2 0x1ACF JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B2E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1B3E PUSH1 0x20 DUP5 ADD PUSH2 0x1ACF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1B93 JUMPI DUP2 MLOAD DUP1 MLOAD DUP6 MSTORE DUP7 DUP2 ADD MLOAD DUP8 DUP7 ADD MSTORE DUP6 ADD MLOAD DUP6 DUP6 ADD MSTORE PUSH1 0x60 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1B64 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BBB DUP3 PUSH2 0x1ACF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x4E6F7420656E6F756768206C6971756964697479 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C23 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0xB5F JUMPI PUSH2 0xB5F PUSH2 0x1BF0 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0xB5F JUMPI PUSH2 0xB5F PUSH2 0x1BF0 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0xB5F JUMPI PUSH2 0xB5F PUSH2 0x1BF0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1BBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1CC8 JUMPI PUSH2 0x1CC8 PUSH2 0x1BF0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAB 0xBF SWAP4 DUP13 MUL 0x22 DUP3 MSTORE8 PUSH5 0x50E21B1BE4 XOR 0xD2 0xD1 PUSH24 0xAF34FA7CD6F48BE8C65AA3AB08C564736F6C634300081300 CALLER ",
							"sourceMap": "243:11880:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8402:758;;;;;;;;;;-1:-1:-1;8402:758:7;;;;;:::i;:::-;;:::i;:::-;;;345:25:9;;;333:2;318:18;8402:758:7;;;;;;;;1913:147;;;;;;;;;;-1:-1:-1;1913:147:7;;;;;:::i;:::-;;:::i;:::-;;819:43;;;;;;;;;;-1:-1:-1;819:43:7;;;;;:::i;:::-;;;;;;;;;;;;;;9210:604;;;;;;:::i;:::-;;:::i;1314:65::-;;;;;;;;;;;;;:::i;10356:688::-;;;;;;;;;;-1:-1:-1;10356:688:7;;;;;:::i;:::-;;:::i;7145:689::-;;;;;;;;;;-1:-1:-1;7145:689:7;;;;;:::i;:::-;;:::i;1615:84:1:-;;;;;;;;;;-1:-1:-1;1662:4:1;1685:7;;;1615:84;;1310:14:9;;1303:22;1285:41;;1273:2;1258:18;1615:84:1;1145:187:9;1824:101:0;;;;;;;;;;;;;:::i;1247:61:7:-;;;;;;;;;;;;;:::i;1201:85:0:-;;;;;;;;;;-1:-1:-1;1247:7:0;1273:6;;;;-1:-1:-1;;;;;1273:6:0;1201:85;;-1:-1:-1;;;;;1501:32:9;;;1483:51;;1471:2;1456:18;1201:85:0;1337:203:9;869:27:7;;;;;;;;;;;;;;;;5380:796;;;;;;;;;;-1:-1:-1;5380:796:7;;;;;:::i;:::-;;:::i;9820:530::-;;;;;;:::i;:::-;;:::i;1563:344::-;;;;;;:::i;:::-;;:::i;11050:638::-;;;;;;;;;;-1:-1:-1;11050:638:7;;;;;:::i;:::-;;:::i;1449:108::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2074:198:0:-;;;;;;;;;;-1:-1:-1;2074:198:0;;;;;:::i;:::-;;:::i;8402:758:7:-;8510:7;1239:19:1;:17;:19::i;:::-;8546:1:7::1;8541:2;;:6;8533:39;;;;-1:-1:-1::0;;;8533:39:7::1;;;;;;;:::i;:::-;;;;;;;;;8582:10;8606::::0;8634:2:::1;;8640:1;8634:7:::0;8630:118:::1;;8671:10;8667:1;8662:2;;:6;;;;:::i;:::-;:19;;;;:::i;:::-;8657:24;;8630:118;;;8727:10;8722:2;;8717;;:7;;;;:::i;:::-;:20;;;;:::i;:::-;8712:25;;8630:118;8761:2;8767:1;8761:7:::0;8757:92:::1;;8794:1;8789:2;;:6;;;;:::i;:::-;8784:11;;8757:92;;;8836:2;8831;;:7;;;;:::i;:::-;8826:12;;8757:92;8858:30;8896:2;;8891;:7;;;;:::i;:::-;8858:40;;8908:16;8964:9;;8953:7;;8928:22;:32;;;;:::i;:::-;8927:46;;;;:::i;:::-;8908:65:::0;-1:-1:-1;9090:22:7;9130:23:::1;9090:22:::0;9152:1:::1;9130:23;:::i;:::-;9123:30;;;;;;;1268:1:1;8402:758:7::0;;;:::o;1913:147::-;1239:19:1;:17;:19::i;:::-;2038:15:7::1;2047:5;2038:8;:15::i;:::-;1913:147:::0;:::o;9210:604::-;1239:19:1;:17;:19::i;:::-;9375:1:7::1;9361:11;:15;9353:42;;;::::0;-1:-1:-1;;;9353:42:7;;3933:2:9;9353:42:7::1;::::0;::::1;3915:21:9::0;3972:2;3952:18;;;3945:30;-1:-1:-1;;;3991:18:9;;;3984:44;4045:18;;9353:42:7::1;3731:338:9::0;9353:42:7::1;9405:18;9426:25;9439:11;9426:12;:25::i;:::-;9405:46;;9483:8;9469:10;:22;;9461:48;;;::::0;-1:-1:-1;;;9461:48:7;;4276:2:9;9461:48:7::1;::::0;::::1;4258:21:9::0;4315:2;4295:18;;;4288:30;-1:-1:-1;;;4334:18:9;;;4327:43;4387:18;;9461:48:7::1;4074:337:9::0;9461:48:7::1;9520:4;::::0;:40:::1;::::0;-1:-1:-1;;;9520:40:7;;-1:-1:-1;;;;;4608:32:9;;;9520:40:7::1;::::0;::::1;4590:51:9::0;4657:18;;;4650:34;;;9520:4:7;;::::1;::::0;:13:::1;::::0;4563:18:9;;9520:40:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;9570:30:7;::::1;:53;9601:21;9612:10:::0;9601:8;:21:::1;:::i;:::-;9570:53;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;9672:25;9685:11;9672:12;:25::i;:::-;9634:8;:34;9643:24;9661:6;9643:15;:24;:::i;:::-;9634:34;;;;;;;;;;;;:63;;;;;;;:::i;:::-;;;;;;;;9714:11;9708:2;;:17;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;9746:2:7::1;::::0;9741::::1;::::0;:7:::1;::::0;9746:2;9741:7:::1;:::i;:::-;9735:2;:14:::0;9765:42:::1;::::0;;5151:25:9;;;5207:2;5192:18;;5185:34;;;-1:-1:-1;;;;;9765:42:7;::::1;::::0;::::1;::::0;5124:18:9;9765:42:7::1;;;;;;;9343:471;9210:604:::0;;;:::o;1314:65::-;1094:13:0;:11;:13::i;:::-;1362:10:7::1;:8;:10::i;:::-;1314:65::o:0;10356:688::-;1239:19:1;:17;:19::i;:::-;10484:1:7::1;10471:10;:14;10463:40;;;::::0;-1:-1:-1;;;10463:40:7;;5432:2:9;10463:40:7::1;::::0;::::1;5414:21:9::0;5471:2;5451:18;;;5444:30;-1:-1:-1;;;5490:18:9;;;5483:43;5543:18;;10463:40:7::1;5230:337:9::0;10463:40:7::1;10513:17;10533:23;10545:10;10533:11;:23::i;:::-;10601:4;::::0;:28:::1;::::0;-1:-1:-1;;;10601:28:7;;-1:-1:-1;;;;;1501:32:9;;;10601:28:7::1;::::0;::::1;1483:51:9::0;10513:43:7;;-1:-1:-1;10601:4:7;::::1;::::0;:14:::1;::::0;1456:18:9;;10601:28:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10588:9;:41;;10567:114;;;::::0;-1:-1:-1;;;10567:114:7;;5963:2:9;10567:114:7::1;::::0;::::1;5945:21:9::0;6002:2;5982:18;;;5975:30;6041:28;6021:18;;;6014:56;6087:18;;10567:114:7::1;5761:350:9::0;10567:114:7::1;10691:4;::::0;:57:::1;::::0;-1:-1:-1;;;10691:57:7;;-1:-1:-1;;;;;6374:15:9;;;10691:57:7::1;::::0;::::1;6356:34:9::0;10731:4:7::1;6406:18:9::0;;;6399:43;6458:18;;;6451:34;;;10691:4:7;;::::1;::::0;:17:::1;::::0;6291:18:9;;10691:57:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;10758:42:7::1;::::0;-1:-1:-1;;;;;10758:30:7;::::1;::::0;:42;::::1;;;::::0;10789:10;;10758:42:::1;::::0;;;10789:10;10758:30;:42;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;10946:10;10940:2;;:16;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;10977:2:7::1;::::0;10972::::1;::::0;:7:::1;::::0;10977:2;10972:7:::1;:::i;:::-;10966:2;:14:::0;10996:41:::1;::::0;;5151:25:9;;;5207:2;5192:18;;5185:34;;;-1:-1:-1;;;;;10996:41:7;::::1;::::0;::::1;::::0;5124:18:9;10996:41:7::1;;;;;;;;10453:591;10356:688:::0;;:::o;7145:689::-;7255:7;1239:19:1;:17;:19::i;:::-;7291:1:7::1;7286:2;;:6;7278:39;;;;-1:-1:-1::0;;;7278:39:7::1;;;;;;;:::i;:::-;7327:10;7351::::0;7379:2:::1;;7385:1;7379:7:::0;7375:120:::1;;7416:11;7412:1;7407:2;;:6;;;;:::i;:::-;:20;;;;:::i;:::-;7402:25;;7375:120;;;7473:11;7468:2;;7463;;:7;;;;:::i;:::-;:21;;;;:::i;:::-;7458:26;;7375:120;7508:2;7514:1;7508:7:::0;7504:92:::1;;7541:1;7536:2;;:6;;;;:::i;:::-;7531:11;;7504:92;;;7583:2;7578;;:7;;;;:::i;:::-;7573:12;;7504:92;7605:29;7642:2;;7637;:7;;;;:::i;:::-;7605:39;;7654:15;7708:9;;7697:7;;7673:21;:31;;;;:::i;:::-;7672:45;;;;:::i;:::-;7654:63:::0;-1:-1:-1;7728:26:7::1;7757:31;7654:63:::0;7757:21;:31:::1;:::i;:::-;7728:60:::0;-1:-1:-1;7805:22:7::1;7728:60:::0;7826:1:::1;7805:22;:::i;1824:101:0:-:0;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;1247:61:7:-:0;1094:13:0;:11;:13::i;:::-;1293:8:7::1;:6;:8::i;5380:796::-:0;5444:7;;;5497:8;5444:7;5506:24;5524:6;5506:15;:24;:::i;:::-;5497:34;;;;;;;;;;;;:38;5493:652;;;5590:10;5551:28;5582:19;;;:7;:19;;;;;;;;5551:50;;;;;;;;;;;;;;;;;;;5582:19;;5551:50;:28;;:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5635:6;:13;5623:9;:25;5615:56;;;;-1:-1:-1;;;5615:56:7;;6698:2:9;5615:56:7;;;6680:21:9;6737:2;6717:18;;;6710:30;-1:-1:-1;;;6756:18:9;;;6749:48;6814:18;;5615:56:7;6496:342:9;5615:56:7;5686:22;5711:6;5718:9;5711:17;;;;;;;;:::i;:::-;;;;;;;5686:42;;5742:17;5793:9;;5780;;5763:2;:14;;;:26;;;;:::i;:::-;5762:40;;;;:::i;:::-;5840:7;;;;5742:60;;-1:-1:-1;5817:20:7;5882:24;5900:6;5882:15;:24;:::i;:::-;5861:45;-1:-1:-1;5943:11:7;5957:21;5972:6;5957:12;:21;:::i;:::-;5943:35;;5921:214;6003:10;5996:3;:17;5921:214;;6111:9;;6094:13;;;;:8;:13;;;;;;6082:25;;:9;:25;:::i;:::-;6081:39;;;;:::i;:::-;6069:51;;;;:::i;:::-;;-1:-1:-1;6031:5:7;;;;:::i;:::-;;;;5921:214;;;;5537:608;;;;;5493:652;6161:8;5380:796;-1:-1:-1;;5380:796:7:o;9820:530::-;1239:19:1;:17;:19::i;:::-;9915:1:7::1;9901:11;:15;9893:42;;;::::0;-1:-1:-1;;;9893:42:7;;3933:2:9;9893:42:7::1;::::0;::::1;3915:21:9::0;3972:2;3952:18;;;3945:30;-1:-1:-1;;;3991:18:9;;;3984:44;4045:18;;9893:42:7::1;3731:338:9::0;9893:42:7::1;9945:18;9966:25;9979:11;9966:12;:25::i;:::-;9945:46;;10023:9;10009:10;:23;;10001:49;;;::::0;-1:-1:-1;;;10001:49:7;;4276:2:9;10001:49:7::1;::::0;::::1;4258:21:9::0;4315:2;4295:18;;;4288:30;-1:-1:-1;;;4334:18:9;;;4327:43;4387:18;;10001:49:7::1;4074:337:9::0;10001:49:7::1;10061:4;::::0;:38:::1;::::0;-1:-1:-1;;;10061:38:7;;10075:10:::1;10061:38;::::0;::::1;4590:51:9::0;4657:18;;;4650:34;;;-1:-1:-1;;;;;10061:4:7;;::::1;::::0;:13:::1;::::0;4563:18:9;;10061:38:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;10117:10:7::1;10109:52;10138:22;10150:10:::0;10138:9:::1;:22;:::i;:::-;10109:52;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;10210:25;10223:11;10210:12;:25::i;:::-;10172:8;:34;10181:24;10199:6;10181:15;:24;:::i;:::-;10172:34;;;;;;;;;;;;:63;;;;;;;:::i;:::-;;;;;;;;10252:11;10246:2;;:17;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;10284:2:7::1;::::0;10279::::1;::::0;:7:::1;::::0;10284:2;10279:7:::1;:::i;:::-;10273:2;:14:::0;10303:40:::1;::::0;;5151:25:9;;;5207:2;5192:18;;5185:34;;;10307:10:7::1;::::0;10303:40:::1;::::0;5124:18:9;10303:40:7::1;;;;;;;;9883:467;9820:530:::0;:::o;1563:344::-;1239:19:1;:17;:19::i;:::-;1660:1:7::1;1646:11;:15;1638:42;;;::::0;-1:-1:-1;;;1638:42:7;;7317:2:9;1638:42:7::1;::::0;::::1;7299:21:9::0;7356:2;7336:18;;;7329:30;-1:-1:-1;;;7375:18:9;;;7368:44;7429:18;;1638:42:7::1;7115:338:9::0;1638:42:7::1;1710:1;1698:9;:13;1690:39;;;::::0;-1:-1:-1;;;1690:39:7;;7660:2:9;1690:39:7::1;::::0;::::1;7642:21:9::0;7699:2;7679:18;;;7672:30;-1:-1:-1;;;7718:18:9;;;7711:43;7771:18;;1690:39:7::1;7458:337:9::0;1690:39:7::1;1802:11;1789:9;;1777;:21;;;;:::i;:::-;1776:37;;;;:::i;:::-;1760:12;;:53;;1739:121;;;::::0;-1:-1:-1;;;1739:121:7;;8002:2:9;1739:121:7::1;::::0;::::1;7984:21:9::0;8041:2;8021:18;;;8014:30;-1:-1:-1;;;8060:18:9;;;8053:51;8121:18;;1739:121:7::1;7800:345:9::0;1739:121:7::1;1870:30;1877:11;1890:9;1870:6;:30::i;11050:638::-:0;1239:19:1;:17;:19::i;:::-;11136:1:7::1;11123:10;:14;11115:40;;;::::0;-1:-1:-1;;;11115:40:7;;5432:2:9;11115:40:7::1;::::0;::::1;5414:21:9::0;5471:2;5451:18;;;5444:30;-1:-1:-1;;;5490:18:9;;;5483:43;5543:18;;11115:40:7::1;5230:337:9::0;11115:40:7::1;11165:17;11185:23;11197:10;11185:11;:23::i;:::-;11253:4;::::0;:26:::1;::::0;-1:-1:-1;;;11253:26:7;;11268:10:::1;11253:26;::::0;::::1;1483:51:9::0;11165:43:7;;-1:-1:-1;;;;;;11253:4:7::1;::::0;:14:::1;::::0;1456:18:9;;11253:26:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11240:9;:39;;11219:112;;;::::0;-1:-1:-1;;;11219:112:7;;5963:2:9;11219:112:7::1;::::0;::::1;5945:21:9::0;6002:2;5982:18;;;5975:30;6041:28;6021:18;;;6014:56;6087:18;;11219:112:7::1;5761:350:9::0;11219:112:7::1;11341:4;::::0;:55:::1;::::0;-1:-1:-1;;;11341:55:7;;11359:10:::1;11341:55;::::0;::::1;6356:34:9::0;11379:4:7::1;6406:18:9::0;;;6399:43;6458:18;;;6451:34;;;-1:-1:-1;;;;;11341:4:7;;::::1;::::0;:17:::1;::::0;6291:18:9;;11341:55:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;11406:40:7::1;::::0;11414:10:::1;::::0;11406:40;::::1;;;::::0;11435:10;;11406:40:::1;::::0;;;11435:10;11414;11406:40;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;11592:10;11586:2;;:16;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;11623:2:7::1;::::0;11618::::1;::::0;:7:::1;::::0;11623:2;11618:7:::1;:::i;:::-;11612:2;:14:::0;11642:39:::1;::::0;;5151:25:9;;;5207:2;5192:18;;5185:34;;;11647:10:7::1;::::0;11642:39:::1;::::0;5124:18:9;11642:39:7::1;4977:248:9::0;1449:108:7;1539:10;1531:19;;;;:7;:19;;;;;;;;1524:26;;;;;;;;;;;;;;;;;1491:21;;1524:26;;1531:19;;1524:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1449:108;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;8352:2:9;2154:73:0::1;::::0;::::1;8334:21:9::0;8391:2;8371:18;;;8364:30;8430:34;8410:18;;;8403:62;-1:-1:-1;;;8481:18:9;;;8474:36;8527:19;;2154:73:0::1;8150:402:9::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;1767:106:1:-:0;1662:4;1685:7;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:1;;8759:2:9;1828:38:1;;;8741:21:9;8798:2;8778:18;;;8771:30;-1:-1:-1;;;8817:18:9;;;8810:46;8873:18;;1828:38:1;8557:340:9;2628:1186:7;2704:10;2696:19;;;;:7;:19;;;;;:26;2688:34;;2680:66;;;;-1:-1:-1;;;2680:66:7;;9104:2:9;2680:66:7;;;9086:21:9;9143:2;9123:18;;;9116:30;-1:-1:-1;;;9162:18:9;;;9155:49;9221:18;;2680:66:7;8902:343:9;2680:66:7;2790:10;2757:22;2782:19;;;:7;:19;;;;;:26;;2802:5;;2782:26;;;;;;:::i;:::-;;;;;;;;;;;2757:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2819:11;2833:21;2848:5;2833:14;:21::i;:::-;2889:14;;2937:13;;;;2819:35;;-1:-1:-1;2889:14:7;2864:22;;2937:19;;2819:35;;2937:19;:::i;:::-;2978:2;;2966:9;:14;3030:4;;:29;;-1:-1:-1;;;3030:29:7;;3053:4;3030:29;;;1483:51:9;2913:43:7;;-1:-1:-1;;;;;;3030:4:7;;:14;;1456:18:9;;3030:29:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3012:14;:47;;2991:169;;;;-1:-1:-1;;;2991:169:7;;9452:2:9;2991:169:7;;;9434:21:9;9491:2;9471:18;;;9464:30;9530:34;9510:18;;;9503:62;9601:34;9581:18;;;9574:62;-1:-1:-1;;;9652:19:9;;;9645:42;9704:19;;2991:169:7;9250:479:9;2991:169:7;3208:21;3191:13;:38;;3170:159;;;;-1:-1:-1;;;3170:159:7;;9936:2:9;3170:159:7;;;9918:21:9;9975:2;9955:18;;;9948:30;10014:34;9994:18;;;9987:62;10085:34;10065:18;;;10058:62;-1:-1:-1;;;10136:19:9;;;10129:41;10187:19;;3170:159:7;9734:478:9;3170:159:7;3339:4;;:41;;-1:-1:-1;;;3339:41:7;;3353:10;3339:41;;;4590:51:9;4657:18;;;4650:34;;;-1:-1:-1;;;;;3339:4:7;;;;:13;;4563:18:9;;3339:41:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3390:43:7;;3398:10;;3390:43;;;;;3419:13;;3390:43;;;;3419:13;3398:10;3390:43;;;;;;;;;;;;;;;;;;;;;3456:14;3450:2;;:20;;3449:50;;3498:1;3449:50;;;3480:14;3475:2;;:19;;;;:::i;:::-;3444:2;:55;3515:2;;:19;-1:-1:-1;3515:19:7;3514:48;;3561:1;3514:48;;;3544:13;3539:2;;:18;;;;:::i;:::-;3509:2;:53;3577:2;;3583:1;3577:7;3573:121;;3615:1;3600:12;:16;3573:121;;;3681:2;;3668:9;;3663:2;;:14;;;;:::i;:::-;3662:21;;;;:::i;:::-;3647:12;:36;3573:121;3704:17;3715:5;3704:10;:17::i;:::-;3732:10;:8;:10::i;:::-;3757:50;;;5151:25:9;;;5207:2;5192:18;;5185:34;;;3765:10:7;;3757:50;;5124:18:9;3757:50:7;;;;;;;2670:1144;;;;2628:1186;:::o;7840:556::-;7906:7;7938:1;7933:2;;:6;7925:39;;;;-1:-1:-1;;;7925:39:7;;;;;;;:::i;:::-;7974:10;7998;8026:2;;8032:1;8026:7;8022:120;;8063:11;8059:1;8054:2;;:6;;;;:::i;:::-;:20;;;;:::i;:::-;8049:25;;8022:120;;;8120:11;8115:2;;8110;;:7;;;;:::i;:::-;:21;;;;:::i;:::-;8105:26;;8022:120;8155:2;8161:1;8155:7;8151:92;;8188:1;8183:2;;:6;;;;:::i;:::-;8178:11;;8151:92;;;8230:2;8225;;:7;;;;:::i;:::-;8220:12;;8151:92;8252:29;8289:2;;8284;:7;;;;:::i;:::-;8252:39;;8301:15;8355:9;;8344:7;;8320:21;:31;;;;:::i;:::-;8319:45;;;;:::i;:::-;8301:63;7840:556;-1:-1:-1;;;;;;7840:556:7:o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;;;;;719:10:6;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;10419:2:9;1414:68:0;;;10401:21:9;;;10438:18;;;10431:30;10497:34;10477:18;;;10470:62;10549:18;;1414:68:0;10217:356:9;2433:117:1;1486:16;:14;:16::i;:::-;2501:5:::1;2491:15:::0;;-1:-1:-1;;2491:15:1::1;::::0;;2521:22:::1;719:10:6::0;2530:12:1::1;2521:22;::::0;-1:-1:-1;;;;;1501:32:9;;;1483:51;;1471:2;1456:18;2521:22:1::1;;;;;;;2433:117::o:0;2426:187:0:-;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;2518:6;2534:17;;;-1:-1:-1;;;;;;2534:17:0;;;;;2566:40;;2518:6;;;;;;;2534:17;;2518:6;;2566:40;;;2489:124;2426:187;:::o;2186:115:1:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:1::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;719:10:6::0;;640:96;2066:518:7;2142:4;;:57;;-1:-1:-1;;;2142:57:7;;2160:10;2142:57;;;6356:34:9;2180:4:7;6406:18:9;;;6399:43;6458:18;;;6451:34;;;-1:-1:-1;;;;;2142:4:7;;;;:17;;6291:18:9;;2142:57:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2215:11;2209:2;;:17;;;;;;;:::i;:::-;;;;;;;;2242:10;2236:2;;:16;;;;;;;:::i;:::-;;;;-1:-1:-1;;2288:100:7;;;;;;;;;;;;;;;;;;2363:15;2288:100;;;;;;2406:10;2263:22;2398:19;;;:7;:19;;;;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2472:2;;2459:9;;2454:2;;:14;;2459:9;2454:14;:::i;:::-;2453:21;;;;:::i;:::-;2437:12;:38;2498:2;;2486:9;:14;2511:10;:8;:10::i;:::-;2536:41;;;5151:25:9;;;2567:9:7;5207:2:9;5192:18;;5185:34;2542:10:7;;2536:41;;5124:18:9;2536:41:7;4977:248:9;3820:312:7;3898:10;3890:19;;;;:7;:19;;;;;:26;3882:34;;3874:66;;;;-1:-1:-1;;;3874:66:7;;9104:2:9;3874:66:7;;;9086:21:9;9143:2;9123:18;;;9116:30;-1:-1:-1;;;9162:18:9;;;9155:49;9221:18;;3874:66:7;8902:343:9;3874:66:7;3967:5;3950:141;3986:10;3978:19;;;;:7;:19;;;;;:26;:30;;4007:1;;3978:30;:::i;:::-;3974:1;:34;3950:141;;;4062:10;4054:19;;;;:7;:19;;;;;4074:5;:1;4078;4074:5;:::i;:::-;4054:26;;;;;;;;:::i;:::-;;;;;;;;;;;4029:7;:19;4037:10;-1:-1:-1;;;;;4029:19:7;-1:-1:-1;;;;;4029:19:7;;;;;;;;;;;;4049:1;4029:22;;;;;;;;:::i;:::-;;;;;;;;;:51;;:22;;;;;:51;;;;;;;;;;;;;;;;;;;;4010:3;;;;:::i;:::-;;;;3950:141;;;-1:-1:-1;4108:10:7;4100:19;;;;:7;:19;;;;;:25;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;4100:25:7;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3820:312:7:o;1385:58::-;1434:2;;1429;;:7;;;;:::i;:::-;1424:2;:12;1385:58::o;1945:106:1:-;1662:4;1685:7;;;2003:41;;;;-1:-1:-1;;;2003:41:1;;10912:2:9;2003:41:1;;;10894:21:9;10951:2;10931:18;;;10924:30;-1:-1:-1;;;10970:18:9;;;10963:50;11030:18;;2003:41:1;10710:344:9;14:180;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:9;;14:180;-1:-1:-1;14:180:9:o;381:173::-;449:20;;-1:-1:-1;;;;;498:31:9;;488:42;;478:70;;544:1;541;534:12;559:322;636:6;644;652;705:2;693:9;684:7;680:23;676:32;673:52;;;721:1;718;711:12;673:52;757:9;744:23;734:33;;786:38;820:2;809:9;805:18;786:38;:::i;:::-;776:48;;871:2;860:9;856:18;843:32;833:42;;559:322;;;;;:::o;886:254::-;954:6;962;1015:2;1003:9;994:7;990:23;986:32;983:52;;;1031:1;1028;1021:12;983:52;1067:9;1054:23;1044:33;;1096:38;1130:2;1119:9;1115:18;1096:38;:::i;:::-;1086:48;;886:254;;;;;:::o;1545:851::-;1774:2;1826:21;;;1896:13;;1799:18;;;1918:22;;;1745:4;;1774:2;1959;;1977:18;;;;2018:15;;;1745:4;2061:309;2075:6;2072:1;2069:13;2061:309;;;2134:13;;2172:9;;2160:22;;2222:11;;;2216:18;2202:12;;;2195:40;2275:11;;2269:18;2255:12;;;2248:40;2317:4;2308:14;;;;2345:15;;;;2097:1;2090:9;2061:309;;;-1:-1:-1;2387:3:9;;1545:851;-1:-1:-1;;;;;;;1545:851:9:o;2401:186::-;2460:6;2513:2;2501:9;2492:7;2488:23;2484:32;2481:52;;;2529:1;2526;2519:12;2481:52;2552:29;2571:9;2552:29;:::i;:::-;2542:39;2401:186;-1:-1:-1;;;2401:186:9:o;2592:344::-;2794:2;2776:21;;;2833:2;2813:18;;;2806:30;-1:-1:-1;;;2867:2:9;2852:18;;2845:50;2927:2;2912:18;;2592:344::o;2941:127::-;3002:10;2997:3;2993:20;2990:1;2983:31;3033:4;3030:1;3023:15;3057:4;3054:1;3047:15;3073:217;3113:1;3139;3129:132;;3183:10;3178:3;3174:20;3171:1;3164:31;3218:4;3215:1;3208:15;3246:4;3243:1;3236:15;3129:132;-1:-1:-1;3275:9:9;;3073:217::o;3295:128::-;3362:9;;;3383:11;;;3380:37;;;3397:18;;:::i;3428:168::-;3501:9;;;3532;;3549:15;;;3543:22;;3529:37;3519:71;;3570:18;;:::i;3601:125::-;3666:9;;;3687:10;;;3684:36;;;3700:18;;:::i;4695:277::-;4762:6;4815:2;4803:9;4794:7;4790:23;4786:32;4783:52;;;4831:1;4828;4821:12;4783:52;4863:9;4857:16;4916:5;4909:13;4902:21;4895:5;4892:32;4882:60;;4938:1;4935;4928:12;5572:184;5642:6;5695:2;5683:9;5674:7;5670:23;5666:32;5663:52;;;5711:1;5708;5701:12;5663:52;-1:-1:-1;5734:16:9;;5572:184;-1:-1:-1;5572:184:9:o;6843:127::-;6904:10;6899:3;6895:20;6892:1;6885:31;6935:4;6932:1;6925:15;6959:4;6956:1;6949:15;6975:135;7014:3;7035:17;;;7032:43;;7055:18;;:::i;:::-;-1:-1:-1;7102:1:9;7091:13;;6975:135::o;10578:127::-;10639:10;10634:3;10630:20;10627:1;10620:31;10670:4;10667:1;10660:15;10694:4;10691:1;10684:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1490200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_distributeTax(uint256)": "infinite",
								"buy(uint256)": "infinite",
								"buy(uint256,address,uint256)": "infinite",
								"dailyTax(uint256)": "2495",
								"getETHPrice(uint256)": "infinite",
								"getMemePrice(uint256)": "infinite",
								"getStacks()": "infinite",
								"owner()": "2375",
								"pause()": "infinite",
								"paused()": "2381",
								"renounceOwnership()": "infinite",
								"sell(uint256)": "infinite",
								"sell(uint256,address)": "infinite",
								"stack(uint256)": "infinite",
								"stackingRate()": "2351",
								"transferOwnership(address)": "28479",
								"unpause()": "infinite",
								"unstack(uint256)": "infinite"
							},
							"internal": {
								"_removeArr(uint256)": "infinite",
								"_stack(uint256,uint256)": "infinite",
								"_unstack(uint256)": "infinite",
								"_updateK()": "26409",
								"calculateTax(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 243,
									"end": 12123,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 243,
									"end": 12123,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 243,
									"end": 12123,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1008,
									"end": 1013,
									"name": "PUSH",
									"source": 7,
									"value": "8AC7230489E80000"
								},
								{
									"begin": 979,
									"end": 1013,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 979,
									"end": 1013,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1065,
									"end": 1069,
									"name": "PUSH",
									"source": 7,
									"value": "3E8"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1049,
									"name": "PUSH",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1048,
									"end": 1061,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1048,
									"end": 1061,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1061,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1061,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1048,
									"end": 1061,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1061,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1048,
									"end": 1061,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1047,
									"end": 1069,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1047,
									"end": 1069,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1020,
									"end": 1069,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1020,
									"end": 1069,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2619,
									"end": 2621,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 2619,
									"end": 2621,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2590,
									"end": 2621,
									"name": "PUSH",
									"source": 7,
									"value": "A"
								},
								{
									"begin": 2590,
									"end": 2621,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "tag",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 1076,
									"end": 1241,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1076,
									"end": 1241,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1130,
									"end": 1134,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1130,
									"end": 1147,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1130,
									"end": 1147,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1130,
									"end": 1147,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1130,
									"end": 1147,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1130,
									"end": 1147,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1130,
									"end": 1147,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1130,
									"end": 1147,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1130,
									"end": 1147,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1179,
									"end": 1188,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 1179,
									"end": 1188,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1192,
									"end": 1196,
									"name": "PUSH",
									"source": 7,
									"value": "3E8"
								},
								{
									"begin": 1192,
									"end": 1196,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1168,
									"end": 1176,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 1168,
									"end": 1188,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "tag",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 1168,
									"end": 1188,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1167,
									"end": 1196,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1196,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1167,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1167,
									"end": 1196,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 1167,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1157,
									"end": 1164,
									"name": "PUSH",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1157,
									"end": 1196,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 243,
									"end": 12123,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 243,
									"end": 12123,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 243,
									"end": 12123,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 279,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 14,
									"end": 279,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 87,
									"end": 96,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 87,
									"end": 96,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 87,
									"end": 96,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 118,
									"end": 127,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 118,
									"end": 127,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 135,
									"end": 150,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 135,
									"end": 150,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 135,
									"end": 150,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 129,
									"end": 151,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 129,
									"end": 151,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 115,
									"end": 152,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 105,
									"end": 273,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 105,
									"end": 273,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 195,
									"end": 205,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 190,
									"end": 193,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 186,
									"end": 206,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 183,
									"end": 184,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 176,
									"end": 207,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 230,
									"end": 234,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 227,
									"end": 228,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 235,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 258,
									"end": 262,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 255,
									"end": 256,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 248,
									"end": 263,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 105,
									"end": 273,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 105,
									"end": 273,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 14,
									"end": 279,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 14,
									"end": 279,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 14,
									"end": 279,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14,
									"end": 279,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 14,
									"end": 279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 284,
									"end": 501,
									"name": "tag",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 284,
									"end": 501,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 324,
									"end": 325,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 350,
									"end": 351,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 340,
									"end": 472,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 340,
									"end": 472,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 394,
									"end": 404,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 389,
									"end": 392,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 385,
									"end": 405,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 382,
									"end": 383,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 375,
									"end": 406,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 429,
									"end": 433,
									"name": "PUSH",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 426,
									"end": 427,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 419,
									"end": 434,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 457,
									"end": 461,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 454,
									"end": 455,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 447,
									"end": 462,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 340,
									"end": 472,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 340,
									"end": 472,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 486,
									"end": 495,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 486,
									"end": 495,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 284,
									"end": 501,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 506,
									"end": 857,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 506,
									"end": 857,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 585,
									"end": 591,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 593,
									"end": 599,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 646,
									"end": 648,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 634,
									"end": 643,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 625,
									"end": 632,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 621,
									"end": 644,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 617,
									"end": 649,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 614,
									"end": 666,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 614,
									"end": 666,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 614,
									"end": 666,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 662,
									"end": 663,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 659,
									"end": 660,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 652,
									"end": 664,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 614,
									"end": 666,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 614,
									"end": 666,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 688,
									"end": 704,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 688,
									"end": 704,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 733,
									"end": 764,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 733,
									"end": 764,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 723,
									"end": 765,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 723,
									"end": 765,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 713,
									"end": 783,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 713,
									"end": 783,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 779,
									"end": 780,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 776,
									"end": 777,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 769,
									"end": 781,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 713,
									"end": 783,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 713,
									"end": 783,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 847,
									"end": 849,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 832,
									"end": 850,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 832,
									"end": 850,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 832,
									"end": 850,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 832,
									"end": 850,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 826,
									"end": 851,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 802,
									"end": 807,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 802,
									"end": 807,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 826,
									"end": 851,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 826,
									"end": 851,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 506,
									"end": 857,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 506,
									"end": 857,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 506,
									"end": 857,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 243,
									"end": 12123,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 12123,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 243,
									"end": 12123,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 243,
									"end": 12123,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 12123,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 243,
									"end": 12123,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 12123,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220abbf938c022282536450e21b1be418d2d177af34fa7cd6f48be8c65aa3ab08c564736f6c63430008130033",
									".code": [
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "8456CB59"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "D96A094A"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "D96A094A"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "DC9031C4"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "E4849B32"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "E8BCA8B8"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "8456CB59"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "9C74F05D"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "D37A389B"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "tag",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "3F4BA83A"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "3F4BA83A"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "4189A68E"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "5C572ED0"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "5C975ABB"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "tag",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "1A753FED"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "200061DF"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "2AD9D559"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "2AFACA20"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 243,
											"end": 12123,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 8402,
											"end": 9160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 8402,
											"end": 9160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 345,
											"end": 370,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 345,
											"end": 370,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 333,
											"end": 335,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 336,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1913,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1913,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 819,
											"end": 862,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 819,
											"end": 862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 819,
											"end": 862,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 819,
											"end": 862,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 819,
											"end": 862,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 819,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 819,
											"end": 862,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 819,
											"end": 862,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 819,
											"end": 862,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 819,
											"end": 862,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 819,
											"end": 862,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 819,
											"end": 862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 819,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 819,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 819,
											"end": 862,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 819,
											"end": 862,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 819,
											"end": 862,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 819,
											"end": 862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 819,
											"end": 862,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 819,
											"end": 862,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 819,
											"end": 862,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 819,
											"end": 862,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 819,
											"end": 862,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 819,
											"end": 862,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 819,
											"end": 862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 819,
											"end": 862,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 819,
											"end": 862,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 819,
											"end": 862,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 819,
											"end": 862,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 819,
											"end": 862,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 819,
											"end": 862,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 819,
											"end": 862,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 819,
											"end": 862,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9210,
											"end": 9814,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 9210,
											"end": 9814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9210,
											"end": 9814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 9210,
											"end": 9814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 9210,
											"end": 9814,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9210,
											"end": 9814,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9210,
											"end": 9814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 9210,
											"end": 9814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9210,
											"end": 9814,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 9210,
											"end": 9814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9210,
											"end": 9814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 9210,
											"end": 9814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1314,
											"end": 1379,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1314,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1314,
											"end": 1379,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1314,
											"end": 1379,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1314,
											"end": 1379,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1314,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1314,
											"end": 1379,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1314,
											"end": 1379,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1314,
											"end": 1379,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1314,
											"end": 1379,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1314,
											"end": 1379,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1314,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1314,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1314,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1314,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1314,
											"end": 1379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 10356,
											"end": 11044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 10356,
											"end": 11044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7834,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 7145,
											"end": 7834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7834,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7834,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7834,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 7145,
											"end": 7834,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7834,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7145,
											"end": 7834,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7834,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7834,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 7145,
											"end": 7834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7145,
											"end": 7834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 7145,
											"end": 7834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 7145,
											"end": 7834,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7834,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7145,
											"end": 7834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 7145,
											"end": 7834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7834,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 7145,
											"end": 7834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 7145,
											"end": 7834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1310,
											"end": 1324,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1310,
											"end": 1324,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1303,
											"end": 1325,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1285,
											"end": 1326,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1285,
											"end": 1326,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1273,
											"end": 1275,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1258,
											"end": 1276,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1145,
											"end": 1332,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1308,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 1247,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1308,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1308,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1308,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1247,
											"end": 1308,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1308,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1308,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1308,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1308,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 1247,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1308,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1247,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1247,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1247,
											"end": 1308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1501,
											"end": 1533,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1533,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1533,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1483,
											"end": 1534,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1483,
											"end": 1534,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1471,
											"end": 1473,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 1337,
											"end": 1540,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 869,
											"end": 896,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 869,
											"end": 896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 869,
											"end": 896,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 869,
											"end": 896,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 869,
											"end": 896,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 869,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 869,
											"end": 896,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 869,
											"end": 896,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 896,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 869,
											"end": 896,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 869,
											"end": 896,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 869,
											"end": 896,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 869,
											"end": 896,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 869,
											"end": 896,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 869,
											"end": 896,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 869,
											"end": 896,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 869,
											"end": 896,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 869,
											"end": 896,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 5380,
											"end": 6176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "tag",
											"source": 7,
											"value": "81"
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5380,
											"end": 6176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9820,
											"end": 10350,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 9820,
											"end": 10350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9820,
											"end": 10350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 9820,
											"end": 10350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 9820,
											"end": 10350,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9820,
											"end": 10350,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9820,
											"end": 10350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 9820,
											"end": 10350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9820,
											"end": 10350,
											"name": "tag",
											"source": 7,
											"value": "85"
										},
										{
											"begin": 9820,
											"end": 10350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9820,
											"end": 10350,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 9820,
											"end": 10350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1907,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1563,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 1563,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1563,
											"end": 1907,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1907,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1563,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 1563,
											"end": 1907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1907,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 1563,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 1563,
											"end": 1907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11050,
											"end": 11688,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 11050,
											"end": 11688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11050,
											"end": 11688,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 11050,
											"end": 11688,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11050,
											"end": 11688,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11050,
											"end": 11688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 11050,
											"end": 11688,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11050,
											"end": 11688,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11050,
											"end": 11688,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11050,
											"end": 11688,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11050,
											"end": 11688,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 11050,
											"end": 11688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11050,
											"end": 11688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 11050,
											"end": 11688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 11050,
											"end": 11688,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 11050,
											"end": 11688,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11050,
											"end": 11688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 11050,
											"end": 11688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11050,
											"end": 11688,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 11050,
											"end": 11688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11050,
											"end": 11688,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 11050,
											"end": 11688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1449,
											"end": 1557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 1449,
											"end": 1557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8510,
											"end": 8517,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8546,
											"end": 8547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8541,
											"end": 8543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 8541,
											"end": 8543,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8541,
											"end": 8547,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 8533,
											"end": 8572,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8533,
											"end": 8572,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8533,
											"end": 8572,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8572,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8533,
											"end": 8572,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 8533,
											"end": 8572,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 8533,
											"end": 8572,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8572,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 8533,
											"end": 8572,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8572,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8533,
											"end": 8572,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8572,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8572,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8572,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8572,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8572,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8533,
											"end": 8572,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 8533,
											"end": 8572,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8582,
											"end": 8592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8616,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8634,
											"end": 8636,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 8634,
											"end": 8636,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8640,
											"end": 8641,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8634,
											"end": 8641,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8630,
											"end": 8748,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 8630,
											"end": 8748,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8671,
											"end": 8681,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8667,
											"end": 8668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8662,
											"end": 8664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 8662,
											"end": 8664,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8668,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 8662,
											"end": 8668,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8668,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8668,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 8662,
											"end": 8668,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8668,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 8662,
											"end": 8668,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8681,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 8662,
											"end": 8681,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8681,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8681,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 8662,
											"end": 8681,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8662,
											"end": 8681,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 8662,
											"end": 8681,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8657,
											"end": 8681,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8657,
											"end": 8681,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8630,
											"end": 8748,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 8630,
											"end": 8748,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8630,
											"end": 8748,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "111"
										},
										{
											"begin": 8630,
											"end": 8748,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8727,
											"end": 8737,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8722,
											"end": 8724,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 8722,
											"end": 8724,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 8717,
											"end": 8719,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 8717,
											"end": 8724,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8724,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8724,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 8717,
											"end": 8724,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8724,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 8717,
											"end": 8724,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 8717,
											"end": 8737,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 8717,
											"end": 8737,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8737,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 8717,
											"end": 8737,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8712,
											"end": 8737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8712,
											"end": 8737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8630,
											"end": 8748,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 8630,
											"end": 8748,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8761,
											"end": 8763,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8767,
											"end": 8768,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8761,
											"end": 8768,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8757,
											"end": 8849,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 8757,
											"end": 8849,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8794,
											"end": 8795,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8789,
											"end": 8791,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 8789,
											"end": 8791,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8789,
											"end": 8795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 8789,
											"end": 8795,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8789,
											"end": 8795,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8789,
											"end": 8795,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 8789,
											"end": 8795,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8789,
											"end": 8795,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 8789,
											"end": 8795,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8784,
											"end": 8795,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8784,
											"end": 8795,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8757,
											"end": 8849,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 8757,
											"end": 8849,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8757,
											"end": 8849,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 8757,
											"end": 8849,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8836,
											"end": 8838,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8831,
											"end": 8833,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 8831,
											"end": 8833,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8831,
											"end": 8838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 8831,
											"end": 8838,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8831,
											"end": 8838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8831,
											"end": 8838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 8831,
											"end": 8838,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8831,
											"end": 8838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 8831,
											"end": 8838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8826,
											"end": 8838,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8826,
											"end": 8838,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8757,
											"end": 8849,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 8757,
											"end": 8849,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8858,
											"end": 8888,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8896,
											"end": 8898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 8896,
											"end": 8898,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8891,
											"end": 8893,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8891,
											"end": 8898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 8891,
											"end": 8898,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8891,
											"end": 8898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8891,
											"end": 8898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 8891,
											"end": 8898,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8891,
											"end": 8898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 8891,
											"end": 8898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8858,
											"end": 8898,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8858,
											"end": 8898,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8908,
											"end": 8924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8964,
											"end": 8973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 8964,
											"end": 8973,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8953,
											"end": 8960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 8953,
											"end": 8960,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8928,
											"end": 8950,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8928,
											"end": 8960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 8928,
											"end": 8960,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8928,
											"end": 8960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8928,
											"end": 8960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 8928,
											"end": 8960,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8928,
											"end": 8960,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "124"
										},
										{
											"begin": 8928,
											"end": 8960,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8927,
											"end": 8973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 8927,
											"end": 8973,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8927,
											"end": 8973,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8927,
											"end": 8973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 8927,
											"end": 8973,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8927,
											"end": 8973,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "126"
										},
										{
											"begin": 8927,
											"end": 8973,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8908,
											"end": 8973,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9090,
											"end": 9112,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9130,
											"end": 9153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 9090,
											"end": 9112,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9152,
											"end": 9153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9130,
											"end": 9153,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 9130,
											"end": 9153,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9130,
											"end": 9153,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 9130,
											"end": 9153,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9123,
											"end": 9153,
											"modifierDepth": 1,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 9123,
											"end": 9153,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9123,
											"end": 9153,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9123,
											"end": 9153,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9123,
											"end": 9153,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9123,
											"end": 9153,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9123,
											"end": 9153,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1269,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1268,
											"end": 1269,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 9160,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8402,
											"end": 9160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2038,
											"end": 2053,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2047,
											"end": 2052,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2046,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2038,
											"end": 2053,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2038,
											"end": 2053,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 2038,
											"end": 2053,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 2060,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 2060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9210,
											"end": 9814,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 9210,
											"end": 9814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9375,
											"end": 9376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9361,
											"end": 9372,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9361,
											"end": 9376,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9353,
											"end": 9395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 9353,
											"end": 9395,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9353,
											"end": 9395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9353,
											"end": 9395,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9353,
											"end": 9395,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9353,
											"end": 9395,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9353,
											"end": 9395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9353,
											"end": 9395,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9353,
											"end": 9395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 3936,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3972,
											"end": 3974,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 3975,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53656E6420536F6D65204D656D65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3991,
											"end": 4009,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3991,
											"end": 4009,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3991,
											"end": 4009,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4028,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9353,
											"end": 9395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 3731,
											"end": 4069,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9353,
											"end": 9395,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 9353,
											"end": 9395,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9405,
											"end": 9423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9426,
											"end": 9451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 9439,
											"end": 9450,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9426,
											"end": 9438,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 9426,
											"end": 9451,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9426,
											"end": 9451,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 9426,
											"end": 9451,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9405,
											"end": 9451,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9405,
											"end": 9451,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9483,
											"end": 9491,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9469,
											"end": 9479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9469,
											"end": 9491,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9469,
											"end": 9491,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9461,
											"end": 9509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 9461,
											"end": 9509,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9461,
											"end": 9509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9461,
											"end": 9509,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9461,
											"end": 9509,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9461,
											"end": 9509,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4278,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9461,
											"end": 9509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9461,
											"end": 9509,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9461,
											"end": 9509,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4258,
											"end": 4279,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4315,
											"end": 4317,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 4295,
											"end": 4313,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4295,
											"end": 4313,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4313,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4288,
											"end": 4318,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A6CADCC8409ADEE4CA408AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4327,
											"end": 4370,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4405,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4387,
											"end": 4405,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9461,
											"end": 9509,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 4074,
											"end": 4411,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9461,
											"end": 9509,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 9461,
											"end": 9509,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9524,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 9520,
											"end": 9524,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9520,
											"end": 9560,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9520,
											"end": 9560,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4608,
											"end": 4640,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 4640,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4608,
											"end": 4640,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9520,
											"end": 9560,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4641,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4684,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4684,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4684,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9520,
											"end": 9524,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9524,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9524,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9524,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9533,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 9520,
											"end": 9533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9520,
											"end": 9560,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "147"
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 9520,
											"end": 9560,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 9520,
											"end": 9560,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9570,
											"end": 9600,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9600,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 9601,
											"end": 9622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 9612,
											"end": 9622,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9601,
											"end": 9609,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9601,
											"end": 9622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 9601,
											"end": 9622,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9601,
											"end": 9622,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 9601,
											"end": 9622,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9570,
											"end": 9623,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9570,
											"end": 9623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9570,
											"end": 9623,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9570,
											"end": 9623,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9672,
											"end": 9697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 9685,
											"end": 9696,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9672,
											"end": 9684,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 9672,
											"end": 9697,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9672,
											"end": 9697,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 9672,
											"end": 9697,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 9634,
											"end": 9668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9643,
											"end": 9667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 9661,
											"end": 9667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 9643,
											"end": 9658,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 9643,
											"end": 9667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 9643,
											"end": 9667,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9643,
											"end": 9667,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 9643,
											"end": 9667,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9668,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9668,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9634,
											"end": 9668,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9668,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9668,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9668,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9634,
											"end": 9668,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9634,
											"end": 9668,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9668,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9634,
											"end": 9697,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9697,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9697,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 9634,
											"end": 9697,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 9634,
											"end": 9697,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9697,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 9634,
											"end": 9697,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9697,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9697,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9697,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9697,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9697,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9697,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9634,
											"end": 9697,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9714,
											"end": 9725,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9708,
											"end": 9710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 9708,
											"end": 9710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9708,
											"end": 9725,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9708,
											"end": 9725,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9708,
											"end": 9725,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9708,
											"end": 9725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 9708,
											"end": 9725,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9708,
											"end": 9725,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9708,
											"end": 9725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 9708,
											"end": 9725,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9708,
											"end": 9725,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 9708,
											"end": 9725,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9708,
											"end": 9725,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9708,
											"end": 9725,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9708,
											"end": 9725,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9746,
											"end": 9748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 9746,
											"end": 9748,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9741,
											"end": 9743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 9741,
											"end": 9743,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9741,
											"end": 9748,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 9741,
											"end": 9748,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9746,
											"end": 9748,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9741,
											"end": 9748,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 9741,
											"end": 9748,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9741,
											"end": 9748,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 9741,
											"end": 9748,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9735,
											"end": 9737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 9735,
											"end": 9749,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9765,
											"end": 9807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9765,
											"end": 9807,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9765,
											"end": 9807,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5192,
											"end": 5210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5192,
											"end": 5210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9765,
											"end": 9807,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9765,
											"end": 9807,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9765,
											"end": 9807,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9765,
											"end": 9807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1CBC5AB135991BD2B6A4B034A04AA2AA086DAC1371CB9B16B8B5E2ED6B036BED"
										},
										{
											"begin": 9765,
											"end": 9807,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5142,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9765,
											"end": 9807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9765,
											"end": 9807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9765,
											"end": 9807,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9765,
											"end": 9807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9765,
											"end": 9807,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9765,
											"end": 9807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9765,
											"end": 9807,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 9343,
											"end": 9814,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9210,
											"end": 9814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9210,
											"end": 9814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9210,
											"end": 9814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9210,
											"end": 9814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1314,
											"end": 1379,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1314,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1372,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1362,
											"end": 1370,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 1362,
											"end": 1372,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1362,
											"end": 1372,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1362,
											"end": 1372,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1314,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10484,
											"end": 10485,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10471,
											"end": 10481,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10471,
											"end": 10485,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10463,
											"end": 10503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 10463,
											"end": 10503,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10463,
											"end": 10503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10463,
											"end": 10503,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10463,
											"end": 10503,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10463,
											"end": 10503,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5432,
											"end": 5434,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10463,
											"end": 10503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10463,
											"end": 10503,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10463,
											"end": 10503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5414,
											"end": 5435,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5473,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5474,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A6CADCC840A6DEDACA408AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5490,
											"end": 5508,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5490,
											"end": 5508,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5490,
											"end": 5508,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5483,
											"end": 5526,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5543,
											"end": 5561,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5543,
											"end": 5561,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10463,
											"end": 10503,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 5230,
											"end": 5567,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10463,
											"end": 10503,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 10463,
											"end": 10503,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10533,
											"end": 10556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 10545,
											"end": 10555,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10533,
											"end": 10544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 10533,
											"end": 10556,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10533,
											"end": 10556,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 10533,
											"end": 10556,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10605,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10601,
											"end": 10605,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10601,
											"end": 10629,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10601,
											"end": 10629,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1501,
											"end": 1533,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1533,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1533,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10601,
											"end": 10629,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1534,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10513,
											"end": 10556,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10513,
											"end": 10556,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10601,
											"end": 10605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10605,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10605,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 10601,
											"end": 10615,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10601,
											"end": 10629,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 10601,
											"end": 10629,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "177"
										},
										{
											"begin": 10601,
											"end": 10629,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10588,
											"end": 10597,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10588,
											"end": 10629,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10588,
											"end": 10629,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10567,
											"end": 10681,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 10567,
											"end": 10681,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10567,
											"end": 10681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10567,
											"end": 10681,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10567,
											"end": 10681,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10567,
											"end": 10681,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5963,
											"end": 5965,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10567,
											"end": 10681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10567,
											"end": 10681,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10567,
											"end": 10681,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5945,
											"end": 5966,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6002,
											"end": 6004,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 5982,
											"end": 6000,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5982,
											"end": 6000,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5982,
											"end": 6000,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5975,
											"end": 6005,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6069,
											"name": "PUSH",
											"source": 9,
											"value": "596F7520646F6E2774206861766520656E6F756768206D656D65000000000000"
										},
										{
											"begin": 6021,
											"end": 6039,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6021,
											"end": 6039,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6021,
											"end": 6039,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6014,
											"end": 6070,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6087,
											"end": 6105,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6087,
											"end": 6105,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10567,
											"end": 10681,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 5761,
											"end": 6111,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10567,
											"end": 10681,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 10567,
											"end": 10681,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10691,
											"end": 10695,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10691,
											"end": 10748,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10691,
											"end": 10748,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6374,
											"end": 6389,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6374,
											"end": 6389,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6374,
											"end": 6389,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10691,
											"end": 10748,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6356,
											"end": 6390,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10731,
											"end": 10735,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6399,
											"end": 6442,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6458,
											"end": 6476,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6458,
											"end": 6476,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6458,
											"end": 6476,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10691,
											"end": 10695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10695,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 10691,
											"end": 10708,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6291,
											"end": 6309,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6291,
											"end": 6309,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10691,
											"end": 10748,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 10691,
											"end": 10748,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "186"
										},
										{
											"begin": 10691,
											"end": 10748,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10800,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10758,
											"end": 10788,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10788,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10788,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10789,
											"end": 10799,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10789,
											"end": 10799,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10758,
											"end": 10800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10789,
											"end": 10799,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10788,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10758,
											"end": 10800,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "188"
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10800,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10946,
											"end": 10956,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10940,
											"end": 10942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 10940,
											"end": 10942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10940,
											"end": 10956,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10940,
											"end": 10956,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10940,
											"end": 10956,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10940,
											"end": 10956,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 10940,
											"end": 10956,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10940,
											"end": 10956,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10940,
											"end": 10956,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 10940,
											"end": 10956,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10940,
											"end": 10956,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 10940,
											"end": 10956,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10940,
											"end": 10956,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10940,
											"end": 10956,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10940,
											"end": 10956,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10977,
											"end": 10979,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 10977,
											"end": 10979,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10972,
											"end": 10974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 10972,
											"end": 10974,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10972,
											"end": 10979,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 10972,
											"end": 10979,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10977,
											"end": 10979,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10972,
											"end": 10979,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 10972,
											"end": 10979,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10972,
											"end": 10979,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 10972,
											"end": 10979,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10966,
											"end": 10968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 10966,
											"end": 10980,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10996,
											"end": 11037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10996,
											"end": 11037,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10996,
											"end": 11037,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5192,
											"end": 5210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5192,
											"end": 5210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10996,
											"end": 11037,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10996,
											"end": 11037,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10996,
											"end": 11037,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10996,
											"end": 11037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "ED7A144FAD14804D5C249145E3E0E2B63A9EB455B76AEE5BC92D711E9BBA3E4A"
										},
										{
											"begin": 10996,
											"end": 11037,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5142,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10996,
											"end": 11037,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 10996,
											"end": 11037,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10996,
											"end": 11037,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10996,
											"end": 11037,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10996,
											"end": 11037,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10996,
											"end": 11037,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10996,
											"end": 11037,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10996,
											"end": 11037,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10996,
											"end": 11037,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 10453,
											"end": 11044,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 11044,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10356,
											"end": 11044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7145,
											"end": 7834,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 7145,
											"end": 7834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7255,
											"end": 7262,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7286,
											"end": 7288,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7292,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7278,
											"end": 7317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 7278,
											"end": 7317,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7278,
											"end": 7317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7278,
											"end": 7317,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7278,
											"end": 7317,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7278,
											"end": 7317,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7278,
											"end": 7317,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7278,
											"end": 7317,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7278,
											"end": 7317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 7278,
											"end": 7317,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7278,
											"end": 7317,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 7278,
											"end": 7317,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7278,
											"end": 7317,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 7278,
											"end": 7317,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7327,
											"end": 7337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7351,
											"end": 7361,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7379,
											"end": 7381,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7379,
											"end": 7381,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7385,
											"end": 7386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7379,
											"end": 7386,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 7375,
											"end": 7495,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7416,
											"end": 7427,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7412,
											"end": 7413,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7407,
											"end": 7409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7407,
											"end": 7409,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7413,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 7407,
											"end": 7413,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7413,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7413,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 7407,
											"end": 7413,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7413,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 7407,
											"end": 7413,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 7407,
											"end": 7427,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7427,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 7407,
											"end": 7427,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7407,
											"end": 7427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 7407,
											"end": 7427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7402,
											"end": 7427,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7402,
											"end": 7427,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 7375,
											"end": 7495,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7495,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 7375,
											"end": 7495,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7473,
											"end": 7484,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7468,
											"end": 7470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7468,
											"end": 7470,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7463,
											"end": 7465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7463,
											"end": 7465,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7463,
											"end": 7470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 7463,
											"end": 7470,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7463,
											"end": 7470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7463,
											"end": 7470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 7463,
											"end": 7470,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7463,
											"end": 7470,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 7463,
											"end": 7470,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7463,
											"end": 7484,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 7463,
											"end": 7484,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7463,
											"end": 7484,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7463,
											"end": 7484,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 7463,
											"end": 7484,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7463,
											"end": 7484,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 7463,
											"end": 7484,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7458,
											"end": 7484,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7458,
											"end": 7484,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7375,
											"end": 7495,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 7375,
											"end": 7495,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7508,
											"end": 7510,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7514,
											"end": 7515,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7508,
											"end": 7515,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7504,
											"end": 7596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 7504,
											"end": 7596,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7541,
											"end": 7542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7536,
											"end": 7538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7536,
											"end": 7538,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 7536,
											"end": 7542,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7542,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 7536,
											"end": 7542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 7536,
											"end": 7542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7531,
											"end": 7542,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7531,
											"end": 7542,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7504,
											"end": 7596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 7504,
											"end": 7596,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7504,
											"end": 7596,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 7504,
											"end": 7596,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7583,
											"end": 7585,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7580,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7578,
											"end": 7580,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 7578,
											"end": 7585,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 7578,
											"end": 7585,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7578,
											"end": 7585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 7578,
											"end": 7585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7573,
											"end": 7585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7573,
											"end": 7585,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7504,
											"end": 7596,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 7504,
											"end": 7596,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7605,
											"end": 7634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7642,
											"end": 7644,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 7642,
											"end": 7644,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7637,
											"end": 7639,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7637,
											"end": 7644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 7637,
											"end": 7644,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7637,
											"end": 7644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7637,
											"end": 7644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 7637,
											"end": 7644,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7637,
											"end": 7644,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 7637,
											"end": 7644,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7605,
											"end": 7644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7605,
											"end": 7644,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7654,
											"end": 7669,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 7708,
											"end": 7717,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7697,
											"end": 7704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 7697,
											"end": 7704,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7673,
											"end": 7694,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7673,
											"end": 7704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 7673,
											"end": 7704,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7673,
											"end": 7704,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7673,
											"end": 7704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 7673,
											"end": 7704,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7673,
											"end": 7704,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 7673,
											"end": 7704,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 7672,
											"end": 7717,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7717,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 7672,
											"end": 7717,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7672,
											"end": 7717,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 7672,
											"end": 7717,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7654,
											"end": 7717,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7728,
											"end": 7754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7757,
											"end": 7788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 7654,
											"end": 7717,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7778,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 7757,
											"end": 7788,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7757,
											"end": 7788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 7757,
											"end": 7788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7728,
											"end": 7788,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7805,
											"end": 7827,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 7728,
											"end": 7788,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7826,
											"end": 7827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7805,
											"end": 7827,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 7805,
											"end": 7827,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1308,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1247,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 1293,
											"end": 1299,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1293,
											"end": 1301,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5444,
											"end": 5451,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5444,
											"end": 5451,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5444,
											"end": 5451,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5505,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5444,
											"end": 5451,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5506,
											"end": 5530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 5524,
											"end": 5530,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 5506,
											"end": 5521,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5506,
											"end": 5530,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 5506,
											"end": 5530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5506,
											"end": 5530,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 5506,
											"end": 5530,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5531,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5531,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5531,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5497,
											"end": 5531,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5531,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5531,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5531,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5531,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5497,
											"end": 5531,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5531,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5497,
											"end": 5531,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5531,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5535,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5493,
											"end": 6145,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5493,
											"end": 6145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 5493,
											"end": 6145,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5590,
											"end": 5600,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5579,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5582,
											"end": 5589,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5582,
											"end": 5601,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5579,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5579,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5641,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5648,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5623,
											"end": 5632,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5623,
											"end": 5648,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5615,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 5615,
											"end": 5671,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5615,
											"end": 5671,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5615,
											"end": 5671,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5615,
											"end": 5671,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5615,
											"end": 5671,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6698,
											"end": 6700,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5615,
											"end": 5671,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5615,
											"end": 5671,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5615,
											"end": 5671,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6680,
											"end": 6701,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6737,
											"end": 6739,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 6717,
											"end": 6735,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6717,
											"end": 6735,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6717,
											"end": 6735,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6710,
											"end": 6740,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92DCECC2D8D2C840E0DEDED840D2DCC8CAF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6756,
											"end": 6774,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6749,
											"end": 6797,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6814,
											"end": 6832,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6814,
											"end": 6832,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 5671,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 6496,
											"end": 6838,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5615,
											"end": 5671,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 5615,
											"end": 5671,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5686,
											"end": 5708,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5711,
											"end": 5717,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5718,
											"end": 5727,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5728,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5728,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5728,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5728,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5711,
											"end": 5728,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5711,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 5711,
											"end": 5728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5728,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5711,
											"end": 5728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5728,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5728,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5728,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5711,
											"end": 5728,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5728,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5711,
											"end": 5728,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5686,
											"end": 5728,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5686,
											"end": 5728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5759,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5793,
											"end": 5802,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 5793,
											"end": 5802,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5780,
											"end": 5789,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 5780,
											"end": 5789,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5765,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5777,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5763,
											"end": 5777,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5777,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5763,
											"end": 5789,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5789,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5789,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 5763,
											"end": 5789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5763,
											"end": 5789,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5763,
											"end": 5789,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5762,
											"end": 5802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5762,
											"end": 5802,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5762,
											"end": 5802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5762,
											"end": 5802,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 5762,
											"end": 5802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5762,
											"end": 5802,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5762,
											"end": 5802,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5840,
											"end": 5847,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5840,
											"end": 5847,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5840,
											"end": 5847,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5840,
											"end": 5847,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5802,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5742,
											"end": 5802,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5817,
											"end": 5837,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5882,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5900,
											"end": 5906,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 5882,
											"end": 5897,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 5906,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 5882,
											"end": 5906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5882,
											"end": 5906,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5882,
											"end": 5906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5861,
											"end": 5906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5943,
											"end": 5954,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5957,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 5972,
											"end": 5978,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 5957,
											"end": 5969,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 5978,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 5957,
											"end": 5978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5957,
											"end": 5978,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 5957,
											"end": 5978,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 5978,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5943,
											"end": 5978,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5921,
											"end": 6135,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5921,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6013,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5996,
											"end": 5999,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5996,
											"end": 6013,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5921,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 5921,
											"end": 6135,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6111,
											"end": 6120,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 6111,
											"end": 6120,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6107,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6107,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6107,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6107,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6102,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6094,
											"end": 6107,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6107,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6107,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6094,
											"end": 6107,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6107,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6094,
											"end": 6107,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 6082,
											"end": 6107,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6091,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 6082,
											"end": 6107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6107,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 6082,
											"end": 6107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 6081,
											"end": 6120,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 6081,
											"end": 6120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6081,
											"end": 6120,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 6081,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 6069,
											"end": 6120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6120,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 6069,
											"end": 6120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6120,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 6069,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6069,
											"end": 6120,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6031,
											"end": 6036,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 6031,
											"end": 6036,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 6031,
											"end": 6036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6036,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 6031,
											"end": 6036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6036,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6031,
											"end": 6036,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5921,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5921,
											"end": 6135,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5921,
											"end": 6135,
											"name": "tag",
											"source": 7,
											"value": "240"
										},
										{
											"begin": 5921,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5921,
											"end": 6135,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 6145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 6145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 6145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 6145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 6145,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5493,
											"end": 6145,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 5493,
											"end": 6145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6161,
											"end": 6169,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5380,
											"end": 6176,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5380,
											"end": 6176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9820,
											"end": 10350,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 9820,
											"end": 10350,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9915,
											"end": 9916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9901,
											"end": 9912,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9901,
											"end": 9916,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9893,
											"end": 9935,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 9893,
											"end": 9935,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9893,
											"end": 9935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9893,
											"end": 9935,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9893,
											"end": 9935,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9893,
											"end": 9935,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9893,
											"end": 9935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9893,
											"end": 9935,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9893,
											"end": 9935,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3915,
											"end": 3936,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3972,
											"end": 3974,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 3975,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53656E6420536F6D65204D656D65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3991,
											"end": 4009,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3991,
											"end": 4009,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3991,
											"end": 4009,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3984,
											"end": 4028,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4045,
											"end": 4063,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9935,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 3731,
											"end": 4069,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9893,
											"end": 9935,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 9893,
											"end": 9935,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9945,
											"end": 9963,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9966,
											"end": 9991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 9979,
											"end": 9990,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9966,
											"end": 9978,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 9966,
											"end": 9991,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9966,
											"end": 9991,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 9966,
											"end": 9991,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9945,
											"end": 9991,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9945,
											"end": 9991,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10023,
											"end": 10032,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 10009,
											"end": 10019,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10009,
											"end": 10032,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10009,
											"end": 10032,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10001,
											"end": 10050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 10001,
											"end": 10050,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10001,
											"end": 10050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10001,
											"end": 10050,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10001,
											"end": 10050,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10001,
											"end": 10050,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4278,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10001,
											"end": 10050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10001,
											"end": 10050,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10001,
											"end": 10050,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4258,
											"end": 4279,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4315,
											"end": 4317,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 4295,
											"end": 4313,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4295,
											"end": 4313,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4295,
											"end": 4313,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4288,
											"end": 4318,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A6CADCC8409ADEE4CA408AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4334,
											"end": 4352,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4327,
											"end": 4370,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4387,
											"end": 4405,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4387,
											"end": 4405,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10001,
											"end": 10050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 4074,
											"end": 4411,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10001,
											"end": 10050,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 10001,
											"end": 10050,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10061,
											"end": 10065,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10099,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10099,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10075,
											"end": 10085,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10061,
											"end": 10099,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4641,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4684,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4684,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4684,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10061,
											"end": 10065,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10065,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10065,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10065,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 10061,
											"end": 10074,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10099,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 10061,
											"end": 10099,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 10061,
											"end": 10099,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10117,
											"end": 10127,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 10138,
											"end": 10160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 10150,
											"end": 10160,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10138,
											"end": 10147,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 10138,
											"end": 10160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 10138,
											"end": 10160,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10138,
											"end": 10160,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 10138,
											"end": 10160,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10109,
											"end": 10161,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10109,
											"end": 10161,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10109,
											"end": 10161,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10161,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10210,
											"end": 10235,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 10223,
											"end": 10234,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10210,
											"end": 10222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 10210,
											"end": 10235,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10210,
											"end": 10235,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 10210,
											"end": 10235,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 10172,
											"end": 10206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10181,
											"end": 10205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 10199,
											"end": 10205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "15180"
										},
										{
											"begin": 10181,
											"end": 10196,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 10181,
											"end": 10205,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 10181,
											"end": 10205,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10181,
											"end": 10205,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 10181,
											"end": 10205,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10206,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10206,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10172,
											"end": 10206,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10206,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10206,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10206,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10172,
											"end": 10206,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10172,
											"end": 10206,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10172,
											"end": 10235,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10235,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10235,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10235,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 10172,
											"end": 10235,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10235,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10235,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 10172,
											"end": 10235,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10235,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 10172,
											"end": 10235,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10235,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10235,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10235,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10235,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10235,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10235,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10172,
											"end": 10235,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10252,
											"end": 10263,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10246,
											"end": 10248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 10246,
											"end": 10248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10246,
											"end": 10263,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10246,
											"end": 10263,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10246,
											"end": 10263,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10246,
											"end": 10263,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 10246,
											"end": 10263,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10246,
											"end": 10263,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10246,
											"end": 10263,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 10246,
											"end": 10263,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10246,
											"end": 10263,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 10246,
											"end": 10263,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10246,
											"end": 10263,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10246,
											"end": 10263,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10246,
											"end": 10263,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10284,
											"end": 10286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 10284,
											"end": 10286,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10279,
											"end": 10281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 10279,
											"end": 10281,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10279,
											"end": 10286,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 10279,
											"end": 10286,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10284,
											"end": 10286,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10279,
											"end": 10286,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 10279,
											"end": 10286,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10279,
											"end": 10286,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 10279,
											"end": 10286,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10273,
											"end": 10275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 10273,
											"end": 10287,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10303,
											"end": 10343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10303,
											"end": 10343,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10303,
											"end": 10343,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5192,
											"end": 5210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5192,
											"end": 5210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10307,
											"end": 10317,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 10307,
											"end": 10317,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10303,
											"end": 10343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1CBC5AB135991BD2B6A4B034A04AA2AA086DAC1371CB9B16B8B5E2ED6B036BED"
										},
										{
											"begin": 10303,
											"end": 10343,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5142,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10303,
											"end": 10343,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 10303,
											"end": 10343,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10303,
											"end": 10343,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10303,
											"end": 10343,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10303,
											"end": 10343,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10303,
											"end": 10343,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10303,
											"end": 10343,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10303,
											"end": 10343,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10303,
											"end": 10343,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 9883,
											"end": 10350,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9820,
											"end": 10350,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9820,
											"end": 10350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1563,
											"end": 1907,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 1563,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1657,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1646,
											"end": 1661,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1680,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1638,
											"end": 1680,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1680,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1638,
											"end": 1680,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1680,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7317,
											"end": 7319,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1638,
											"end": 1680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1638,
											"end": 1680,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7299,
											"end": 7320,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7356,
											"end": 7358,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7354,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7329,
											"end": 7359,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53656E64206D6F7265204D454D45"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7375,
											"end": 7393,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7375,
											"end": 7393,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7375,
											"end": 7393,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7368,
											"end": 7412,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7429,
											"end": 7447,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7429,
											"end": 7447,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1680,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 7115,
											"end": 7453,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1680,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1638,
											"end": 1680,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1710,
											"end": 1711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1707,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1698,
											"end": 1711,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 1690,
											"end": 1729,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1690,
											"end": 1729,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1690,
											"end": 1729,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1729,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7660,
											"end": 7662,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1690,
											"end": 1729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1690,
											"end": 1729,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1729,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7642,
											"end": 7663,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7699,
											"end": 7701,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 7679,
											"end": 7697,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7679,
											"end": 7697,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7679,
											"end": 7697,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7672,
											"end": 7702,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A6CADCC840DADEE4CA408AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7718,
											"end": 7736,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7718,
											"end": 7736,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7718,
											"end": 7736,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7711,
											"end": 7754,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7771,
											"end": 7789,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7771,
											"end": 7789,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1690,
											"end": 1729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 7458,
											"end": 7795,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1690,
											"end": 1729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 1690,
											"end": 1729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1813,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1789,
											"end": 1798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1789,
											"end": 1798,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 1786,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 1798,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 1777,
											"end": 1798,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 1798,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 1798,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 1777,
											"end": 1798,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 1798,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 1777,
											"end": 1798,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1776,
											"end": 1813,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 1776,
											"end": 1813,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1776,
											"end": 1813,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1776,
											"end": 1813,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 1776,
											"end": 1813,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1776,
											"end": 1813,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 1776,
											"end": 1813,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1772,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1813,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1813,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 1739,
											"end": 1860,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1739,
											"end": 1860,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1739,
											"end": 1860,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1860,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8002,
											"end": 8004,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1739,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1739,
											"end": 1860,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1860,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7984,
											"end": 8005,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8041,
											"end": 8043,
											"name": "PUSH",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 8021,
											"end": 8039,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8021,
											"end": 8039,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8021,
											"end": 8039,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14DD1858DADA5B99C814985D19481B9BDD081B595D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8060,
											"end": 8078,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8060,
											"end": 8078,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8060,
											"end": 8078,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8053,
											"end": 8104,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1739,
											"end": 1860,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 7800,
											"end": 8145,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1739,
											"end": 1860,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 1739,
											"end": 1860,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1870,
											"end": 1900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 1877,
											"end": 1888,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1890,
											"end": 1899,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 1870,
											"end": 1876,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 1870,
											"end": 1900,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11050,
											"end": 11688,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 11050,
											"end": 11688,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11136,
											"end": 11137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11123,
											"end": 11133,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11123,
											"end": 11137,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11115,
											"end": 11155,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 11115,
											"end": 11155,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11115,
											"end": 11155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11115,
											"end": 11155,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11115,
											"end": 11155,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11115,
											"end": 11155,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5432,
											"end": 5434,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11115,
											"end": 11155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11115,
											"end": 11155,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11115,
											"end": 11155,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5414,
											"end": 5435,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5471,
											"end": 5473,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5451,
											"end": 5469,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5444,
											"end": 5474,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A6CADCC840A6DEDACA408AA89"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5490,
											"end": 5508,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5490,
											"end": 5508,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5490,
											"end": 5508,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5483,
											"end": 5526,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5543,
											"end": 5561,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5543,
											"end": 5561,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11115,
											"end": 11155,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 5230,
											"end": 5567,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11115,
											"end": 11155,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 11115,
											"end": 11155,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11165,
											"end": 11182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11185,
											"end": 11208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 11197,
											"end": 11207,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11185,
											"end": 11196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 11185,
											"end": 11208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11185,
											"end": 11208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 11185,
											"end": 11208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11257,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11253,
											"end": 11257,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11253,
											"end": 11279,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11253,
											"end": 11279,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11268,
											"end": 11278,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11253,
											"end": 11279,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1534,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11165,
											"end": 11208,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11165,
											"end": 11208,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11253,
											"end": 11257,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11257,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 11253,
											"end": 11267,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11253,
											"end": 11279,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 11253,
											"end": 11279,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 11253,
											"end": 11279,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11240,
											"end": 11249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11240,
											"end": 11279,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11240,
											"end": 11279,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11219,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 11219,
											"end": 11331,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11219,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11219,
											"end": 11331,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11219,
											"end": 11331,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11219,
											"end": 11331,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5963,
											"end": 5965,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11219,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11219,
											"end": 11331,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11219,
											"end": 11331,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5945,
											"end": 5966,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6002,
											"end": 6004,
											"name": "PUSH",
											"source": 9,
											"value": "1A"
										},
										{
											"begin": 5982,
											"end": 6000,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5982,
											"end": 6000,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5982,
											"end": 6000,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5975,
											"end": 6005,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6041,
											"end": 6069,
											"name": "PUSH",
											"source": 9,
											"value": "596F7520646F6E2774206861766520656E6F756768206D656D65000000000000"
										},
										{
											"begin": 6021,
											"end": 6039,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6021,
											"end": 6039,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6021,
											"end": 6039,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6014,
											"end": 6070,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6087,
											"end": 6105,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6087,
											"end": 6105,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11219,
											"end": 11331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 5761,
											"end": 6111,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11219,
											"end": 11331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 11219,
											"end": 11331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 11341,
											"end": 11345,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11341,
											"end": 11396,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11341,
											"end": 11396,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11359,
											"end": 11369,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11341,
											"end": 11396,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6356,
											"end": 6390,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11379,
											"end": 11383,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6399,
											"end": 6442,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6458,
											"end": 6476,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6458,
											"end": 6476,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6458,
											"end": 6476,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11341,
											"end": 11345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11345,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11345,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11345,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 11341,
											"end": 11358,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6291,
											"end": 6309,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6291,
											"end": 6309,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11341,
											"end": 11396,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 11341,
											"end": 11396,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 11341,
											"end": 11396,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11406,
											"end": 11446,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 11414,
											"end": 11424,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 11414,
											"end": 11424,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11435,
											"end": 11445,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11435,
											"end": 11445,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11406,
											"end": 11446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11435,
											"end": 11445,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11414,
											"end": 11424,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11406,
											"end": 11446,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11446,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11592,
											"end": 11602,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11586,
											"end": 11588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 11586,
											"end": 11588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11586,
											"end": 11602,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11586,
											"end": 11602,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11586,
											"end": 11602,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11586,
											"end": 11602,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 11586,
											"end": 11602,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11586,
											"end": 11602,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11586,
											"end": 11602,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 11586,
											"end": 11602,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11586,
											"end": 11602,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 11586,
											"end": 11602,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11586,
											"end": 11602,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11586,
											"end": 11602,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11586,
											"end": 11602,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11623,
											"end": 11625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 11623,
											"end": 11625,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11618,
											"end": 11620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 11618,
											"end": 11620,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 11618,
											"end": 11625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 11618,
											"end": 11625,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11623,
											"end": 11625,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11618,
											"end": 11625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 11618,
											"end": 11625,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11618,
											"end": 11625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 11618,
											"end": 11625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11612,
											"end": 11614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 11612,
											"end": 11626,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 11642,
											"end": 11681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 11642,
											"end": 11681,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11642,
											"end": 11681,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5192,
											"end": 5210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5192,
											"end": 5210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11647,
											"end": 11657,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 11647,
											"end": 11657,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11642,
											"end": 11681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "ED7A144FAD14804D5C249145E3E0E2B63A9EB455B76AEE5BC92D711E9BBA3E4A"
										},
										{
											"begin": 11642,
											"end": 11681,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5142,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11642,
											"end": 11681,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 4977,
											"end": 5225,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1539,
											"end": 1549,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1538,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1512,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1491,
											"end": 1512,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1550,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1524,
											"end": 1550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1557,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1449,
											"end": 1557,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8352,
											"end": 8354,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8334,
											"end": 8355,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8391,
											"end": 8393,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8364,
											"end": 8394,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8430,
											"end": 8464,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8410,
											"end": 8428,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8410,
											"end": 8428,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8410,
											"end": 8428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8403,
											"end": 8465,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8481,
											"end": 8499,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8481,
											"end": 8499,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8481,
											"end": 8499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8474,
											"end": 8510,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8527,
											"end": 8546,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8527,
											"end": 8546,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 8150,
											"end": 8552,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8759,
											"end": 8761,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8741,
											"end": 8762,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 8800,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 8778,
											"end": 8796,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8778,
											"end": 8796,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8778,
											"end": 8796,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8771,
											"end": 8801,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8817,
											"end": 8835,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8817,
											"end": 8835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8817,
											"end": 8835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8810,
											"end": 8856,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8873,
											"end": 8891,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8873,
											"end": 8891,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 8557,
											"end": 8897,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2628,
											"end": 3814,
											"name": "tag",
											"source": 7,
											"value": "133"
										},
										{
											"begin": 2628,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2704,
											"end": 2714,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2696,
											"end": 2715,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2696,
											"end": 2715,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2696,
											"end": 2715,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2696,
											"end": 2715,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2696,
											"end": 2703,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2696,
											"end": 2715,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2696,
											"end": 2715,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2696,
											"end": 2715,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2696,
											"end": 2715,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2696,
											"end": 2715,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2696,
											"end": 2722,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2722,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2688,
											"end": 2722,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9104,
											"end": 9106,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9086,
											"end": 9107,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9145,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 9123,
											"end": 9141,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9123,
											"end": 9141,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9123,
											"end": 9141,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9116,
											"end": 9146,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E646578206F7574206F6620626F756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9162,
											"end": 9180,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9162,
											"end": 9180,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9162,
											"end": 9180,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9155,
											"end": 9204,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9221,
											"end": 9239,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9221,
											"end": 9239,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 8902,
											"end": 9245,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 2680,
											"end": 2746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2779,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 2801,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2782,
											"end": 2801,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2782,
											"end": 2801,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2782,
											"end": 2789,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2782,
											"end": 2801,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2782,
											"end": 2801,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2782,
											"end": 2801,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2782,
											"end": 2801,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2782,
											"end": 2801,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2782,
											"end": 2808,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2782,
											"end": 2808,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2802,
											"end": 2807,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2802,
											"end": 2807,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2782,
											"end": 2808,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2782,
											"end": 2808,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2782,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 2782,
											"end": 2808,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2782,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 2782,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 2782,
											"end": 2808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2782,
											"end": 2808,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 2782,
											"end": 2808,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2782,
											"end": 2808,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2782,
											"end": 2808,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 2808,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2782,
											"end": 2808,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2782,
											"end": 2808,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2782,
											"end": 2808,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2782,
											"end": 2808,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2782,
											"end": 2808,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2782,
											"end": 2808,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2782,
											"end": 2808,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2757,
											"end": 2808,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2819,
											"end": 2830,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 2848,
											"end": 2853,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2833,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 2833,
											"end": 2854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2833,
											"end": 2854,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 2833,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 2903,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2889,
											"end": 2903,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2950,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2937,
											"end": 2950,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2950,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2950,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2819,
											"end": 2854,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2819,
											"end": 2854,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2889,
											"end": 2903,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2864,
											"end": 2886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2864,
											"end": 2886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 2937,
											"end": 2956,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2819,
											"end": 2854,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2819,
											"end": 2854,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2937,
											"end": 2956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 2956,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 2937,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2978,
											"end": 2980,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2978,
											"end": 2980,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2966,
											"end": 2975,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2966,
											"end": 2980,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3034,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3030,
											"end": 3034,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3053,
											"end": 3057,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1483,
											"end": 1534,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2913,
											"end": 2956,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2913,
											"end": 2956,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3030,
											"end": 3034,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3044,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 3030,
											"end": 3044,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "STATICCALL",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 3030,
											"end": 3059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 3030,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3059,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3012,
											"end": 3059,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2991,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 2991,
											"end": 3160,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2991,
											"end": 3160,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2991,
											"end": 3160,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2991,
											"end": 3160,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2991,
											"end": 3160,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9452,
											"end": 9454,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 3160,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2991,
											"end": 3160,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2991,
											"end": 3160,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9434,
											"end": 9455,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9491,
											"end": 9493,
											"name": "PUSH",
											"source": 9,
											"value": "4B"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9471,
											"end": 9489,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9464,
											"end": 9494,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9530,
											"end": 9564,
											"name": "PUSH",
											"source": 9,
											"value": "536F7272792043757272656E746C79207468697320636F6E747261637420646F"
										},
										{
											"begin": 9510,
											"end": 9528,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9510,
											"end": 9528,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9510,
											"end": 9528,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9503,
											"end": 9565,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9601,
											"end": 9635,
											"name": "PUSH",
											"source": 9,
											"value": "65736E27742068617665204D656D6520746F2072657475726E2C20436865636B"
										},
										{
											"begin": 9581,
											"end": 9599,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9581,
											"end": 9599,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9581,
											"end": 9599,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9574,
											"end": 9636,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "206261636B20536F6F6E21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9652,
											"end": 9671,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 9652,
											"end": 9671,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9652,
											"end": 9671,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9645,
											"end": 9687,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9704,
											"end": 9723,
											"name": "PUSH",
											"source": 9,
											"value": "A4"
										},
										{
											"begin": 9704,
											"end": 9723,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 9250,
											"end": 9729,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2991,
											"end": 3160,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 2991,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3229,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3204,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3229,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3191,
											"end": 3229,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3170,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 3170,
											"end": 3329,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3170,
											"end": 3329,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3170,
											"end": 3329,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3170,
											"end": 3329,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3170,
											"end": 3329,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9936,
											"end": 9938,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3170,
											"end": 3329,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3170,
											"end": 3329,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3170,
											"end": 3329,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9918,
											"end": 9939,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9975,
											"end": 9977,
											"name": "PUSH",
											"source": 9,
											"value": "4A"
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9955,
											"end": 9973,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9948,
											"end": 9978,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10014,
											"end": 10048,
											"name": "PUSH",
											"source": 9,
											"value": "536F7272792043757272656E746C79207468697320636F6E747261637420646F"
										},
										{
											"begin": 9994,
											"end": 10012,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9994,
											"end": 10012,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9994,
											"end": 10012,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9987,
											"end": 10049,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10085,
											"end": 10119,
											"name": "PUSH",
											"source": 9,
											"value": "65736E277420686176652045746820746F2072657475726E2C20436865636B20"
										},
										{
											"begin": 10065,
											"end": 10083,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10065,
											"end": 10083,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10065,
											"end": 10083,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10058,
											"end": 10120,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6261636B20536F6F6E21"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10136,
											"end": 10155,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 10136,
											"end": 10155,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10136,
											"end": 10155,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10129,
											"end": 10170,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10187,
											"end": 10206,
											"name": "PUSH",
											"source": 9,
											"value": "A4"
										},
										{
											"begin": 10187,
											"end": 10206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 9734,
											"end": 10212,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3170,
											"end": 3329,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 3170,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3343,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 3339,
											"end": 3343,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3353,
											"end": 3363,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4590,
											"end": 4641,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4657,
											"end": 4675,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4684,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4684,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4650,
											"end": 4684,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3339,
											"end": 3343,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3343,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3343,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3343,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3352,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 3339,
											"end": 3352,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4563,
											"end": 4581,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 3339,
											"end": 3380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 3339,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3398,
											"end": 3408,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3398,
											"end": 3408,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "PUSH",
											"source": 7,
											"value": "8FC"
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3432,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3432,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3419,
											"end": 3432,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3398,
											"end": 3408,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3433,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3470,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3450,
											"end": 3452,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3450,
											"end": 3452,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3450,
											"end": 3470,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3450,
											"end": 3470,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3449,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 3449,
											"end": 3499,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3498,
											"end": 3499,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3449,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 3449,
											"end": 3499,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3449,
											"end": 3499,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 3449,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3480,
											"end": 3494,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3477,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3475,
											"end": 3477,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 3475,
											"end": 3494,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3494,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 3475,
											"end": 3494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3494,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 3475,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 3446,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3444,
											"end": 3499,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3515,
											"end": 3517,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3515,
											"end": 3517,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 3515,
											"end": 3534,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 3514,
											"end": 3562,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3561,
											"end": 3562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3514,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 3514,
											"end": 3562,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3514,
											"end": 3562,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 3514,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3544,
											"end": 3557,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3541,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3539,
											"end": 3541,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 3539,
											"end": 3557,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3557,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 3539,
											"end": 3557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3539,
											"end": 3557,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 3539,
											"end": 3557,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3511,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3509,
											"end": 3562,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3577,
											"end": 3579,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3577,
											"end": 3579,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3584,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3577,
											"end": 3584,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3573,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 3573,
											"end": 3694,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3615,
											"end": 3616,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3600,
											"end": 3612,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3600,
											"end": 3616,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3573,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 3573,
											"end": 3694,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3573,
											"end": 3694,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 3573,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3681,
											"end": 3683,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 3681,
											"end": 3683,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3668,
											"end": 3677,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 3668,
											"end": 3677,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 3663,
											"end": 3665,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3663,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 3663,
											"end": 3677,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3663,
											"end": 3677,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3663,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 3663,
											"end": 3677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3663,
											"end": 3677,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 3663,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3662,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 3662,
											"end": 3683,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3662,
											"end": 3683,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3662,
											"end": 3683,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 3662,
											"end": 3683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3662,
											"end": 3683,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 3662,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3647,
											"end": 3659,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3647,
											"end": 3683,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 3573,
											"end": 3694,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 3573,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 3715,
											"end": 3720,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 3704,
											"end": 3721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3704,
											"end": 3721,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 3704,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 3732,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 3732,
											"end": 3742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3742,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 3732,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3757,
											"end": 3807,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3757,
											"end": 3807,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3757,
											"end": 3807,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5192,
											"end": 5210,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5192,
											"end": 5210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3765,
											"end": 3775,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3765,
											"end": 3775,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3757,
											"end": 3807,
											"name": "PUSH",
											"source": 7,
											"value": "BB564DF1F5D4EBB97B073ADCAB505C7796A37035AC5D14F51269660939C39CF4"
										},
										{
											"begin": 3757,
											"end": 3807,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5142,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3757,
											"end": 3807,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3757,
											"end": 3807,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3757,
											"end": 3807,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3757,
											"end": 3807,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3757,
											"end": 3807,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3757,
											"end": 3807,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3757,
											"end": 3807,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 3814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 3814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 3814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2670,
											"end": 3814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2628,
											"end": 3814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2628,
											"end": 3814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7840,
											"end": 8396,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 7840,
											"end": 8396,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7906,
											"end": 7913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7938,
											"end": 7939,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7933,
											"end": 7935,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7933,
											"end": 7935,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7933,
											"end": 7939,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7925,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 7925,
											"end": 7964,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7925,
											"end": 7964,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7925,
											"end": 7964,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7925,
											"end": 7964,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7925,
											"end": 7964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7925,
											"end": 7964,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7925,
											"end": 7964,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7925,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 7925,
											"end": 7964,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7925,
											"end": 7964,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 7925,
											"end": 7964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7925,
											"end": 7964,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 7925,
											"end": 7964,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7974,
											"end": 7984,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7998,
											"end": 8008,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8026,
											"end": 8028,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 8026,
											"end": 8028,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8032,
											"end": 8033,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8026,
											"end": 8033,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 8022,
											"end": 8142,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8063,
											"end": 8074,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8059,
											"end": 8060,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8054,
											"end": 8056,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 8054,
											"end": 8056,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8054,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 8054,
											"end": 8060,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8054,
											"end": 8060,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8054,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 8054,
											"end": 8060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8054,
											"end": 8060,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 8054,
											"end": 8060,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8054,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 8054,
											"end": 8074,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8054,
											"end": 8074,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8054,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 8054,
											"end": 8074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8054,
											"end": 8074,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 8054,
											"end": 8074,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8049,
											"end": 8074,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8049,
											"end": 8074,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8142,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 8022,
											"end": 8142,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8142,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 8022,
											"end": 8142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8120,
											"end": 8131,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8115,
											"end": 8117,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 8115,
											"end": 8117,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8112,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 8110,
											"end": 8112,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 8110,
											"end": 8117,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8117,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 8110,
											"end": 8117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8117,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 8110,
											"end": 8117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 8110,
											"end": 8131,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8131,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 8110,
											"end": 8131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8110,
											"end": 8131,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 8110,
											"end": 8131,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8105,
											"end": 8131,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8105,
											"end": 8131,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8022,
											"end": 8142,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 8022,
											"end": 8142,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8155,
											"end": 8157,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8161,
											"end": 8162,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8155,
											"end": 8162,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8151,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 8151,
											"end": 8243,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8188,
											"end": 8189,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8183,
											"end": 8185,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 8183,
											"end": 8185,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 8183,
											"end": 8189,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8189,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 8183,
											"end": 8189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8183,
											"end": 8189,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 8183,
											"end": 8189,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8178,
											"end": 8189,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8178,
											"end": 8189,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8151,
											"end": 8243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 8151,
											"end": 8243,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8151,
											"end": 8243,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 8151,
											"end": 8243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8230,
											"end": 8232,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8225,
											"end": 8227,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 8225,
											"end": 8227,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8225,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 8225,
											"end": 8232,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8225,
											"end": 8232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8225,
											"end": 8232,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 8225,
											"end": 8232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8225,
											"end": 8232,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 8225,
											"end": 8232,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8220,
											"end": 8232,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8220,
											"end": 8232,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8151,
											"end": 8243,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 8151,
											"end": 8243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8252,
											"end": 8281,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8289,
											"end": 8291,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 8289,
											"end": 8291,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8284,
											"end": 8286,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8284,
											"end": 8291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 8284,
											"end": 8291,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8284,
											"end": 8291,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8284,
											"end": 8291,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 8284,
											"end": 8291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8284,
											"end": 8291,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 8284,
											"end": 8291,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8252,
											"end": 8291,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8252,
											"end": 8291,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8301,
											"end": 8316,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8355,
											"end": 8364,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 8355,
											"end": 8364,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8344,
											"end": 8351,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 8344,
											"end": 8351,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8320,
											"end": 8341,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8320,
											"end": 8351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 8320,
											"end": 8351,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8320,
											"end": 8351,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8320,
											"end": 8351,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 8320,
											"end": 8351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8320,
											"end": 8351,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 8320,
											"end": 8351,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8319,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 8319,
											"end": 8364,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8319,
											"end": 8364,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8319,
											"end": 8364,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 8319,
											"end": 8364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8319,
											"end": 8364,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 8319,
											"end": 8364,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8301,
											"end": 8364,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 7840,
											"end": 8396,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7840,
											"end": 8396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10419,
											"end": 10421,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10401,
											"end": 10422,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10401,
											"end": 10422,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10401,
											"end": 10422,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10438,
											"end": 10456,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10438,
											"end": 10456,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10438,
											"end": 10456,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10431,
											"end": 10461,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10497,
											"end": 10531,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 10477,
											"end": 10495,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10477,
											"end": 10495,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10477,
											"end": 10495,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10470,
											"end": 10532,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10549,
											"end": 10567,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10549,
											"end": 10567,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10217,
											"end": 10573,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1501,
											"end": 1533,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1533,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1501,
											"end": 1533,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1483,
											"end": 1534,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1483,
											"end": 1534,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1471,
											"end": 1473,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2066,
											"end": 2584,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 2066,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2160,
											"end": 2170,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6356,
											"end": 6390,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2180,
											"end": 2184,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6406,
											"end": 6424,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6399,
											"end": 6442,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6458,
											"end": 6476,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6458,
											"end": 6476,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6458,
											"end": 6476,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6451,
											"end": 6485,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2159,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 2142,
											"end": 2159,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6291,
											"end": 6309,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6291,
											"end": 6309,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 2142,
											"end": 2199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2215,
											"end": 2226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2211,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2209,
											"end": 2211,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2209,
											"end": 2226,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2226,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2226,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 2209,
											"end": 2226,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2209,
											"end": 2226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2226,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 2209,
											"end": 2226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2226,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2226,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2226,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2226,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2242,
											"end": 2252,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2238,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2236,
											"end": 2238,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2236,
											"end": 2252,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2252,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2252,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 2236,
											"end": 2252,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2252,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2252,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 2236,
											"end": 2252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2252,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 2236,
											"end": 2252,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2252,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2252,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2252,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2363,
											"end": 2378,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2288,
											"end": 2388,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2406,
											"end": 2416,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2263,
											"end": 2285,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2398,
											"end": 2417,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2405,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2398,
											"end": 2417,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2417,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2417,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2417,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2417,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2417,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2426,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2472,
											"end": 2474,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2459,
											"end": 2468,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 2459,
											"end": 2468,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 2456,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 2454,
											"end": 2456,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 2454,
											"end": 2468,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2459,
											"end": 2468,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 2454,
											"end": 2468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 2468,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 2454,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 2453,
											"end": 2474,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2474,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "113"
										},
										{
											"begin": 2453,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2453,
											"end": 2474,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 2453,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2437,
											"end": 2449,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2498,
											"end": 2500,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2498,
											"end": 2500,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2486,
											"end": 2495,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2486,
											"end": 2500,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 2511,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 2511,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2521,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 2511,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2577,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2577,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2577,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5151,
											"end": 5176,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2567,
											"end": 2576,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5192,
											"end": 5210,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5192,
											"end": 5210,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2542,
											"end": 2552,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2552,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2577,
											"name": "PUSH",
											"source": 7,
											"value": "5CAAD8F5613B6F1D592FC8C69D8F0999453740F0806C754F20CC92F3D4B2B1B6"
										},
										{
											"begin": 2536,
											"end": 2577,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5124,
											"end": 5142,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2536,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 4977,
											"end": 5225,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3820,
											"end": 4132,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 3820,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3898,
											"end": 3908,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3890,
											"end": 3909,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3890,
											"end": 3909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3890,
											"end": 3909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3890,
											"end": 3909,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3890,
											"end": 3897,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3890,
											"end": 3909,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3890,
											"end": 3909,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3890,
											"end": 3909,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3890,
											"end": 3909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3890,
											"end": 3909,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3890,
											"end": 3916,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 3916,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3882,
											"end": 3916,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3874,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 3874,
											"end": 3940,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3874,
											"end": 3940,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3874,
											"end": 3940,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3874,
											"end": 3940,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3874,
											"end": 3940,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9104,
											"end": 9106,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3874,
											"end": 3940,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3874,
											"end": 3940,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3874,
											"end": 3940,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9086,
											"end": 9107,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9145,
											"name": "PUSH",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 9123,
											"end": 9141,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9123,
											"end": 9141,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9123,
											"end": 9141,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9116,
											"end": 9146,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E646578206F7574206F6620626F756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9162,
											"end": 9180,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9162,
											"end": 9180,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9162,
											"end": 9180,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9155,
											"end": 9204,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9221,
											"end": 9239,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 9221,
											"end": 9239,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "109"
										},
										{
											"begin": 8902,
											"end": 9245,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3940,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 3874,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3967,
											"end": 3972,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3950,
											"end": 4091,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 3950,
											"end": 4091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 3996,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 3997,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3978,
											"end": 3997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 3997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 3997,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 3985,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 3978,
											"end": 3997,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3978,
											"end": 3997,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 3997,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 3997,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 3997,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4004,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 3978,
											"end": 4008,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4007,
											"end": 4008,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4007,
											"end": 4008,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "115"
										},
										{
											"begin": 3978,
											"end": 4008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3978,
											"end": 4008,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 3978,
											"end": 4008,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4008,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3950,
											"end": 4091,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3950,
											"end": 4091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 3950,
											"end": 4091,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4062,
											"end": 4072,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4073,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4054,
											"end": 4073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4073,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4073,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4061,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4054,
											"end": 4073,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4054,
											"end": 4073,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4073,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4054,
											"end": 4073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4073,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 4074,
											"end": 4075,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4078,
											"end": 4079,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4074,
											"end": 4079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 4074,
											"end": 4079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4074,
											"end": 4079,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 4074,
											"end": 4079,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 4054,
											"end": 4080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4054,
											"end": 4080,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4029,
											"end": 4048,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4037,
											"end": 4047,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4029,
											"end": 4048,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4029,
											"end": 4048,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4048,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4048,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4048,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4048,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4048,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4048,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4048,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4029,
											"end": 4048,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4049,
											"end": 4050,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 4029,
											"end": 4051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4080,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4080,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4051,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4080,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4080,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4080,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4080,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4029,
											"end": 4080,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4080,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4080,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4080,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4080,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4080,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4080,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4080,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4080,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4029,
											"end": 4080,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4080,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4080,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4080,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4080,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4080,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4029,
											"end": 4080,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4010,
											"end": 4013,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4010,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 4010,
											"end": 4013,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4010,
											"end": 4013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 4010,
											"end": 4013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4010,
											"end": 4013,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 4010,
											"end": 4013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4010,
											"end": 4013,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4010,
											"end": 4013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4010,
											"end": 4013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3950,
											"end": 4091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 3950,
											"end": 4091,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3950,
											"end": 4091,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 3950,
											"end": 4091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4108,
											"end": 4118,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4119,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4100,
											"end": 4119,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4119,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4119,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4107,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4100,
											"end": 4119,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4100,
											"end": 4119,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4119,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4100,
											"end": 4119,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4119,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 4100,
											"end": 4125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4100,
											"end": 4125,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3820,
											"end": 4132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1385,
											"end": 1443,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 1385,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1434,
											"end": 1436,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1434,
											"end": 1436,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1431,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1429,
											"end": 1431,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "125"
										},
										{
											"begin": 1429,
											"end": 1436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 1429,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1424,
											"end": 1426,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1424,
											"end": 1436,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1385,
											"end": 1443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 10914,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10894,
											"end": 10915,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10951,
											"end": 10953,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 10931,
											"end": 10949,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10931,
											"end": 10949,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10931,
											"end": 10949,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10924,
											"end": 10954,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10970,
											"end": 10988,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 10970,
											"end": 10988,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10970,
											"end": 10988,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 11013,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11030,
											"end": 11048,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 11030,
											"end": 11048,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 10710,
											"end": 11054,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 9,
											"value": "440"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 381,
											"end": 554,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 381,
											"end": 554,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 449,
											"end": 469,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 449,
											"end": 469,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 498,
											"end": 529,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 498,
											"end": 529,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 488,
											"end": 530,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 488,
											"end": 530,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 478,
											"end": 548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 478,
											"end": 548,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 544,
											"end": 545,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 542,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 534,
											"end": 546,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 559,
											"end": 881,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 559,
											"end": 881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 636,
											"end": 642,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 650,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 652,
											"end": 658,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 707,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 693,
											"end": 702,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 684,
											"end": 691,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 676,
											"end": 708,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 673,
											"end": 725,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 673,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 673,
											"end": 725,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 721,
											"end": 722,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 719,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 711,
											"end": 723,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 673,
											"end": 725,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 673,
											"end": 725,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 757,
											"end": 766,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 744,
											"end": 767,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 734,
											"end": 767,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 734,
											"end": 767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 786,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 820,
											"end": 822,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 809,
											"end": 818,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 805,
											"end": 823,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 786,
											"end": 824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 786,
											"end": 824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 786,
											"end": 824,
											"name": "tag",
											"source": 9,
											"value": "446"
										},
										{
											"begin": 786,
											"end": 824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 776,
											"end": 824,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 776,
											"end": 824,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 871,
											"end": 873,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 860,
											"end": 869,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 856,
											"end": 874,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 843,
											"end": 875,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 833,
											"end": 875,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 833,
											"end": 875,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 559,
											"end": 881,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 559,
											"end": 881,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 559,
											"end": 881,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 559,
											"end": 881,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 559,
											"end": 881,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 559,
											"end": 881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 886,
											"end": 1140,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 886,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 954,
											"end": 960,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 968,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1015,
											"end": 1017,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1003,
											"end": 1012,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1013,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 986,
											"end": 1018,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 983,
											"end": 1035,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 983,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 983,
											"end": 1035,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1031,
											"end": 1032,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1028,
											"end": 1029,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1021,
											"end": 1033,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 983,
											"end": 1035,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 983,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1067,
											"end": 1076,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1077,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1044,
											"end": 1077,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1096,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 1130,
											"end": 1132,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1119,
											"end": 1128,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1115,
											"end": 1133,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1096,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 1096,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1096,
											"end": 1134,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 1096,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1086,
											"end": 1134,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1086,
											"end": 1134,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 886,
											"end": 1140,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 886,
											"end": 1140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 886,
											"end": 1140,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 886,
											"end": 1140,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 886,
											"end": 1140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 886,
											"end": 1140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 2396,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1545,
											"end": 2396,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1776,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1847,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1847,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1826,
											"end": 1847,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1909,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1896,
											"end": 1909,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1799,
											"end": 1817,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1940,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1749,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1745,
											"end": 1749,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1774,
											"end": 1776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 1961,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1959,
											"end": 1961,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1995,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1995,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1995,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1995,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2018,
											"end": 2033,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2018,
											"end": 2033,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2018,
											"end": 2033,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1745,
											"end": 1749,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2061,
											"end": 2370,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 2061,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2075,
											"end": 2081,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2072,
											"end": 2073,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2069,
											"end": 2082,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2061,
											"end": 2370,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2061,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 2061,
											"end": 2370,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2147,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2134,
											"end": 2147,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2172,
											"end": 2181,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2172,
											"end": 2181,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2160,
											"end": 2182,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2160,
											"end": 2182,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2233,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2233,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2233,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2216,
											"end": 2234,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2202,
											"end": 2214,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2195,
											"end": 2235,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2286,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2275,
											"end": 2286,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2255,
											"end": 2267,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2255,
											"end": 2267,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2255,
											"end": 2267,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2248,
											"end": 2288,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2317,
											"end": 2321,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2308,
											"end": 2322,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2322,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2308,
											"end": 2322,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2345,
											"end": 2360,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2345,
											"end": 2360,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2345,
											"end": 2360,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2345,
											"end": 2360,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2097,
											"end": 2098,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2090,
											"end": 2099,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2061,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 2061,
											"end": 2370,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2061,
											"end": 2370,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 2061,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "SWAP8",
											"source": 9
										},
										{
											"begin": 1545,
											"end": 2396,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1545,
											"end": 2396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2587,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 2401,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2460,
											"end": 2466,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2515,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2501,
											"end": 2510,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2499,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2488,
											"end": 2511,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2516,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2481,
											"end": 2533,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2481,
											"end": 2533,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 2481,
											"end": 2533,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2529,
											"end": 2530,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2527,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2519,
											"end": 2531,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2481,
											"end": 2533,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 2481,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2552,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 2571,
											"end": 2580,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2552,
											"end": 2581,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 2552,
											"end": 2581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2552,
											"end": 2581,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 2552,
											"end": 2581,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2542,
											"end": 2581,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2401,
											"end": 2587,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2401,
											"end": 2587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2936,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 2592,
											"end": 2936,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2794,
											"end": 2796,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2776,
											"end": 2797,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2797,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2776,
											"end": 2797,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2833,
											"end": 2835,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2813,
											"end": 2831,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2813,
											"end": 2831,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2813,
											"end": 2831,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2806,
											"end": 2836,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420656E6F756768206C6971756964697479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2867,
											"end": 2869,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2852,
											"end": 2870,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2845,
											"end": 2895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2927,
											"end": 2929,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2912,
											"end": 2930,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2941,
											"end": 3068,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 2941,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3012,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 2997,
											"end": 3000,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2993,
											"end": 3013,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2990,
											"end": 2991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2983,
											"end": 3014,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3033,
											"end": 3037,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3030,
											"end": 3031,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3023,
											"end": 3038,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3057,
											"end": 3061,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3054,
											"end": 3055,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3062,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3073,
											"end": 3290,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 3073,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3113,
											"end": 3114,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3139,
											"end": 3140,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 3129,
											"end": 3261,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 3178,
											"end": 3181,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3174,
											"end": 3194,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3171,
											"end": 3172,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3164,
											"end": 3195,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3218,
											"end": 3222,
											"name": "PUSH",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 3215,
											"end": 3216,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3208,
											"end": 3223,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3246,
											"end": 3250,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3243,
											"end": 3244,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3236,
											"end": 3251,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3129,
											"end": 3261,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 3129,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3275,
											"end": 3284,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3275,
											"end": 3284,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3073,
											"end": 3290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3295,
											"end": 3423,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 3295,
											"end": 3423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3362,
											"end": 3371,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3362,
											"end": 3371,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3362,
											"end": 3371,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3394,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3394,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3383,
											"end": 3394,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3417,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3380,
											"end": 3417,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3380,
											"end": 3417,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3397,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3397,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 3397,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3428,
											"end": 3596,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 3428,
											"end": 3596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3501,
											"end": 3510,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3501,
											"end": 3510,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3501,
											"end": 3510,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3532,
											"end": 3541,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3532,
											"end": 3541,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3564,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3564,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3549,
											"end": 3564,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3565,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3543,
											"end": 3565,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3529,
											"end": 3566,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3519,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3519,
											"end": 3590,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3570,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 3570,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3601,
											"end": 3726,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 3601,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3666,
											"end": 3675,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3666,
											"end": 3675,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3666,
											"end": 3675,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3687,
											"end": 3697,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3687,
											"end": 3697,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3687,
											"end": 3697,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3684,
											"end": 3720,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3684,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3684,
											"end": 3720,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 3700,
											"end": 3718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4695,
											"end": 4972,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 4695,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4762,
											"end": 4768,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4815,
											"end": 4817,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4803,
											"end": 4812,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4794,
											"end": 4801,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4790,
											"end": 4813,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4786,
											"end": 4818,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4783,
											"end": 4835,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4783,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 4783,
											"end": 4835,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4831,
											"end": 4832,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4829,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4821,
											"end": 4833,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4783,
											"end": 4835,
											"name": "tag",
											"source": 9,
											"value": "476"
										},
										{
											"begin": 4783,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4863,
											"end": 4872,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4857,
											"end": 4873,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4916,
											"end": 4921,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4909,
											"end": 4922,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4902,
											"end": 4923,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4895,
											"end": 4900,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4892,
											"end": 4924,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 4882,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 4882,
											"end": 4942,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 4939,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4935,
											"end": 4936,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4928,
											"end": 4940,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5572,
											"end": 5756,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 5572,
											"end": 5756,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5642,
											"end": 5648,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5695,
											"end": 5697,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5683,
											"end": 5692,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5674,
											"end": 5681,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5670,
											"end": 5693,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5666,
											"end": 5698,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5663,
											"end": 5715,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5663,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 5663,
											"end": 5715,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5711,
											"end": 5712,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5708,
											"end": 5709,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5701,
											"end": 5713,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5663,
											"end": 5715,
											"name": "tag",
											"source": 9,
											"value": "481"
										},
										{
											"begin": 5663,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5734,
											"end": 5750,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5734,
											"end": 5750,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5572,
											"end": 5756,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5572,
											"end": 5756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6843,
											"end": 6970,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 6843,
											"end": 6970,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6904,
											"end": 6914,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 6899,
											"end": 6902,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 6895,
											"end": 6915,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 6892,
											"end": 6893,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6885,
											"end": 6916,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6935,
											"end": 6939,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 6932,
											"end": 6933,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6925,
											"end": 6940,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6959,
											"end": 6963,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6956,
											"end": 6957,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6949,
											"end": 6964,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6975,
											"end": 7110,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 6975,
											"end": 7110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7014,
											"end": 7017,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7035,
											"end": 7052,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7035,
											"end": 7052,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7035,
											"end": 7052,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7032,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 7032,
											"end": 7075,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7055,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 7055,
											"end": 7073,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 7055,
											"end": 7073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7055,
											"end": 7073,
											"name": "tag",
											"source": 9,
											"value": "488"
										},
										{
											"begin": 7055,
											"end": 7073,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7102,
											"end": 7103,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7091,
											"end": 7104,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7091,
											"end": 7104,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6975,
											"end": 7110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10578,
											"end": 10705,
											"name": "tag",
											"source": 9,
											"value": "426"
										},
										{
											"begin": 10578,
											"end": 10705,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10639,
											"end": 10649,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 10634,
											"end": 10637,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 10630,
											"end": 10650,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 10627,
											"end": 10628,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10620,
											"end": 10651,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10670,
											"end": 10674,
											"name": "PUSH",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 10667,
											"end": 10668,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10660,
											"end": 10675,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10694,
											"end": 10698,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10691,
											"end": 10692,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10684,
											"end": 10699,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"DEX.sol",
								"MEME.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_distributeTax(uint256)": "d37a389b",
							"buy(uint256)": "d96a094a",
							"buy(uint256,address,uint256)": "2afaca20",
							"dailyTax(uint256)": "2ad9d559",
							"getETHPrice(uint256)": "1a753fed",
							"getMemePrice(uint256)": "5c572ed0",
							"getStacks()": "e8bca8b8",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"sell(uint256)": "e4849b32",
							"sell(uint256,address)": "4189a68e",
							"stack(uint256)": "dc9031c4",
							"stackingRate()": "9c74f05d",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"unstack(uint256)": "200061df"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_taxrate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Meme_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"Buy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Meme_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"Sell\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Meme_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"Stack\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Meme_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"UnStack\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolIndex\",\"type\":\"uint256\"}],\"name\":\"_distributeTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"meme_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"meme_amount\",\"type\":\"uint256\"}],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dailyTax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"getETHPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"meme_amount\",\"type\":\"uint256\"}],\"name\":\"getMemePrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStacks\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"meme_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"internalType\":\"struct DEX.Stack_Struct[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"ownerAddress\",\"type\":\"address\"}],\"name\":\"sell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eth_amount\",\"type\":\"uint256\"}],\"name\":\"sell\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"meme_amount\",\"type\":\"uint256\"}],\"name\":\"stack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stackingRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"unstack\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"DEX.sol\":\"DEX\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"DEX.sol\":{\"keccak256\":\"0xb2617b0c9710b75f71497d338eb8c3d35e60e412fbe1de4955314a744329992e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8846f94ae0e2f609ca3e66ab8bd6ad293768cf3493732ddb6306913fc4c57069\",\"dweb:/ipfs/QmfBKnLsRUxVtPFB9rrsM4v2PCnMmi2mvgFGtWvqTTqfTT\"]},\"MEME.sol\":{\"keccak256\":\"0x3fca3f1262f20833c3e079d9692dfd0af0f3a93b2eef3205f69430ae490a6d26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9f24cce4eb4afb866c7710fe6019de37da9944fa0914a0b8e0d0206fcb4bc1c\",\"dweb:/ipfs/QmPrDUwqYS4BDE6ks5bWgrnTnsbxw7DA7ddLcjSgt31Ltd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 130,
								"contract": "DEX.sol:DEX",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 7,
								"contract": "DEX.sol:DEX",
								"label": "_owner",
								"offset": 1,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 996,
								"contract": "DEX.sol:DEX",
								"label": "meme",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(ERC20)807"
							},
							{
								"astId": 1034,
								"contract": "DEX.sol:DEX",
								"label": "Stacked",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_array(t_struct(Stack_Struct)993_storage)dyn_storage)"
							},
							{
								"astId": 1038,
								"contract": "DEX.sol:DEX",
								"label": "dailyTax",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 1040,
								"contract": "DEX.sol:DEX",
								"label": "stackingRate",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1042,
								"contract": "DEX.sol:DEX",
								"label": "_k",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1044,
								"contract": "DEX.sol:DEX",
								"label": "_x",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1046,
								"contract": "DEX.sol:DEX",
								"label": "_y",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1049,
								"contract": "DEX.sol:DEX",
								"label": "precision",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1057,
								"contract": "DEX.sol:DEX",
								"label": "taxRate",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1249,
								"contract": "DEX.sol:DEX",
								"label": "originalX",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Stack_Struct)993_storage)dyn_storage": {
								"base": "t_struct(Stack_Struct)993_storage",
								"encoding": "dynamic_array",
								"label": "struct DEX.Stack_Struct[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ERC20)807": {
								"encoding": "inplace",
								"label": "contract ERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_struct(Stack_Struct)993_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DEX.Stack_Struct[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Stack_Struct)993_storage)dyn_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stack_Struct)993_storage": {
								"encoding": "inplace",
								"label": "struct DEX.Stack_Struct",
								"members": [
									{
										"astId": 988,
										"contract": "DEX.sol:DEX",
										"label": "meme_amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 990,
										"contract": "DEX.sol:DEX",
										"label": "eth_amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 992,
										"contract": "DEX.sol:DEX",
										"label": "time",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"MEME.sol": {
				"MEME": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys `amount` tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"MEME.sol\":306:923  contract MEME is ERC20, ERC20Burnable, Pausable, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"MEME.sol\":370:468  constructor() ERC20(\"MEME\", \"MEME\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  dup3\n  mstore\n  0x04\n  dup1\n  dup3\n  mstore\n  shl(0xe0, 0x4d454d45)\n  0x20\n  dup1\n  dup5\n  add\n  dup3\n  swap1\n  mstore\n  dup5\n  mload\n  dup1\n  dup7\n  add\n  swap1\n  swap6\n  mstore\n  swap2\n  dup5\n  mstore\n  swap1\n  dup4\n  add\n  mstore\n  swap1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1980:2093  constructor(string memory name_, string memory symbol_) {... */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2051  _name */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2046:2059  _name = name_ */\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_9\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2079:2086  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2076  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2069:2086  _symbol = symbol_ */\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x05\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_12\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_12:\n    /* \"MEME.sol\":417:460  _mint(msg.sender, 50000 * 10 ** decimals()) */\n  tag_17\n    /* \"MEME.sol\":423:433  msg.sender */\n  caller\n    /* \"MEME.sol\":443:459  10 ** decimals() */\n  tag_20\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n  0x12\n    /* \"MEME.sol\":443:445  10 */\n  0x0a\n    /* \"MEME.sol\":443:459  10 ** decimals() */\n  tag_21\n  jump\t// in\ntag_20:\n    /* \"MEME.sol\":435:459  50000 * 10 ** decimals() */\n  tag_22\n  swap1\n    /* \"MEME.sol\":435:440  50000 */\n  0xc350\n    /* \"MEME.sol\":435:459  50000 * 10 ** decimals() */\n  tag_23\n  jump\t// in\ntag_22:\n    /* \"MEME.sol\":417:422  _mint */\n  tag_24\n    /* \"MEME.sol\":417:460  _mint(msg.sender, 50000 * 10 ** decimals()) */\n  jump\t// in\ntag_17:\n    /* \"MEME.sol\":306:923  contract MEME is ERC20, ERC20Burnable, Pausable, Ownable {... */\n  jump(tag_64)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  0x05\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup4\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  0x0100\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  dup2\n  dup2\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  dup6\n  and\n  or\n  swap1\n  swap5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  swap4\n  swap1\n  swap3\n  div\n  and\n  swap2\n  dup3\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\ntag_24:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8603:8624  account != address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_30\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4625:4627   */\n  0x20\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4607:4628   */\n  mstore\n    /* \"#utility.yul\":4664:4666   */\n  0x1f\n    /* \"#utility.yul\":4644:4662   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4637:4667   */\n  mstore\n    /* \"#utility.yul\":4703:4736   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":4683:4701   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4676:4737   */\n  mstore\n    /* \"#utility.yul\":4754:4772   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_30:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8671:8720  _beforeTokenTransfer(address(0), account, amount) */\n  tag_33\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8700:8701  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8704:8711  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8713:8719  amount */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8671:8691  _beforeTokenTransfer */\n  tag_34\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8671:8720  _beforeTokenTransfer(address(0), account, amount) */\n  jump\t// in\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8747:8753  amount */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8731:8743  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8731:8753  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_35\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8908  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n  dup2\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8927  _balances[account] += amount */\n  dup1\n  sload\n  dup7\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  mload\n    /* \"#utility.yul\":5059:5084   */\n  dup5\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap2\n    /* \"#utility.yul\":5032:5050   */\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"MEME.sol\":721:920  function _beforeTokenTransfer(address from, address to, uint256 amount)... */\ntag_34:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n  tag_42\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n  tag_43\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n  jump\t// in\ntag_42:\n    /* \"MEME.sol\":868:912  super._beforeTokenTransfer(from, to, amount) */\n  tag_45\n    /* \"MEME.sol\":895:899  from */\n  dup4\n    /* \"MEME.sol\":901:903  to */\n  dup4\n    /* \"MEME.sol\":905:911  amount */\n  dup4\n  sub(shl(0xe0, 0x01), 0x01)\n    /* \"MEME.sol\":868:912  super._beforeTokenTransfer(from, to, amount) */\n  dup5\n  and\n  jump\t// in\ntag_45:\n    /* \"MEME.sol\":721:920  function _beforeTokenTransfer(address from, address to, uint256 amount)... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\ntag_43:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n  and(0xff, sload(0x05))\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n  iszero\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n  tag_51\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":5297:5299   */\n  0x20\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":5279:5300   */\n  mstore\n    /* \"#utility.yul\":5336:5338   */\n  0x10\n    /* \"#utility.yul\":5316:5334   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":5309:5339   */\n  mstore\n  shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n    /* \"#utility.yul\":5355:5373   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":5348:5394   */\n  mstore\n    /* \"#utility.yul\":5411:5429   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n  tag_31\n    /* \"#utility.yul\":5095:5435   */\n  jump\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\ntag_51:\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_56:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_57:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_67\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_67:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_68\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_68:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_59:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_72\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_72:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_73:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_75\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_73)\ntag_75:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_8:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_79\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_79\n  tag_56\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":1582:1679   */\n  tag_80\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_81\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_57\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_59\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_84\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_84:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_75)\n    /* \"#utility.yul\":1810:2473   */\ntag_83:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_87:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_90:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\n    /* \"#utility.yul\":2735:2862   */\ntag_61:\n    /* \"#utility.yul\":2796:2806   */\n  0x4e487b71\n    /* \"#utility.yul\":2791:2794   */\n  0xe0\n    /* \"#utility.yul\":2787:2807   */\n  shl\n    /* \"#utility.yul\":2784:2785   */\n  0x00\n    /* \"#utility.yul\":2777:2808   */\n  mstore\n    /* \"#utility.yul\":2827:2831   */\n  0x11\n    /* \"#utility.yul\":2824:2825   */\n  0x04\n    /* \"#utility.yul\":2817:2832   */\n  mstore\n    /* \"#utility.yul\":2851:2855   */\n  0x24\n    /* \"#utility.yul\":2848:2849   */\n  0x00\n    /* \"#utility.yul\":2841:2856   */\n  revert\n    /* \"#utility.yul\":2867:3289   */\ntag_62:\n    /* \"#utility.yul\":2956:2957   */\n  0x01\n    /* \"#utility.yul\":2999:3004   */\n  dup2\n    /* \"#utility.yul\":2956:2957   */\n  dup2\n    /* \"#utility.yul\":3013:3283   */\ntag_93:\n    /* \"#utility.yul\":3034:3041   */\n  dup1\n    /* \"#utility.yul\":3024:3032   */\n  dup6\n    /* \"#utility.yul\":3021:3042   */\n  gt\n    /* \"#utility.yul\":3013:3283   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":3093:3097   */\n  dup2\n    /* \"#utility.yul\":3089:3090   */\n  0x00\n    /* \"#utility.yul\":3085:3091   */\n  not\n    /* \"#utility.yul\":3081:3098   */\n  div\n    /* \"#utility.yul\":3075:3079   */\n  dup3\n    /* \"#utility.yul\":3072:3099   */\n  gt\n    /* \"#utility.yul\":3069:3122   */\n  iszero\n  tag_97\n  jumpi\n    /* \"#utility.yul\":3102:3120   */\n  tag_97\n  tag_61\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":3152:3159   */\n  dup1\n    /* \"#utility.yul\":3142:3150   */\n  dup6\n    /* \"#utility.yul\":3138:3160   */\n  and\n    /* \"#utility.yul\":3135:3190   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":3172:3188   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":3135:3190   */\ntag_98:\n    /* \"#utility.yul\":3251:3273   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":3211:3226   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":3013:3283   */\n  jump(tag_93)\ntag_95:\n    /* \"#utility.yul\":3017:3020   */\n  pop\n    /* \"#utility.yul\":2867:3289   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3294:4100   */\ntag_63:\n    /* \"#utility.yul\":3343:3348   */\n  0x00\n    /* \"#utility.yul\":3373:3381   */\n  dup3\n    /* \"#utility.yul\":3363:3443   */\n  tag_100\n  jumpi\n  pop\n    /* \"#utility.yul\":3414:3415   */\n  0x01\n    /* \"#utility.yul\":3428:3433   */\n  jump(tag_99)\n    /* \"#utility.yul\":3363:3443   */\ntag_100:\n    /* \"#utility.yul\":3462:3466   */\n  dup2\n    /* \"#utility.yul\":3452:3528   */\n  tag_101\n  jumpi\n  pop\n    /* \"#utility.yul\":3499:3500   */\n  0x00\n    /* \"#utility.yul\":3513:3518   */\n  jump(tag_99)\n    /* \"#utility.yul\":3452:3528   */\ntag_101:\n    /* \"#utility.yul\":3544:3548   */\n  dup2\n    /* \"#utility.yul\":3562:3563   */\n  0x01\n    /* \"#utility.yul\":3557:3616   */\n  dup2\n  eq\n  tag_103\n  jumpi\n    /* \"#utility.yul\":3630:3631   */\n  0x02\n    /* \"#utility.yul\":3625:3755   */\n  dup2\n  eq\n  tag_104\n  jumpi\n    /* \"#utility.yul\":3537:3755   */\n  jump(tag_102)\n    /* \"#utility.yul\":3557:3616   */\ntag_103:\n    /* \"#utility.yul\":3587:3588   */\n  0x01\n    /* \"#utility.yul\":3578:3588   */\n  swap2\n  pop\n    /* \"#utility.yul\":3601:3606   */\n  pop\n  jump(tag_99)\n    /* \"#utility.yul\":3625:3755   */\ntag_104:\n    /* \"#utility.yul\":3662:3665   */\n  0xff\n    /* \"#utility.yul\":3652:3660   */\n  dup5\n    /* \"#utility.yul\":3649:3666   */\n  gt\n    /* \"#utility.yul\":3646:3689   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":3669:3687   */\n  tag_106\n  tag_61\n  jump\t// in\ntag_106:\n  pop\n  pop\n    /* \"#utility.yul\":3725:3726   */\n  0x01\n    /* \"#utility.yul\":3711:3727   */\n  dup3\n  shl\n    /* \"#utility.yul\":3740:3745   */\n  jump(tag_99)\n    /* \"#utility.yul\":3537:3755   */\ntag_102:\n  pop\n    /* \"#utility.yul\":3839:3841   */\n  0x20\n    /* \"#utility.yul\":3829:3837   */\n  dup4\n    /* \"#utility.yul\":3826:3842   */\n  lt\n    /* \"#utility.yul\":3820:3823   */\n  0x0133\n    /* \"#utility.yul\":3814:3818   */\n  dup4\n    /* \"#utility.yul\":3811:3824   */\n  lt\n    /* \"#utility.yul\":3807:3843   */\n  and\n    /* \"#utility.yul\":3801:3803   */\n  0x4e\n    /* \"#utility.yul\":3791:3799   */\n  dup5\n    /* \"#utility.yul\":3788:3804   */\n  lt\n    /* \"#utility.yul\":3783:3785   */\n  0x0b\n    /* \"#utility.yul\":3777:3781   */\n  dup5\n    /* \"#utility.yul\":3774:3786   */\n  lt\n    /* \"#utility.yul\":3770:3805   */\n  and\n    /* \"#utility.yul\":3767:3844   */\n  or\n    /* \"#utility.yul\":3764:3923   */\n  iszero\n  tag_107\n  jumpi\n  pop\n    /* \"#utility.yul\":3876:3895   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":3908:3913   */\n  jump(tag_99)\n    /* \"#utility.yul\":3764:3923   */\ntag_107:\n    /* \"#utility.yul\":3955:3989   */\n  tag_108\n    /* \"#utility.yul\":3980:3988   */\n  dup4\n    /* \"#utility.yul\":3974:3978   */\n  dup4\n    /* \"#utility.yul\":3955:3989   */\n  tag_62\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":4025:4031   */\n  dup1\n    /* \"#utility.yul\":4021:4022   */\n  0x00\n    /* \"#utility.yul\":4017:4023   */\n  not\n    /* \"#utility.yul\":4013:4032   */\n  div\n    /* \"#utility.yul\":4004:4011   */\n  dup3\n    /* \"#utility.yul\":4001:4033   */\n  gt\n    /* \"#utility.yul\":3998:4056   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":4036:4054   */\n  tag_110\n  tag_61\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":4074:4094   */\n  mul\n  swap1\n  pop\n    /* \"#utility.yul\":3294:4100   */\ntag_99:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4105:4245   */\ntag_21:\n    /* \"#utility.yul\":4163:4168   */\n  0x00\n    /* \"#utility.yul\":4192:4239   */\n  tag_112\n    /* \"#utility.yul\":4233:4237   */\n  0xff\n    /* \"#utility.yul\":4223:4231   */\n  dup5\n    /* \"#utility.yul\":4219:4238   */\n  and\n    /* \"#utility.yul\":4213:4217   */\n  dup4\n    /* \"#utility.yul\":4192:4239   */\n  tag_63\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":4183:4239   */\n  swap4\n    /* \"#utility.yul\":4105:4245   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4250:4418   */\ntag_23:\n    /* \"#utility.yul\":4323:4332   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4354:4363   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4371:4386   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4365:4387   */\n  dup5\n  eq\n    /* \"#utility.yul\":4351:4388   */\n  or\n    /* \"#utility.yul\":4341:4412   */\n  tag_99\n  jumpi\n    /* \"#utility.yul\":4392:4410   */\n  tag_99\n  tag_61\n  jump\t// in\n    /* \"#utility.yul\":4783:4908   */\ntag_36:\n    /* \"#utility.yul\":4848:4857   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4869:4879   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4866:4902   */\n  iszero\n  tag_99\n  jumpi\n    /* \"#utility.yul\":4882:4900   */\n  tag_99\n  tag_61\n  jump\t// in\n    /* \"#utility.yul\":5095:5435   */\ntag_64:\n    /* \"MEME.sol\":306:923  contract MEME is ERC20, ERC20Burnable, Pausable, Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"MEME.sol\":306:923  contract MEME is ERC20, ERC20Burnable, Pausable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x79cc6790\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x39509351\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":1169:1183   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1162:1184   */\n      iszero\n        /* \"#utility.yul\":1144:1185   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1132:1134   */\n      0x20\n        /* \"#utility.yul\":1117:1135   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_28\n        /* \"#utility.yul\":1004:1191   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3342:3354  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":1342:1367   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1330:1332   */\n      0x20\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3255:3361  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_28\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3186:3188  18 */\n      0x12\n        /* \"#utility.yul\":1853:1889   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1841:1843   */\n      0x20\n        /* \"#utility.yul\":1826:1844   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3104:3195  function decimals() public view virtual override returns (uint8) {... */\n      tag_28\n        /* \"#utility.yul\":1711:1895   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n        /* \"MEME.sol\":545:610  function unpause() public onlyOwner {... */\n    tag_9:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      stop\n        /* \"MEME.sol\":618:713  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_10:\n      tag_53\n      tag_56\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":578:667  function burn(uint256 amount) public virtual {... */\n    tag_11:\n      tag_53\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_12:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x05))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      jump(tag_30)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_36\n      tag_66\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3493:3500  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3519:3537  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3544  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_53\n      tag_71\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":973:1134  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_15:\n      tag_53\n      tag_73\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"MEME.sol\":476:537  function pause() public onlyOwner {... */\n    tag_16:\n      tag_53\n      tag_76\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_17:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload(0x05)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2440:2472   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2422:2473   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2410:2412   */\n      0x20\n        /* \"#utility.yul\":2395:2413   */\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      tag_28\n        /* \"#utility.yul\":2276:2479   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_18:\n      tag_26\n      tag_82\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_19:\n      tag_30\n      tag_85\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_20:\n      tag_30\n      tag_89\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_21:\n      tag_36\n      tag_93\n      calldatasize\n      0x04\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_22:\n      tag_53\n      tag_98\n      calldatasize\n      0x04\n      tag_67\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2212:2225  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2244:2249  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2237:2249  return _name */\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_103\n      swap1\n      tag_102\n      jump\t// in\n    tag_103:\n      dup1\n      iszero\n      tag_104\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_105\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_104)\n    tag_105:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_106:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_106\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2158:2256  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4527:4531  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      tag_110\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4597:4604  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4606:4612  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4589  _approve */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4581:4613  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4630:4634  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4623:4634  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4444:4641  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_107:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5300:5304  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      tag_115\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5372:5376  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5387:5393  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5371  _spendAllowance */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5356:5394  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5414:5418  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5420:5422  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5424:5430  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5413  _transfer */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5404:5431  _transfer(from, to, amount) */\n      jump\t// in\n    tag_117:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5448:5452  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5203:5459  function transferFrom(address from, address to, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5854:6088  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5942:5946  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_110\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6049:6059  addedValue */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      tag_123\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6012:6019  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6030  allowance */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6046  allowance(owner, spender) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6021:6059  allowance(owner, spender) + addedValue */\n      tag_124\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6004  _approve */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5996:6060  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"MEME.sol\":545:610  function unpause() public onlyOwner {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_127\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_127:\n        /* \"MEME.sol\":592:602  _unpause() */\n      tag_130\n        /* \"MEME.sol\":592:600  _unpause */\n      tag_131\n        /* \"MEME.sol\":592:602  _unpause() */\n      jump\t// in\n    tag_130:\n        /* \"MEME.sol\":545:610  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"MEME.sol\":618:713  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_133\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_133:\n        /* \"MEME.sol\":688:705  _mint(to, amount) */\n      tag_135\n        /* \"MEME.sol\":694:696  to */\n      dup3\n        /* \"MEME.sol\":698:704  amount */\n      dup3\n        /* \"MEME.sol\":688:693  _mint */\n      tag_136\n        /* \"MEME.sol\":688:705  _mint(to, amount) */\n      jump\t// in\n    tag_135:\n        /* \"MEME.sol\":618:713  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":578:667  function burn(uint256 amount) public virtual {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":633:660  _burn(_msgSender(), amount) */\n      tag_138\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":653:659  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":633:638  _burn */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":633:660  _burn(_msgSender(), amount) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":578:667  function burn(uint256 amount) public virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_144\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_130\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":973:1134  function burnFrom(address account, uint256 amount) public virtual {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1049:1095  _spendAllowance(account, _msgSender(), amount) */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1065:1072  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1088:1094  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1049:1064  _spendAllowance */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1049:1095  _spendAllowance(account, _msgSender(), amount) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1105:1127  _burn(account, amount) */\n      tag_135\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1111:1118  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1120:1126  amount */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1105:1110  _burn */\n      tag_140\n        /* \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":1105:1127  _burn(account, amount) */\n      jump\t// in\n        /* \"MEME.sol\":476:537  function pause() public onlyOwner {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_153:\n        /* \"MEME.sol\":521:529  _pause() */\n      tag_130\n        /* \"MEME.sol\":521:527  _pause */\n      tag_156\n        /* \"MEME.sol\":521:529  _pause() */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2369:2471  function symbol() public view virtual override returns (string memory) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2425:2438  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2457:2464  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2450:2464  return _symbol */\n      dup1\n      sload\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6575:7002  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6668:6672  bool */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      tag_166\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6766:6773  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6758  allowance */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6749:6774  allowance(owner, spender) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6722:6774  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6812:6827  subtractedValue */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6808  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6792:6827  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3563:3565   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3545:3566   */\n      mstore\n        /* \"#utility.yul\":3602:3604   */\n      0x25\n        /* \"#utility.yul\":3582:3600   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3575:3605   */\n      mstore\n        /* \"#utility.yul\":3641:3675   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3621:3639   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3614:3676   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3692:3710   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3685:3720   */\n      mstore\n        /* \"#utility.yul\":3737:3756   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6784:6869  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6912:6917  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6919:6926  spender */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6947:6962  subtractedValue */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6944  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6928:6962  currentAllowance - subtractedValue */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6911  _approve */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6903:6963  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3740:3929  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3819:3823  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      tag_110\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3890:3892  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3894:3900  amount */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3882  _transfer */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3873:3901  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_95:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4076:4083  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4113  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4120  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4102:4129  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3987:4136  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_176\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3969:3971   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3951:3972   */\n      mstore\n        /* \"#utility.yul\":4008:4010   */\n      0x26\n        /* \"#utility.yul\":3988:4006   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3981:4011   */\n      mstore\n        /* \"#utility.yul\":4047:4081   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":4027:4045   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4020:4082   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":4098:4116   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4091:4127   */\n      mstore\n        /* \"#utility.yul\":4144:4163   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_168\n        /* \"#utility.yul\":3767:4169   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_178:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_147\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_111:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10577  owner != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4376:4378   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4358:4379   */\n      mstore\n        /* \"#utility.yul\":4415:4417   */\n      0x24\n        /* \"#utility.yul\":4395:4413   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4388:4418   */\n      mstore\n        /* \"#utility.yul\":4454:4488   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":4434:4452   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4427:4489   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":4505:4523   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4498:4532   */\n      mstore\n        /* \"#utility.yul\":4549:4568   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_168\n        /* \"#utility.yul\":4174:4574   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10550:10618  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_184:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10657  spender != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4781:4783   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4763:4784   */\n      mstore\n        /* \"#utility.yul\":4820:4822   */\n      0x22\n        /* \"#utility.yul\":4800:4818   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4793:4823   */\n      mstore\n        /* \"#utility.yul\":4859:4893   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4839:4857   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4832:4894   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4910:4928   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4903:4935   */\n      mstore\n        /* \"#utility.yul\":4952:4971   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_168\n        /* \"#utility.yul\":4579:4977   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10628:10696  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10718  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10725  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10734  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10707:10743  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10758:10790  Approval(owner, spender, amount) */\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10457:10797  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11202  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11215:11220  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11222:11229  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11214  allowance */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11205:11230  allowance(owner, spender) */\n      jump\t// in\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11178:11230  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11260  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11244:11281  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11240:11483  if (currentAllowance != type(uint256).max) {... */\n      tag_197\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11325:11331  amount */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11321  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11305:11331  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5184:5186   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5166:5187   */\n      mstore\n        /* \"#utility.yul\":5223:5225   */\n      0x1d\n        /* \"#utility.yul\":5203:5221   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5196:5226   */\n      mstore\n        /* \"#utility.yul\":5262:5293   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":5242:5260   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5235:5294   */\n      mstore\n        /* \"#utility.yul\":5311:5329   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_168\n        /* \"#utility.yul\":4982:5335   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11297:11365  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11416:11421  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11423:11430  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11451:11457  amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11448  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11432:11457  currentAllowance - amount */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11415  _approve */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11407:11458  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11168:11489  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11078:11489  function _spendAllowance(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7456:8244  function _transfer(address from, address to, uint256 amount) internal virtual {... */\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7552:7570  from != address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5542:5544   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5524:5545   */\n      mstore\n        /* \"#utility.yul\":5581:5583   */\n      0x25\n        /* \"#utility.yul\":5561:5579   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5554:5584   */\n      mstore\n        /* \"#utility.yul\":5620:5654   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":5600:5618   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5593:5655   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":5671:5689   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5664:5699   */\n      mstore\n        /* \"#utility.yul\":5716:5735   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_168\n        /* \"#utility.yul\":5340:5741   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7544:7612  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_199:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7630:7646  to != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_202\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5948:5950   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5930:5951   */\n      mstore\n        /* \"#utility.yul\":5987:5989   */\n      0x23\n        /* \"#utility.yul\":5967:5985   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5960:5990   */\n      mstore\n        /* \"#utility.yul\":6026:6060   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":6006:6024   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5999:6061   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":6077:6095   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6070:6103   */\n      mstore\n        /* \"#utility.yul\":6120:6139   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_168\n        /* \"#utility.yul\":5746:6145   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7622:7686  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7697:7735  _beforeTokenTransfer(from, to, amount) */\n      tag_205\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7718:7722  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7724:7726  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7728:7734  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7697:7717  _beforeTokenTransfer */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7697:7735  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_205:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7746:7765  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7768:7783  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7801:7822  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_207\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6352:6354   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6334:6355   */\n      mstore\n        /* \"#utility.yul\":6391:6393   */\n      0x26\n        /* \"#utility.yul\":6371:6389   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6364:6394   */\n      mstore\n        /* \"#utility.yul\":6430:6464   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":6410:6428   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6403:6465   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":6481:6499   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6474:6510   */\n      mstore\n        /* \"#utility.yul\":6527:6546   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_168\n        /* \"#utility.yul\":6150:6552   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7793:7865  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_207:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup5\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7914  _balances[from] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7917:7937  fromBalance - amount */\n      dup8\n      dup8\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7899:7937  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap4\n      dup8\n      and\n      dup1\n      dup4\n      mstore\n      swap2\n      dup5\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8137  _balances[to] += amount */\n      dup1\n      sload\n      dup8\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      swap3\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8114:8127  _balances[to] */\n      swap1\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8163:8189  Transfer(from, to, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8200:8237  _afterTokenTransfer(from, to, amount) */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9375:10034  function _burn(address account, uint256 amount) internal virtual {... */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      sload(0x05)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6759:6761   */\n      0x20\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6741:6762   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6778:6796   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6771:6801   */\n      mstore\n        /* \"#utility.yul\":6837:6871   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":6817:6835   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6810:6872   */\n      mstore\n        /* \"#utility.yul\":6889:6907   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_168\n        /* \"#utility.yul\":6557:6913   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_131:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_220\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_221\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x05\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n    tag_223:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2440:2472   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2422:2473   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2410:2412   */\n      0x20\n        /* \"#utility.yul\":2395:2413   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8520:9055  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_136:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8603:8624  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7120:7122   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7102:7123   */\n      mstore\n        /* \"#utility.yul\":7159:7161   */\n      0x1f\n        /* \"#utility.yul\":7139:7157   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7132:7162   */\n      mstore\n        /* \"#utility.yul\":7198:7231   */\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n        /* \"#utility.yul\":7178:7196   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7171:7232   */\n      mstore\n        /* \"#utility.yul\":7249:7267   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_168\n        /* \"#utility.yul\":6918:7273   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8595:8660  require(account != address(0), \"ERC20: mint to the zero address\") */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8671:8720  _beforeTokenTransfer(address(0), account, amount) */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8700:8701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8704:8711  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8713:8719  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8671:8691  _beforeTokenTransfer */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8671:8720  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8747:8753  amount */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8731:8743  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8731:8753  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_230\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n    tag_230:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8908  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8917  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8899:8927  _balances[account] += amount */\n      dup1\n      sload\n      dup7\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8989  Transfer(address(0), account, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"MEME.sol\":618:713  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9375:10034  function _burn(address account, uint256 amount) internal virtual {... */\n    tag_140:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9458:9479  account != address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7480:7482   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7462:7483   */\n      mstore\n        /* \"#utility.yul\":7519:7521   */\n      0x21\n        /* \"#utility.yul\":7499:7517   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7492:7522   */\n      mstore\n        /* \"#utility.yul\":7558:7592   */\n      0x45524332303a206275726e2066726f6d20746865207a65726f20616464726573\n        /* \"#utility.yul\":7538:7556   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7531:7593   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":7609:7627   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7602:7633   */\n      mstore\n        /* \"#utility.yul\":7650:7669   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n      tag_168\n        /* \"#utility.yul\":7278:7675   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9450:9517  require(account != address(0), \"ERC20: burn from the zero address\") */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9528:9577  _beforeTokenTransfer(account, address(0), amount) */\n      tag_237\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9549:9556  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9566:9567  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9570:9576  amount */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9528:9548  _beforeTokenTransfer */\n      tag_206\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9528:9577  _beforeTokenTransfer(account, address(0), amount) */\n      jump\t// in\n    tag_237:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9613:9631  _balances[account] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9588:9610  uint256 accountBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9613:9631  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9649:9673  accountBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_238\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7882:7884   */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7864:7885   */\n      mstore\n        /* \"#utility.yul\":7921:7923   */\n      0x22\n        /* \"#utility.yul\":7901:7919   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7894:7924   */\n      mstore\n        /* \"#utility.yul\":7960:7994   */\n      0x45524332303a206275726e20616d6f756e7420657863656564732062616c616e\n        /* \"#utility.yul\":7940:7958   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7933:7995   */\n      mstore\n      shl(0xf0, 0x6365)\n        /* \"#utility.yul\":8011:8029   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8004:8036   */\n      mstore\n        /* \"#utility.yul\":8053:8072   */\n      0x84\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n      tag_168\n        /* \"#utility.yul\":7680:8078   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9641:9712  require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\") */\n    tag_238:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9755  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9767:9790  accountBalance - amount */\n      dup7\n      dup7\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9790  _balances[account] = accountBalance - amount */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9883:9895  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9883:9905  _totalSupply -= amount */\n      dup1\n      sload\n      dup8\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      mload\n        /* \"#utility.yul\":1342:1367   */\n      dup6\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9755  _balances */\n      swap2\n      swap3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9746:9764  _balances[account] */\n      swap2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap2\n        /* \"#utility.yul\":1315:1333   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9931:9968  Transfer(account, address(0), amount) */\n      tag_190\n        /* \"#utility.yul\":1196:1373   */\n      jump\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      0x05\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      0x0100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      dup6\n      and\n      or\n      swap1\n      swap5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      swap4\n      swap1\n      swap3\n      div\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_245\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_246\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x05\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_223\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"MEME.sol\":721:920  function _beforeTokenTransfer(address from, address to, uint256 amount)... */\n    tag_206:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_251\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_246\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9440:10034  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9375:10034  function _burn(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x05))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8285:8287   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8267:8288   */\n      mstore\n        /* \"#utility.yul\":8324:8326   */\n      0x14\n        /* \"#utility.yul\":8304:8322   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8297:8327   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":8343:8361   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8336:8386   */\n      mstore\n        /* \"#utility.yul\":8403:8421   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_168\n        /* \"#utility.yul\":8083:8427   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x05))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8634:8636   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8616:8637   */\n      mstore\n        /* \"#utility.yul\":8673:8675   */\n      0x10\n        /* \"#utility.yul\":8653:8671   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8646:8676   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":8692:8710   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8685:8731   */\n      mstore\n        /* \"#utility.yul\":8748:8766   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_168\n        /* \"#utility.yul\":8432:8772   */\n      jump\n        /* \"#utility.yul\":14:562   */\n    tag_29:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      dup3\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_270:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_270)\n    tag_272:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:740   */\n    tag_267:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:715   */\n      dup2\n      and\n        /* \"#utility.yul\":674:716   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:734   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":664:734   */\n    tag_274:\n        /* \"#utility.yul\":567:740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":745:999   */\n    tag_32:\n        /* \"#utility.yul\":813:819   */\n      0x00\n        /* \"#utility.yul\":821:827   */\n      dup1\n        /* \"#utility.yul\":874:876   */\n      0x40\n        /* \"#utility.yul\":862:871   */\n      dup4\n        /* \"#utility.yul\":853:860   */\n      dup6\n        /* \"#utility.yul\":849:872   */\n      sub\n        /* \"#utility.yul\":845:877   */\n      slt\n        /* \"#utility.yul\":842:894   */\n      iszero\n      tag_276\n      jumpi\n        /* \"#utility.yul\":890:891   */\n      0x00\n        /* \"#utility.yul\":887:888   */\n      dup1\n        /* \"#utility.yul\":880:892   */\n      revert\n        /* \"#utility.yul\":842:894   */\n    tag_276:\n        /* \"#utility.yul\":913:942   */\n      tag_277\n        /* \"#utility.yul\":932:941   */\n      dup4\n        /* \"#utility.yul\":913:942   */\n      tag_267\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":903:942   */\n      swap5\n        /* \"#utility.yul\":989:991   */\n      0x20\n        /* \"#utility.yul\":974:992   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":961:993   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":745:999   */\n      jump\t// out\n        /* \"#utility.yul\":1378:1706   */\n    tag_42:\n        /* \"#utility.yul\":1455:1461   */\n      0x00\n        /* \"#utility.yul\":1463:1469   */\n      dup1\n        /* \"#utility.yul\":1471:1477   */\n      0x00\n        /* \"#utility.yul\":1524:1526   */\n      0x60\n        /* \"#utility.yul\":1512:1521   */\n      dup5\n        /* \"#utility.yul\":1503:1510   */\n      dup7\n        /* \"#utility.yul\":1499:1522   */\n      sub\n        /* \"#utility.yul\":1495:1527   */\n      slt\n        /* \"#utility.yul\":1492:1544   */\n      iszero\n      tag_281\n      jumpi\n        /* \"#utility.yul\":1540:1541   */\n      0x00\n        /* \"#utility.yul\":1537:1538   */\n      dup1\n        /* \"#utility.yul\":1530:1542   */\n      revert\n        /* \"#utility.yul\":1492:1544   */\n    tag_281:\n        /* \"#utility.yul\":1563:1592   */\n      tag_282\n        /* \"#utility.yul\":1582:1591   */\n      dup5\n        /* \"#utility.yul\":1563:1592   */\n      tag_267\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":1553:1592   */\n      swap3\n      pop\n        /* \"#utility.yul\":1611:1649   */\n      tag_283\n        /* \"#utility.yul\":1645:1647   */\n      0x20\n        /* \"#utility.yul\":1634:1643   */\n      dup6\n        /* \"#utility.yul\":1630:1648   */\n      add\n        /* \"#utility.yul\":1611:1649   */\n      tag_267\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":1601:1649   */\n      swap2\n      pop\n        /* \"#utility.yul\":1696:1698   */\n      0x40\n        /* \"#utility.yul\":1685:1694   */\n      dup5\n        /* \"#utility.yul\":1681:1699   */\n      add\n        /* \"#utility.yul\":1668:1700   */\n      calldataload\n        /* \"#utility.yul\":1658:1700   */\n      swap1\n      pop\n        /* \"#utility.yul\":1378:1706   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1900:2080   */\n    tag_60:\n        /* \"#utility.yul\":1959:1965   */\n      0x00\n        /* \"#utility.yul\":2012:2014   */\n      0x20\n        /* \"#utility.yul\":2000:2009   */\n      dup3\n        /* \"#utility.yul\":1991:1998   */\n      dup5\n        /* \"#utility.yul\":1987:2010   */\n      sub\n        /* \"#utility.yul\":1983:2015   */\n      slt\n        /* \"#utility.yul\":1980:2032   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2025:2026   */\n      dup1\n        /* \"#utility.yul\":2018:2030   */\n      revert\n        /* \"#utility.yul\":1980:2032   */\n    tag_286:\n      pop\n        /* \"#utility.yul\":2051:2074   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1900:2080   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2085:2271   */\n    tag_67:\n        /* \"#utility.yul\":2144:2150   */\n      0x00\n        /* \"#utility.yul\":2197:2199   */\n      0x20\n        /* \"#utility.yul\":2185:2194   */\n      dup3\n        /* \"#utility.yul\":2176:2183   */\n      dup5\n        /* \"#utility.yul\":2172:2195   */\n      sub\n        /* \"#utility.yul\":2168:2200   */\n      slt\n        /* \"#utility.yul\":2165:2217   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":2213:2214   */\n      0x00\n        /* \"#utility.yul\":2210:2211   */\n      dup1\n        /* \"#utility.yul\":2203:2215   */\n      revert\n        /* \"#utility.yul\":2165:2217   */\n    tag_288:\n        /* \"#utility.yul\":2236:2265   */\n      tag_289\n        /* \"#utility.yul\":2255:2264   */\n      dup3\n        /* \"#utility.yul\":2236:2265   */\n      tag_267\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":2226:2265   */\n      swap4\n        /* \"#utility.yul\":2085:2271   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2484:2744   */\n    tag_94:\n        /* \"#utility.yul\":2552:2558   */\n      0x00\n        /* \"#utility.yul\":2560:2566   */\n      dup1\n        /* \"#utility.yul\":2613:2615   */\n      0x40\n        /* \"#utility.yul\":2601:2610   */\n      dup4\n        /* \"#utility.yul\":2592:2599   */\n      dup6\n        /* \"#utility.yul\":2588:2611   */\n      sub\n        /* \"#utility.yul\":2584:2616   */\n      slt\n        /* \"#utility.yul\":2581:2633   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":2629:2630   */\n      0x00\n        /* \"#utility.yul\":2626:2627   */\n      dup1\n        /* \"#utility.yul\":2619:2631   */\n      revert\n        /* \"#utility.yul\":2581:2633   */\n    tag_292:\n        /* \"#utility.yul\":2652:2681   */\n      tag_293\n        /* \"#utility.yul\":2671:2680   */\n      dup4\n        /* \"#utility.yul\":2652:2681   */\n      tag_267\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":2642:2681   */\n      swap2\n      pop\n        /* \"#utility.yul\":2700:2738   */\n      tag_294\n        /* \"#utility.yul\":2734:2736   */\n      0x20\n        /* \"#utility.yul\":2723:2732   */\n      dup5\n        /* \"#utility.yul\":2719:2737   */\n      add\n        /* \"#utility.yul\":2700:2738   */\n      tag_267\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2690:2738   */\n      swap1\n      pop\n        /* \"#utility.yul\":2484:2744   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2749:3129   */\n    tag_102:\n        /* \"#utility.yul\":2828:2829   */\n      0x01\n        /* \"#utility.yul\":2824:2836   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2871:2883   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2892:2953   */\n      tag_296\n      jumpi\n        /* \"#utility.yul\":2946:2950   */\n      0x7f\n        /* \"#utility.yul\":2938:2944   */\n      dup3\n        /* \"#utility.yul\":2934:2951   */\n      and\n        /* \"#utility.yul\":2924:2951   */\n      swap2\n      pop\n        /* \"#utility.yul\":2892:2953   */\n    tag_296:\n        /* \"#utility.yul\":2999:3001   */\n      0x20\n        /* \"#utility.yul\":2991:2997   */\n      dup3\n        /* \"#utility.yul\":2988:3002   */\n      lt\n        /* \"#utility.yul\":2968:2986   */\n      dup2\n        /* \"#utility.yul\":2965:3003   */\n      sub\n        /* \"#utility.yul\":2962:3123   */\n      tag_297\n      jumpi\n        /* \"#utility.yul\":3045:3055   */\n      0x4e487b71\n        /* \"#utility.yul\":3040:3043   */\n      0xe0\n        /* \"#utility.yul\":3036:3056   */\n      shl\n        /* \"#utility.yul\":3033:3034   */\n      0x00\n        /* \"#utility.yul\":3026:3057   */\n      mstore\n        /* \"#utility.yul\":3080:3084   */\n      0x22\n        /* \"#utility.yul\":3077:3078   */\n      0x04\n        /* \"#utility.yul\":3070:3085   */\n      mstore\n        /* \"#utility.yul\":3108:3112   */\n      0x24\n        /* \"#utility.yul\":3105:3106   */\n      0x00\n        /* \"#utility.yul\":3098:3113   */\n      revert\n        /* \"#utility.yul\":2962:3123   */\n    tag_297:\n      pop\n        /* \"#utility.yul\":2749:3129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3134:3356   */\n    tag_125:\n        /* \"#utility.yul\":3199:3208   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3220:3230   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3217:3350   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":3272:3282   */\n      0x4e487b71\n        /* \"#utility.yul\":3267:3270   */\n      0xe0\n        /* \"#utility.yul\":3263:3283   */\n      shl\n        /* \"#utility.yul\":3260:3261   */\n      0x00\n        /* \"#utility.yul\":3253:3284   */\n      mstore\n        /* \"#utility.yul\":3307:3311   */\n      0x11\n        /* \"#utility.yul\":3304:3305   */\n      0x04\n        /* \"#utility.yul\":3297:3312   */\n      mstore\n        /* \"#utility.yul\":3335:3339   */\n      0x24\n        /* \"#utility.yul\":3332:3333   */\n      0x00\n        /* \"#utility.yul\":3325:3340   */\n      revert\n\n    auxdata: 0xa2646970667358221220b4e649bf7a0a73ea1cfd3bcdedd4acb2fc1cb866b949fe489f13fbb6ba884fc364736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_139": {
									"entryPoint": null,
									"id": 139,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2143": {
									"entryPoint": null,
									"id": 2143,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_265": {
									"entryPoint": null,
									"id": 265,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_806": {
									"entryPoint": null,
									"id": 806,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_2197": {
									"entryPoint": 465,
									"id": 2197,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_795": {
									"entryPoint": null,
									"id": 795,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_624": {
									"entryPoint": 252,
									"id": 624,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_966": {
									"entryPoint": null,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_requireNotPaused_176": {
									"entryPoint": 499,
									"id": 176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 162,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_295": {
									"entryPoint": null,
									"id": 295,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_164": {
									"entryPoint": null,
									"id": 164,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 963,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1242,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 655,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 941,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 573,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5437:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:9"
															},
															"nodeType": "YulIf",
															"src": "289:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:9"
															},
															"nodeType": "YulIf",
															"src": "359:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:9",
														"type": ""
													}
												],
												"src": "146:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:9",
														"type": ""
													}
												],
												"src": "531:121:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:9"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:9"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:9"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:9",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:9",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:9"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:9"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:9",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:9"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:9"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:9",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:9"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:9"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:9"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:9"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:9"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:9"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:9"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:9"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:9"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:9",
																			"statements": []
																		},
																		"src": "1104:82:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:9"
															},
															"nodeType": "YulIf",
															"src": "748:448:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:9",
														"type": ""
													}
												],
												"src": "657:545:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:9",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:9"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:9"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:9",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:9"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:9"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:9",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:9"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:9",
														"type": ""
													}
												],
												"src": "1207:166:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:9",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:9"
															},
															"nodeType": "YulIf",
															"src": "1517:56:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:9"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:9"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:9",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:9",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:9"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:9",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:9"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:9"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:9"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:9"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:9"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:9"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:9"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:9",
																					"statements": []
																				},
																				"src": "1964:236:9"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:9",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:9",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:9"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:9"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:9"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:9",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:9"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:9"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:9",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:9"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:9"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:9"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:9"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:9"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:9"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:9"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:9"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:9",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:9"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:9"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:9"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:9"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:9",
														"type": ""
													}
												],
												"src": "1378:1352:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2767:95:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2784:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2791:3:9",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2796:10:9",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2787:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2787:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2777:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2777:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2777:31:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2824:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2827:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2817:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2817:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2817:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2848:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2851:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2841:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2841:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2841:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2735:127:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2931:358:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2941:16:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2956:1:9",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "2945:7:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2966:16:9",
															"value": {
																"name": "power_1",
																"nodeType": "YulIdentifier",
																"src": "2975:7:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "2966:5:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2991:13:9",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "2999:5:9"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "2991:4:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3055:228:9",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3100:22:9",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "3102:16:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3102:18:9"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3102:18:9"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3075:4:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3089:1:9",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "3085:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3085:6:9"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "3093:4:9"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "3081:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3081:17:9"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "3072:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3072:27:9"
																		},
																		"nodeType": "YulIf",
																		"src": "3069:53:9"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3161:29:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "3163:25:9",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "3176:5:9"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "3183:4:9"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "3172:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3172:16:9"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "3163:5:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3142:8:9"
																				},
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3152:7:9"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3138:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3138:22:9"
																		},
																		"nodeType": "YulIf",
																		"src": "3135:55:9"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3203:23:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3215:4:9"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3221:4:9"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "3211:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3211:15:9"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "3203:4:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3239:34:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nodeType": "YulIdentifier",
																					"src": "3255:7:9"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3264:8:9"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "3251:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3251:22:9"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "3239:8:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3024:8:9"
																	},
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "3034:7:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3021:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3021:21:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3043:3:9",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3017:3:9",
																"statements": []
															},
															"src": "3013:270:9"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "2895:5:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "2902:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "2915:5:9",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "2922:4:9",
														"type": ""
													}
												],
												"src": "2867:422:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3353:747:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3391:52:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3405:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3414:1:9",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3405:5:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3428:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3373:8:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3366:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3366:16:9"
															},
															"nodeType": "YulIf",
															"src": "3363:80:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3476:52:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3490:10:9",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "3499:1:9",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3490:5:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3513:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "3462:4:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3455:12:9"
															},
															"nodeType": "YulIf",
															"src": "3452:76:9"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3564:52:9",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "3578:10:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3587:1:9",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "3578:5:9"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "3601:5:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3557:59:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3562:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3632:123:9",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3667:22:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "3669:16:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3669:18:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3669:18:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "3652:8:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3662:3:9",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "3649:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3649:17:9"
																				},
																				"nodeType": "YulIf",
																				"src": "3646:43:9"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "3702:25:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "3715:8:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3725:1:9",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3711:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3711:16:9"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "3702:5:9"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "3740:5:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3625:130:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3630:1:9",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "3544:4:9"
															},
															"nodeType": "YulSwitch",
															"src": "3537:218:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3853:70:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3867:28:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3880:4:9"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3886:8:9"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "3876:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3876:19:9"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "3867:5:9"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "3908:5:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "3777:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3783:2:9",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3774:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3774:12:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "3791:8:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3801:2:9",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3788:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3788:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3770:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3770:35:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "3814:4:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3820:3:9",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3811:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3811:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "3829:8:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3839:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "3826:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3826:16:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3807:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3807:36:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3767:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3767:77:9"
															},
															"nodeType": "YulIf",
															"src": "3764:159:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3932:57:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "3974:4:9"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3980:8:9"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "3955:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3955:34:9"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nodeType": "YulTypedName",
																	"src": "3936:7:9",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nodeType": "YulTypedName",
																	"src": "3945:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4034:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4036:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4036:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4036:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4004:7:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4021:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4017:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4017:6:9"
																			},
																			{
																				"name": "base_1",
																				"nodeType": "YulIdentifier",
																				"src": "4025:6:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4013:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4013:19:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4001:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4001:32:9"
															},
															"nodeType": "YulIf",
															"src": "3998:58:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4065:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nodeType": "YulIdentifier",
																		"src": "4078:7:9"
																	},
																	{
																		"name": "base_1",
																		"nodeType": "YulIdentifier",
																		"src": "4087:6:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4074:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4074:20:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4065:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "3324:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "3330:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "3343:5:9",
														"type": ""
													}
												],
												"src": "3294:806:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4173:72:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4183:56:9",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "4213:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "4223:8:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4233:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4219:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4219:19:9"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "4192:20:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4192:47:9"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "4183:5:9"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "4144:4:9",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "4150:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "4163:5:9",
														"type": ""
													}
												],
												"src": "4105:140:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4302:116:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4312:20:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4327:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4330:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4323:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4323:9:9"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "4312:7:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4390:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4392:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4392:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4392:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "4361:1:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "4354:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4354:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "4368:1:9"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "4375:7:9"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "4384:1:9"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "4371:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4371:15:9"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "4365:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4365:22:9"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "4351:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4351:37:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4344:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4344:45:9"
															},
															"nodeType": "YulIf",
															"src": "4341:71:9"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4281:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4284:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4290:7:9",
														"type": ""
													}
												],
												"src": "4250:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4597:181:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4614:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4625:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4607:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4607:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4607:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4648:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4659:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4644:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4644:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4664:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4637:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4637:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4637:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4687:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4698:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4683:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4683:18:9"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4703:33:9",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4676:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4676:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4676:61:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4746:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4758:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4769:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4754:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4754:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4746:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4574:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4588:4:9",
														"type": ""
													}
												],
												"src": "4423:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4831:77:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4841:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4852:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4855:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4848:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4848:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4841:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4880:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4882:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4882:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4882:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4872:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4875:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:10:9"
															},
															"nodeType": "YulIf",
															"src": "4866:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4814:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4817:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4823:3:9",
														"type": ""
													}
												],
												"src": "4783:125:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5014:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5024:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5036:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5047:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5032:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5032:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5024:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5066:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5077:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5059:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5059:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5059:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4983:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4994:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5005:4:9",
														"type": ""
													}
												],
												"src": "4913:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5269:166:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5286:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5297:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5279:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5279:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5279:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5320:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5331:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5316:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5316:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5309:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5309:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5309:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5359:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5370:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5355:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5355:18:9"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5375:18:9",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5348:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5348:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5348:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5403:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5415:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5426:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5411:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5411:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5403:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5246:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5260:4:9",
														"type": ""
													}
												],
												"src": "5095:340:9"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040805180820182526004808252634d454d4560e01b60208084018290528451808601909552918452908301529060036200004e8382620002e1565b5060046200005d8282620002e1565b50506005805460ff19169055506200007533620000a2565b6200009c33620000886012600a620004c2565b620000969061c350620004da565b620000fc565b6200050a565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001585760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b6200016660008383620001d1565b80600260008282546200017a9190620004f4565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b620001db620001f3565b620001ee8383836001600160e01b038416565b505050565b60055460ff16156200023b5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016200014f565b565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200026857607f821691505b6020821081036200028957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001ee57600081815260208120601f850160051c81016020861015620002b85750805b601f850160051c820191505b81811015620002d957828155600101620002c4565b505050505050565b81516001600160401b03811115620002fd57620002fd6200023d565b62000315816200030e845462000253565b846200028f565b602080601f8311600181146200034d5760008415620003345750858301515b600019600386901b1c1916600185901b178555620002d9565b600085815260208120601f198616915b828110156200037e578886015182559484019460019091019084016200035d565b50858210156200039d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000404578160001904821115620003e857620003e8620003ad565b80851615620003f657918102915b93841c9390800290620003c8565b509250929050565b6000826200041d57506001620004bc565b816200042c57506000620004bc565b8160018114620004455760028114620004505762000470565b6001915050620004bc565b60ff841115620004645762000464620003ad565b50506001821b620004bc565b5060208310610133831016604e8410600b841016171562000495575081810a620004bc565b620004a18383620003c3565b8060001904821115620004b857620004b8620003ad565b0290505b92915050565b6000620004d360ff8416836200040c565b9392505050565b8082028115828204841417620004bc57620004bc620003ad565b80820180821115620004bc57620004bc620003ad565b610e5c806200051a6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad57806395d89b411161007157806395d89b4114610269578063a457c2d714610271578063a9059cbb14610284578063dd62ed3e14610297578063f2fde38b146102aa57600080fd5b806370a08231146101f4578063715018a61461021d57806379cc6790146102255780638456cb59146102385780638da5cb5b1461024057600080fd5b806339509351116100f457806339509351146101a65780633f4ba83a146101b957806340c10f19146101c357806342966c68146101d65780635c975abb146101e957600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017257806323b872dd14610184578063313ce56714610197575b600080fd5b6101396102bd565b6040516101469190610c8d565b60405180910390f35b61016261015d366004610cf7565b61034f565b6040519015158152602001610146565b6002545b604051908152602001610146565b610162610192366004610d21565b610369565b60405160128152602001610146565b6101626101b4366004610cf7565b61038d565b6101c16103af565b005b6101c16101d1366004610cf7565b6103c1565b6101c16101e4366004610d5d565b6103d7565b60055460ff16610162565b610176610202366004610d76565b6001600160a01b031660009081526020819052604090205490565b6101c16103e4565b6101c1610233366004610cf7565b6103f6565b6101c161040b565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610146565b61013961041b565b61016261027f366004610cf7565b61042a565b610162610292366004610cf7565b6104aa565b6101766102a5366004610d98565b6104b8565b6101c16102b8366004610d76565b6104e3565b6060600380546102cc90610dcb565b80601f01602080910402602001604051908101604052809291908181526020018280546102f890610dcb565b80156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b60003361035d818585610559565b60019150505b92915050565b60003361037785828561067e565b6103828585856106f8565b506001949350505050565b60003361035d8185856103a083836104b8565b6103aa9190610e05565b610559565b6103b76108a7565b6103bf610907565b565b6103c96108a7565b6103d38282610959565b5050565b6103e13382610a24565b50565b6103ec6108a7565b6103bf6000610b5a565b61040182338361067e565b6103d38282610a24565b6104136108a7565b6103bf610bb4565b6060600480546102cc90610dcb565b6000338161043882866104b8565b90508381101561049d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103828286868403610559565b60003361035d8185856106f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6104eb6108a7565b6001600160a01b0381166105505760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610494565b6103e181610b5a565b6001600160a01b0383166105bb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610494565b6001600160a01b03821661061c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610494565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061068a84846104b8565b905060001981146106f257818110156106e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610494565b6106f28484848403610559565b50505050565b6001600160a01b03831661075c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610494565b6001600160a01b0382166107be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610494565b6107c9838383610bf1565b6001600160a01b038316600090815260208190526040902054818110156108415760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610494565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36106f2565b6005546001600160a01b036101009091041633146103bf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610494565b61090f610bfe565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0382166109af5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610494565b6109bb60008383610bf1565b80600260008282546109cd9190610e05565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610a845760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610494565b610a9082600083610bf1565b6001600160a01b03821660009081526020819052604090205481811015610b045760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610494565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610671565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610bbc610c47565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861093c3390565b610bf9610c47565b505050565b60055460ff166103bf5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610494565b60055460ff16156103bf5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610494565b600060208083528351808285015260005b81811015610cba57858101830151858201604001528201610c9e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610cf257600080fd5b919050565b60008060408385031215610d0a57600080fd5b610d1383610cdb565b946020939093013593505050565b600080600060608486031215610d3657600080fd5b610d3f84610cdb565b9250610d4d60208501610cdb565b9150604084013590509250925092565b600060208284031215610d6f57600080fd5b5035919050565b600060208284031215610d8857600080fd5b610d9182610cdb565b9392505050565b60008060408385031215610dab57600080fd5b610db483610cdb565b9150610dc260208401610cdb565b90509250929050565b600181811c90821680610ddf57607f821691505b602082108103610dff57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561036357634e487b7160e01b600052601160045260246000fdfea2646970667358221220b4e649bf7a0a73ea1cfd3bcdedd4acb2fc1cb866b949fe489f13fbb6ba884fc364736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x4 DUP1 DUP3 MSTORE PUSH4 0x4D454D45 PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP5 ADD DUP3 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE SWAP2 DUP5 MSTORE SWAP1 DUP4 ADD MSTORE SWAP1 PUSH1 0x3 PUSH3 0x4E DUP4 DUP3 PUSH3 0x2E1 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x5D DUP3 DUP3 PUSH3 0x2E1 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP PUSH3 0x75 CALLER PUSH3 0xA2 JUMP JUMPDEST PUSH3 0x9C CALLER PUSH3 0x88 PUSH1 0x12 PUSH1 0xA PUSH3 0x4C2 JUMP JUMPDEST PUSH3 0x96 SWAP1 PUSH2 0xC350 PUSH3 0x4DA JUMP JUMPDEST PUSH3 0xFC JUMP JUMPDEST PUSH3 0x50A JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x158 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x166 PUSH1 0x0 DUP4 DUP4 PUSH3 0x1D1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x17A SWAP2 SWAP1 PUSH3 0x4F4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH3 0x1DB PUSH3 0x1F3 JUMP JUMPDEST PUSH3 0x1EE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB DUP5 AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH3 0x23B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x14F JUMP JUMPDEST JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x268 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x289 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1EE JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x2B8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2D9 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2C4 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2FD JUMPI PUSH3 0x2FD PUSH3 0x23D JUMP JUMPDEST PUSH3 0x315 DUP2 PUSH3 0x30E DUP5 SLOAD PUSH3 0x253 JUMP JUMPDEST DUP5 PUSH3 0x28F JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x34D JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x334 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2D9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x37E JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x35D JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x39D JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x404 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x3E8 JUMPI PUSH3 0x3E8 PUSH3 0x3AD JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x3F6 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x3C8 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x41D JUMPI POP PUSH1 0x1 PUSH3 0x4BC JUMP JUMPDEST DUP2 PUSH3 0x42C JUMPI POP PUSH1 0x0 PUSH3 0x4BC JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x445 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x450 JUMPI PUSH3 0x470 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x4BC JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x464 JUMPI PUSH3 0x464 PUSH3 0x3AD JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x4BC JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x495 JUMPI POP DUP2 DUP2 EXP PUSH3 0x4BC JUMP JUMPDEST PUSH3 0x4A1 DUP4 DUP4 PUSH3 0x3C3 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x4B8 JUMPI PUSH3 0x4B8 PUSH3 0x3AD JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4D3 PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x40C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x4BC JUMPI PUSH3 0x4BC PUSH3 0x3AD JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x4BC JUMPI PUSH3 0x4BC PUSH3 0x3AD JUMP JUMPDEST PUSH2 0xE5C DUP1 PUSH3 0x51A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x2BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0xD21 JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x3AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C1 PUSH2 0x1D1 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5D JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x162 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x3E4 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x40B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x162 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x42A JUMP JUMPDEST PUSH2 0x162 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x176 PUSH2 0x2A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xD98 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x2B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xD76 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2CC SWAP1 PUSH2 0xDCB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F8 SWAP1 PUSH2 0xDCB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x35D DUP2 DUP6 DUP6 PUSH2 0x559 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x377 DUP6 DUP3 DUP6 PUSH2 0x67E JUMP JUMPDEST PUSH2 0x382 DUP6 DUP6 DUP6 PUSH2 0x6F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x35D DUP2 DUP6 DUP6 PUSH2 0x3A0 DUP4 DUP4 PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH2 0x3B7 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x3BF PUSH2 0x907 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x3D3 DUP3 DUP3 PUSH2 0x959 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3E1 CALLER DUP3 PUSH2 0xA24 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3EC PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x3BF PUSH1 0x0 PUSH2 0xB5A JUMP JUMPDEST PUSH2 0x401 DUP3 CALLER DUP4 PUSH2 0x67E JUMP JUMPDEST PUSH2 0x3D3 DUP3 DUP3 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x413 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x3BF PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2CC SWAP1 PUSH2 0xDCB JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x438 DUP3 DUP7 PUSH2 0x4B8 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x382 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x559 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x35D DUP2 DUP6 DUP6 PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4EB PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x550 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0x3E1 DUP2 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68A DUP5 DUP5 PUSH2 0x4B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x6F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0x6F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x559 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0x7C9 DUP4 DUP4 DUP4 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x841 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0x90F PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0x9BB PUSH1 0x0 DUP4 DUP4 PUSH2 0xBF1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9CD SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0xA90 DUP3 PUSH1 0x0 DUP4 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x671 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBBC PUSH2 0xC47 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x93C CALLER SWAP1 JUMP JUMPDEST PUSH2 0xBF9 PUSH2 0xC47 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCBA JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC9E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD13 DUP4 PUSH2 0xCDB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3F DUP5 PUSH2 0xCDB JUMP JUMPDEST SWAP3 POP PUSH2 0xD4D PUSH1 0x20 DUP6 ADD PUSH2 0xCDB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD91 DUP3 PUSH2 0xCDB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB4 DUP4 PUSH2 0xCDB JUMP JUMPDEST SWAP2 POP PUSH2 0xDC2 PUSH1 0x20 DUP5 ADD PUSH2 0xCDB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xDDF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDFF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x363 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE6 0x49 0xBF PUSH27 0xA73EA1CFD3BCDEDD4ACB2FC1CB866B949FE489F13FBB6BA884FC3 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "306:617:8:-:0;;;370:98;;;;;;;;;-1:-1:-1;1980:113:2;;;;;;;;;;;;-1:-1:-1;;;1980:113:2;;;;;;;;;;;;;;;;;;;;;;;2046:5;:13;1980:113;2046:5;:13;:::i;:::-;-1:-1:-1;2069:7:2;:17;2079:7;2069;:17;:::i;:::-;-1:-1:-1;;996:7:1;:15;;-1:-1:-1;;996:15:1;;;-1:-1:-1;936:32:0;719:10:6;936:18:0;:32::i;:::-;417:43:8::1;423:10;443:16;3186:2:2::0;443::8::1;:16;:::i;:::-;435:24;::::0;:5:::1;:24;:::i;:::-;417:5;:43::i;:::-;306:617:::0;;2426:187:0;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;2518:6;2534:17;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;8520:535:2:-;-1:-1:-1;;;;;8603:21:2;;8595:65;;;;-1:-1:-1;;;8595:65:2;;4625:2:9;8595:65:2;;;4607:21:9;4664:2;4644:18;;;4637:30;4703:33;4683:18;;;4676:61;4754:18;;8595:65:2;;;;;;;;;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:2;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;5059:25:9;;;8952:37:2;;5032:18:9;8952:37:2;;;;;;;8520:535;;:::o;721:199:8:-;1239:19:1;:17;:19::i;:::-;868:44:8::1;895:4:::0;901:2;905:6;-1:-1:-1;;;;;868:44:8;;:::i:1;:::-;721:199:::0;;;:::o;1767:106:1:-;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:1;;5297:2:9;1828:38:1;;;5279:21:9;5336:2;5316:18;;;5309:30;-1:-1:-1;;;5355:18:9;;;5348:46;5411:18;;1828:38:1;5095:340:9;1828:38:1;1767:106::o;14:127:9:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:9;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:9;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:9;;;2580:26;2531:89;-1:-1:-1;;1335:1:9;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:9;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:9;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:9;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:9:o;2735:127::-;2796:10;2791:3;2787:20;2784:1;2777:31;2827:4;2824:1;2817:15;2851:4;2848:1;2841:15;2867:422;2956:1;2999:5;2956:1;3013:270;3034:7;3024:8;3021:21;3013:270;;;3093:4;3089:1;3085:6;3081:17;3075:4;3072:27;3069:53;;;3102:18;;:::i;:::-;3152:7;3142:8;3138:22;3135:55;;;3172:16;;;;3135:55;3251:22;;;;3211:15;;;;3013:270;;;3017:3;2867:422;;;;;:::o;3294:806::-;3343:5;3373:8;3363:80;;-1:-1:-1;3414:1:9;3428:5;;3363:80;3462:4;3452:76;;-1:-1:-1;3499:1:9;3513:5;;3452:76;3544:4;3562:1;3557:59;;;;3630:1;3625:130;;;;3537:218;;3557:59;3587:1;3578:10;;3601:5;;;3625:130;3662:3;3652:8;3649:17;3646:43;;;3669:18;;:::i;:::-;-1:-1:-1;;3725:1:9;3711:16;;3740:5;;3537:218;;3839:2;3829:8;3826:16;3820:3;3814:4;3811:13;3807:36;3801:2;3791:8;3788:16;3783:2;3777:4;3774:12;3770:35;3767:77;3764:159;;;-1:-1:-1;3876:19:9;;;3908:5;;3764:159;3955:34;3980:8;3974:4;3955:34;:::i;:::-;4025:6;4021:1;4017:6;4013:19;4004:7;4001:32;3998:58;;;4036:18;;:::i;:::-;4074:20;;-1:-1:-1;3294:806:9;;;;;:::o;4105:140::-;4163:5;4192:47;4233:4;4223:8;4219:19;4213:4;4192:47;:::i;:::-;4183:56;4105:140;-1:-1:-1;;;4105:140:9:o;4250:168::-;4323:9;;;4354;;4371:15;;;4365:22;;4351:37;4341:71;;4392:18;;:::i;4783:125::-;4848:9;;;4869:10;;;4866:36;;;4882:18;;:::i;5095:340::-;306:617:8;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_806": {
									"entryPoint": null,
									"id": 806,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_741": {
									"entryPoint": 1369,
									"id": 741,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_2197": {
									"entryPoint": 3057,
									"id": 2197,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_795": {
									"entryPoint": null,
									"id": 795,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_696": {
									"entryPoint": 2596,
									"id": 696,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_54": {
									"entryPoint": 2215,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_624": {
									"entryPoint": 2393,
									"id": 624,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_966": {
									"entryPoint": null,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_203": {
									"entryPoint": 2996,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_176": {
									"entryPoint": 3143,
									"id": 176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_187": {
									"entryPoint": 3070,
									"id": 187,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_784": {
									"entryPoint": 1662,
									"id": 784,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_111": {
									"entryPoint": 2906,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_567": {
									"entryPoint": 1784,
									"id": 567,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_unpause_219": {
									"entryPoint": 2311,
									"id": 219,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowance_362": {
									"entryPoint": 1208,
									"id": 362,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_387": {
									"entryPoint": 847,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_319": {
									"entryPoint": null,
									"id": 319,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFrom_928": {
									"entryPoint": 1014,
									"id": 928,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@burn_907": {
									"entryPoint": 983,
									"id": 907,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_295": {
									"entryPoint": null,
									"id": 295,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_490": {
									"entryPoint": 1066,
									"id": 490,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_449": {
									"entryPoint": 909,
									"id": 449,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_2176": {
									"entryPoint": 961,
									"id": 2176,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_275": {
									"entryPoint": 701,
									"id": 275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": null,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2152": {
									"entryPoint": 1035,
									"id": 2152,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_164": {
									"entryPoint": null,
									"id": 164,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_68": {
									"entryPoint": 996,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_285": {
									"entryPoint": 1051,
									"id": 285,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_305": {
									"entryPoint": null,
									"id": 305,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_420": {
									"entryPoint": 873,
									"id": 420,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_91": {
									"entryPoint": 1251,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_344": {
									"entryPoint": 1194,
									"id": 344,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_2161": {
									"entryPoint": 943,
									"id": 2161,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8774:9",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:9",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "135:427:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "155:2:9",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "149:2:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:9"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "184:2:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "166:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "166:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "210:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "200:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:9"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "254:2:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "232:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "232:34:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "284:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "279:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "344:90:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:9"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "388:2:9",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:9"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:9"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:9"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "316:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "318:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:9"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "298:3:9",
																"statements": []
															},
															"src": "294:140:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:9"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "478:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "483:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "443:42:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "443:42:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "494:62:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "537:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:9"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "546:2:9",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "553:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:54:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "104:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "115:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "126:4:9",
														"type": ""
													}
												],
												"src": "14:548:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "635:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:9"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "703:3:9",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "708:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "699:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "699:11:9"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "712:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "695:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "695:19:9"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "684:31:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "674:42:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "667:50:9"
															},
															"nodeType": "YulIf",
															"src": "664:70:9"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "595:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "606:5:9",
														"type": ""
													}
												],
												"src": "567:173:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "832:167:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "878:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "887:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "890:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "880:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "880:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "880:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "853:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "862:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "849:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "849:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "874:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:32:9"
															},
															"nodeType": "YulIf",
															"src": "842:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "903:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "932:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "913:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "913:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "951:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "978:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "989:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "974:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "974:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "961:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "961:32:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "951:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "790:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "801:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "813:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "821:6:9",
														"type": ""
													}
												],
												"src": "745:254:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1099:92:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1109:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1121:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1132:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1117:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1117:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1109:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1151:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1176:6:9"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1169:6:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1169:14:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1162:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1144:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1144:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1144:41:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1068:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1079:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1090:4:9",
														"type": ""
													}
												],
												"src": "1004:187:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:76:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1319:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1330:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1307:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1349:9:9"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1360:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1342:25:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1342:25:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1277:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1288:4:9",
														"type": ""
													}
												],
												"src": "1196:177:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1482:224:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1528:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1540:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1530:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1530:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1530:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1503:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1512:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1499:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1499:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1524:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1495:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:32:9"
															},
															"nodeType": "YulIf",
															"src": "1492:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1553:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1582:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1563:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1563:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1553:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1601:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1634:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1645:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1630:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1630:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1611:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1658:42:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1685:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1696:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1681:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:18:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1668:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:32:9"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1432:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1443:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1455:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1463:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1471:6:9",
														"type": ""
													}
												],
												"src": "1378:328:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1808:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1818:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1830:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1841:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1826:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1826:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1818:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1860:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1875:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1883:4:9",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:17:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1853:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1853:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1853:36:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1777:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1788:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1799:4:9",
														"type": ""
													}
												],
												"src": "1711:184:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1970:110:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2016:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2025:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2028:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2018:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2018:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1991:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2000:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1987:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1987:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2012:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1983:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1983:32:9"
															},
															"nodeType": "YulIf",
															"src": "1980:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2041:33:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2064:9:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2051:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:23:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2041:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1947:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1959:6:9",
														"type": ""
													}
												],
												"src": "1900:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2155:116:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2201:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2210:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2213:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2203:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2203:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2203:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2176:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2185:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2172:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2197:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2168:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2168:32:9"
															},
															"nodeType": "YulIf",
															"src": "2165:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2226:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2255:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2236:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2236:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2121:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2132:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2144:6:9",
														"type": ""
													}
												],
												"src": "2085:186:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2377:102:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2387:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2399:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2410:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2395:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2395:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2387:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2429:9:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2444:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2460:3:9",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2465:1:9",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2456:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2456:11:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2469:1:9",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2452:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2452:19:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2440:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2440:32:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2422:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2422:51:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2422:51:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2346:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2357:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2368:4:9",
														"type": ""
													}
												],
												"src": "2276:203:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2571:173:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2617:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2626:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2629:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2619:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2619:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2619:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2592:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2601:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2588:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2588:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2613:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2584:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2584:32:9"
															},
															"nodeType": "YulIf",
															"src": "2581:52:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2642:39:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2671:9:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2652:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:29:9"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2642:6:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2690:48:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2723:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2734:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2719:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2719:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2700:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:38:9"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2690:6:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2529:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2540:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2552:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2560:6:9",
														"type": ""
													}
												],
												"src": "2484:260:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2804:325:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2814:22:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2828:1:9",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2831:4:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "2824:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2824:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2814:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2845:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "2875:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2881:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2871:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "2849:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2922:31:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2924:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "2938:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2946:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "2934:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2934:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2924:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2902:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2895:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2895:26:9"
															},
															"nodeType": "YulIf",
															"src": "2892:61:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3012:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3033:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3040:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3045:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3036:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3036:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3026:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3026:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3026:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3077:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3080:4:9",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3070:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3070:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3070:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3105:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3108:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3098:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3098:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3098:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "2968:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2991:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2999:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2988:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2988:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "2965:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2965:38:9"
															},
															"nodeType": "YulIf",
															"src": "2962:161:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2784:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2793:6:9",
														"type": ""
													}
												],
												"src": "2749:380:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3182:174:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3192:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3203:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3206:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3199:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3199:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3192:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3239:111:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3260:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3267:3:9",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3272:10:9",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3263:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3263:20:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3253:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3253:31:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3253:31:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3304:1:9",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3307:4:9",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3297:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3297:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3297:15:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3332:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3335:4:9",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3325:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3325:15:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3325:15:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3223:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "3226:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3220:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3220:10:9"
															},
															"nodeType": "YulIf",
															"src": "3217:133:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3165:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3168:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3174:3:9",
														"type": ""
													}
												],
												"src": "3134:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3535:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3552:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3563:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3545:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3545:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3545:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3586:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3597:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3582:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3582:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3602:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3575:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3575:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3575:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3625:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3636:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3621:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3621:18:9"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3641:34:9",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3614:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3614:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3614:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3696:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3707:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3692:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3692:18:9"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3712:7:9",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3685:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3685:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3729:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3741:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3752:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3737:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3737:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3729:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3512:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3526:4:9",
														"type": ""
													}
												],
												"src": "3361:401:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3941:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3958:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3969:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3951:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3951:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3951:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3992:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4003:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3988:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3988:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4008:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3981:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3981:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4031:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4042:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4027:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4027:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4047:34:9",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4020:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4020:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4020:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4102:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4113:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4098:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4098:18:9"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4118:8:9",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4091:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4091:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4091:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4136:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4148:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4159:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4144:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4144:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4136:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3918:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3932:4:9",
														"type": ""
													}
												],
												"src": "3767:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4348:226:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4365:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4376:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4358:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4358:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4358:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4399:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4410:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4395:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4395:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4415:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4388:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4388:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4388:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4438:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4449:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4434:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4434:18:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4454:34:9",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4427:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4427:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4427:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4509:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4520:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4505:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4505:18:9"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4525:6:9",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4498:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4498:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4498:34:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4541:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4553:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4564:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4549:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4549:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4541:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4325:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4339:4:9",
														"type": ""
													}
												],
												"src": "4174:400:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4753:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4770:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4781:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4763:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4763:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4763:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4804:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4815:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4800:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4800:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4820:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4793:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4793:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4793:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4843:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4854:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4839:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4839:18:9"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4859:34:9",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4832:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4832:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4832:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4914:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4925:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4910:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4910:18:9"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4930:4:9",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4903:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4903:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4903:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4944:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4956:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4967:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4952:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4952:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4944:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4730:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4744:4:9",
														"type": ""
													}
												],
												"src": "4579:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5156:179:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5173:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5184:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5166:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5166:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5166:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5207:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5218:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5203:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5203:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5223:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5196:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5196:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5196:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5246:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5257:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5242:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5242:18:9"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5262:31:9",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5235:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5235:59:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5235:59:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5303:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5315:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5326:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5311:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5311:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5303:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5133:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5147:4:9",
														"type": ""
													}
												],
												"src": "4982:353:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5514:227:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5531:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5542:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5524:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5524:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5524:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5565:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5576:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5561:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5561:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5581:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5554:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5554:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5554:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5604:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5615:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5600:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5600:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5620:34:9",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5593:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5593:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5593:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5675:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5686:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5671:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5671:18:9"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5691:7:9",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5664:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5664:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5664:35:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5708:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5720:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5731:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5716:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5716:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5708:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5491:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5505:4:9",
														"type": ""
													}
												],
												"src": "5340:401:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5920:225:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5937:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5948:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5930:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5930:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5930:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5971:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5982:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5967:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5967:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5987:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5960:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5960:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5960:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6010:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6021:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6006:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6006:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6026:34:9",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5999:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5999:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5999:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6081:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6092:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6077:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6077:18:9"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6097:5:9",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6070:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6070:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6070:33:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6112:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6124:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6135:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6120:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6120:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6112:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5897:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5911:4:9",
														"type": ""
													}
												],
												"src": "5746:399:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6324:228:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6341:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6352:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6334:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6334:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6334:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6375:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6386:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6371:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6371:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6391:2:9",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6364:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6364:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6364:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6414:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6425:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6410:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6410:18:9"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6430:34:9",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6403:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6403:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6403:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6485:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6496:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6481:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6481:18:9"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6501:8:9",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6474:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6474:36:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6474:36:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6519:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6531:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6542:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6527:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6527:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6519:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6301:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6315:4:9",
														"type": ""
													}
												],
												"src": "6150:402:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6731:182:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6748:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6759:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6741:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6741:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6741:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6782:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6793:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6778:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6778:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6798:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6771:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6771:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6771:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6821:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6832:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6817:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6817:18:9"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6837:34:9",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6810:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6810:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6810:62:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6881:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6893:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6904:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6889:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6889:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6881:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6708:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6722:4:9",
														"type": ""
													}
												],
												"src": "6557:356:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7092:181:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7109:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7120:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7102:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7102:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7102:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7143:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7154:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7139:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7139:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7159:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7132:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7132:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7132:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7182:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7193:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7178:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7178:18:9"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7198:33:9",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7171:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7171:61:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7171:61:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7241:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7253:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7264:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7249:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7249:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7241:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7069:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7083:4:9",
														"type": ""
													}
												],
												"src": "6918:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7452:223:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7469:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7480:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7462:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7462:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7462:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7503:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7514:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7499:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7499:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7519:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7492:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7492:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7492:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7542:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7553:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7538:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7538:18:9"
																	},
																	{
																		"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7558:34:9",
																		"type": "",
																		"value": "ERC20: burn from the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7531:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7531:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7531:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7613:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7624:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7609:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7609:18:9"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7629:3:9",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7602:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7602:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7602:31:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7642:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7654:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7665:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7650:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7650:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7642:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7429:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7443:4:9",
														"type": ""
													}
												],
												"src": "7278:397:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7854:224:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7871:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7882:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7864:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7864:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7864:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7905:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7916:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7901:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7901:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7921:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7894:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7894:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7894:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7944:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7955:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7940:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7940:18:9"
																	},
																	{
																		"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7960:34:9",
																		"type": "",
																		"value": "ERC20: burn amount exceeds balan"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7933:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7933:62:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7933:62:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8015:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8026:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8011:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8011:18:9"
																	},
																	{
																		"hexValue": "6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8031:4:9",
																		"type": "",
																		"value": "ce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8004:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8004:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8004:32:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8045:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8057:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8068:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8053:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8053:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8045:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7831:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7845:4:9",
														"type": ""
													}
												],
												"src": "7680:398:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8257:170:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8274:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8285:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8267:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8267:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8267:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8308:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8319:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8304:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8304:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8324:2:9",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8297:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8297:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8297:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8347:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8358:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8343:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8343:18:9"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8363:22:9",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8336:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8336:50:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8336:50:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8395:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8407:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8418:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8403:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8403:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8395:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8234:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8248:4:9",
														"type": ""
													}
												],
												"src": "8083:344:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8606:166:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8623:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8634:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8616:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8616:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8616:21:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8657:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8668:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8653:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8653:18:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8673:2:9",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8646:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8646:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8646:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8696:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8707:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8692:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8692:18:9"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8712:18:9",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8685:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8685:46:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8685:46:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8740:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8752:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8763:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8748:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8748:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8740:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8583:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8597:4:9",
														"type": ""
													}
												],
												"src": "8432:340:9"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c806370a08231116100ad57806395d89b411161007157806395d89b4114610269578063a457c2d714610271578063a9059cbb14610284578063dd62ed3e14610297578063f2fde38b146102aa57600080fd5b806370a08231146101f4578063715018a61461021d57806379cc6790146102255780638456cb59146102385780638da5cb5b1461024057600080fd5b806339509351116100f457806339509351146101a65780633f4ba83a146101b957806340c10f19146101c357806342966c68146101d65780635c975abb146101e957600080fd5b806306fdde0314610131578063095ea7b31461014f57806318160ddd1461017257806323b872dd14610184578063313ce56714610197575b600080fd5b6101396102bd565b6040516101469190610c8d565b60405180910390f35b61016261015d366004610cf7565b61034f565b6040519015158152602001610146565b6002545b604051908152602001610146565b610162610192366004610d21565b610369565b60405160128152602001610146565b6101626101b4366004610cf7565b61038d565b6101c16103af565b005b6101c16101d1366004610cf7565b6103c1565b6101c16101e4366004610d5d565b6103d7565b60055460ff16610162565b610176610202366004610d76565b6001600160a01b031660009081526020819052604090205490565b6101c16103e4565b6101c1610233366004610cf7565b6103f6565b6101c161040b565b60055461010090046001600160a01b03166040516001600160a01b039091168152602001610146565b61013961041b565b61016261027f366004610cf7565b61042a565b610162610292366004610cf7565b6104aa565b6101766102a5366004610d98565b6104b8565b6101c16102b8366004610d76565b6104e3565b6060600380546102cc90610dcb565b80601f01602080910402602001604051908101604052809291908181526020018280546102f890610dcb565b80156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b60003361035d818585610559565b60019150505b92915050565b60003361037785828561067e565b6103828585856106f8565b506001949350505050565b60003361035d8185856103a083836104b8565b6103aa9190610e05565b610559565b6103b76108a7565b6103bf610907565b565b6103c96108a7565b6103d38282610959565b5050565b6103e13382610a24565b50565b6103ec6108a7565b6103bf6000610b5a565b61040182338361067e565b6103d38282610a24565b6104136108a7565b6103bf610bb4565b6060600480546102cc90610dcb565b6000338161043882866104b8565b90508381101561049d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103828286868403610559565b60003361035d8185856106f8565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6104eb6108a7565b6001600160a01b0381166105505760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610494565b6103e181610b5a565b6001600160a01b0383166105bb5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610494565b6001600160a01b03821661061c5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610494565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061068a84846104b8565b905060001981146106f257818110156106e55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610494565b6106f28484848403610559565b50505050565b6001600160a01b03831661075c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610494565b6001600160a01b0382166107be5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610494565b6107c9838383610bf1565b6001600160a01b038316600090815260208190526040902054818110156108415760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610494565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36106f2565b6005546001600160a01b036101009091041633146103bf5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610494565b61090f610bfe565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b0382166109af5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610494565b6109bb60008383610bf1565b80600260008282546109cd9190610e05565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610a845760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610494565b610a9082600083610bf1565b6001600160a01b03821660009081526020819052604090205481811015610b045760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610494565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610671565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610bbc610c47565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861093c3390565b610bf9610c47565b505050565b60055460ff166103bf5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610494565b60055460ff16156103bf5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610494565b600060208083528351808285015260005b81811015610cba57858101830151858201604001528201610c9e565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610cf257600080fd5b919050565b60008060408385031215610d0a57600080fd5b610d1383610cdb565b946020939093013593505050565b600080600060608486031215610d3657600080fd5b610d3f84610cdb565b9250610d4d60208501610cdb565b9150604084013590509250925092565b600060208284031215610d6f57600080fd5b5035919050565b600060208284031215610d8857600080fd5b610d9182610cdb565b9392505050565b60008060408385031215610dab57600080fd5b610db483610cdb565b9150610dc260208401610cdb565b90509250929050565b600181811c90821680610ddf57607f821691505b602082108103610dff57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561036357634e487b7160e01b600052601160045260246000fdfea2646970667358221220b4e649bf7a0a73ea1cfd3bcdedd4acb2fc1cb866b949fe489f13fbb6ba884fc364736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x240 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x39509351 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x184 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x2BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0xC8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH2 0x15D CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x192 CALLDATASIZE PUSH1 0x4 PUSH2 0xD21 JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x162 PUSH2 0x1B4 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x38D JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x3AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C1 PUSH2 0x1D1 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x3C1 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0xD5D JUMP JUMPDEST PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x162 JUMP JUMPDEST PUSH2 0x176 PUSH2 0x202 CALLDATASIZE PUSH1 0x4 PUSH2 0xD76 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x3E4 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x233 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x40B JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x146 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x41B JUMP JUMPDEST PUSH2 0x162 PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x42A JUMP JUMPDEST PUSH2 0x162 PUSH2 0x292 CALLDATASIZE PUSH1 0x4 PUSH2 0xCF7 JUMP JUMPDEST PUSH2 0x4AA JUMP JUMPDEST PUSH2 0x176 PUSH2 0x2A5 CALLDATASIZE PUSH1 0x4 PUSH2 0xD98 JUMP JUMPDEST PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x2B8 CALLDATASIZE PUSH1 0x4 PUSH2 0xD76 JUMP JUMPDEST PUSH2 0x4E3 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x2CC SWAP1 PUSH2 0xDCB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2F8 SWAP1 PUSH2 0xDCB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x35D DUP2 DUP6 DUP6 PUSH2 0x559 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x377 DUP6 DUP3 DUP6 PUSH2 0x67E JUMP JUMPDEST PUSH2 0x382 DUP6 DUP6 DUP6 PUSH2 0x6F8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x35D DUP2 DUP6 DUP6 PUSH2 0x3A0 DUP4 DUP4 PUSH2 0x4B8 JUMP JUMPDEST PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST PUSH2 0x559 JUMP JUMPDEST PUSH2 0x3B7 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x3BF PUSH2 0x907 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3C9 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x3D3 DUP3 DUP3 PUSH2 0x959 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3E1 CALLER DUP3 PUSH2 0xA24 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x3EC PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x3BF PUSH1 0x0 PUSH2 0xB5A JUMP JUMPDEST PUSH2 0x401 DUP3 CALLER DUP4 PUSH2 0x67E JUMP JUMPDEST PUSH2 0x3D3 DUP3 DUP3 PUSH2 0xA24 JUMP JUMPDEST PUSH2 0x413 PUSH2 0x8A7 JUMP JUMPDEST PUSH2 0x3BF PUSH2 0xBB4 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x2CC SWAP1 PUSH2 0xDCB JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x438 DUP3 DUP7 PUSH2 0x4B8 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x49D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x382 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x559 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x35D DUP2 DUP6 DUP6 PUSH2 0x6F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x4EB PUSH2 0x8A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x550 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0x3E1 DUP2 PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x61C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x68A DUP5 DUP5 PUSH2 0x4B8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x6F2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0x6F2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x559 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x75C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0x7C9 DUP4 DUP4 DUP4 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x841 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP8 DUP8 SUB SWAP1 SSTORE SWAP4 DUP8 AND DUP1 DUP4 MSTORE SWAP2 DUP5 SWAP1 KECCAK256 DUP1 SLOAD DUP8 ADD SWAP1 SSTORE SWAP3 MLOAD DUP6 DUP2 MSTORE SWAP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0x90F PUSH2 0xBFE JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0x9BB PUSH1 0x0 DUP4 DUP4 PUSH2 0xBF1 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9CD SWAP2 SWAP1 PUSH2 0xE05 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP7 ADD SWAP1 SSTORE MLOAD DUP5 DUP2 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA84 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH2 0xA90 DUP3 PUSH1 0x0 DUP4 PUSH2 0xBF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xB04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP7 DUP7 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP8 SWAP1 SUB SWAP1 SSTORE MLOAD DUP6 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 ADD PUSH2 0x671 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBBC PUSH2 0xC47 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x93C CALLER SWAP1 JUMP JUMPDEST PUSH2 0xBF9 PUSH2 0xC47 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x3BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x494 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xCBA JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xC9E JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xCF2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD13 DUP4 PUSH2 0xCDB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD36 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3F DUP5 PUSH2 0xCDB JUMP JUMPDEST SWAP3 POP PUSH2 0xD4D PUSH1 0x20 DUP6 ADD PUSH2 0xCDB JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD91 DUP3 PUSH2 0xCDB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDB4 DUP4 PUSH2 0xCDB JUMP JUMPDEST SWAP2 POP PUSH2 0xDC2 PUSH1 0x20 DUP5 ADD PUSH2 0xCDB JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xDDF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xDFF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x363 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 0xE6 0x49 0xBF PUSH27 0xA73EA1CFD3BCDEDD4ACB2FC1CB866B949FE489F13FBB6BA884FC3 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "306:617:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:9;;1162:22;1144:41;;1132:2;1117:18;4444:197:2;1004:187:9;3255:106:2;3342:12;;3255:106;;;1342:25:9;;;1330:2;1315:18;3255:106:2;1196:177:9;5203:256:2;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;1853:36:9;;1841:2;1826:18;3104:91:2;1711:184:9;5854:234:2;;;;;;:::i;:::-;;:::i;545:65:8:-;;;:::i;:::-;;618:95;;;;;;:::i;:::-;;:::i;578:89:4:-;;;;;;:::i;:::-;;:::i;1615:84:1:-;1685:7;;;;1615:84;;3419:125:2;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:2;3493:7;3519:18;;;;;;;;;;;;3419:125;1824:101:0;;;:::i;973:161:4:-;;;;;;:::i;:::-;;:::i;476:61:8:-;;;:::i;1201:85:0:-;1273:6;;;;;-1:-1:-1;;;;;1273:6:0;1201:85;;-1:-1:-1;;;;;2440:32:9;;;2422:51;;2410:2;2395:18;1201:85:0;2276:203:9;2369:102:2;;;:::i;6575:427::-;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;3987:149::-;;;;;;:::i;:::-;;:::i;2074:198:0:-;;;;;;:::i;:::-;;:::i;2158:98:2:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:6;4581:32:2;719:10:6;4597:7:2;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;5203:256::-;5300:4;719:10:6;5356:38:2;5372:4;719:10:6;5387:6:2;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:2;;5203:256;-1:-1:-1;;;;5203:256:2:o;5854:234::-;5942:4;719:10:6;5996:64:2;719:10:6;6012:7:2;6049:10;6021:25;719:10:6;6012:7:2;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;545:65:8:-;1094:13:0;:11;:13::i;:::-;592:10:8::1;:8;:10::i;:::-;545:65::o:0;618:95::-;1094:13:0;:11;:13::i;:::-;688:17:8::1;694:2;698:6;688:5;:17::i;:::-;618:95:::0;;:::o;578:89:4:-;633:27;719:10:6;653:6:4;633:5;:27::i;:::-;578:89;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;973:161:4:-:0;1049:46;1065:7;719:10:6;1088:6:4;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;476:61:8:-;1094:13:0;:11;:13::i;:::-;521:8:8::1;:6;:8::i;2369:102:2:-:0;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:6;6668:4:2;6749:25;719:10:6;6766:7:2;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:2;;3563:2:9;6784:85:2;;;3545:21:9;3602:2;3582:18;;;3575:30;3641:34;3621:18;;;3614:62;-1:-1:-1;;;3692:18:9;;;3685:35;3737:19;;6784:85:2;;;;;;;;;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:6;3873:28:2;719:10:6;3890:2:2;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:2;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;3969:2:9;2154:73:0::1;::::0;::::1;3951:21:9::0;4008:2;3988:18;;;3981:30;4047:34;4027:18;;;4020:62;-1:-1:-1;;;4098:18:9;;;4091:36;4144:19;;2154:73:0::1;3767:402:9::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;10457:340:2:-:0;-1:-1:-1;;;;;10558:19:2;;10550:68;;;;-1:-1:-1;;;10550:68:2;;4376:2:9;10550:68:2;;;4358:21:9;4415:2;4395:18;;;4388:30;4454:34;4434:18;;;4427:62;-1:-1:-1;;;4505:18:9;;;4498:34;4549:19;;10550:68:2;4174:400:9;10550:68:2;-1:-1:-1;;;;;10636:21:2;;10628:68;;;;-1:-1:-1;;;10628:68:2;;4781:2:9;10628:68:2;;;4763:21:9;4820:2;4800:18;;;4793:30;4859:34;4839:18;;;4832:62;-1:-1:-1;;;4910:18:9;;;4903:32;4952:19;;10628:68:2;4579:398:9;10628:68:2;-1:-1:-1;;;;;10707:18:2;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1342:25:9;;;10758:32:2;;1315:18:9;10758:32:2;;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:2;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:2;;5184:2:9;11297:68:2;;;5166:21:9;5223:2;5203:18;;;5196:30;5262:31;5242:18;;;5235:59;5311:18;;11297:68:2;4982:353:9;11297:68:2;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;7456:788::-;-1:-1:-1;;;;;7552:18:2;;7544:68;;;;-1:-1:-1;;;7544:68:2;;5542:2:9;7544:68:2;;;5524:21:9;5581:2;5561:18;;;5554:30;5620:34;5600:18;;;5593:62;-1:-1:-1;;;5671:18:9;;;5664:35;5716:19;;7544:68:2;5340:401:9;7544:68:2;-1:-1:-1;;;;;7630:16:2;;7622:64;;;;-1:-1:-1;;;7622:64:2;;5948:2:9;7622:64:2;;;5930:21:9;5987:2;5967:18;;;5960:30;6026:34;6006:18;;;5999:62;-1:-1:-1;;;6077:18:9;;;6070:33;6120:19;;7622:64:2;5746:399:9;7622:64:2;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;-1:-1:-1;;;;;7768:15:2;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:2;;6352:2:9;7793:72:2;;;6334:21:9;6391:2;6371:18;;;6364:30;6430:34;6410:18;;;6403:62;-1:-1:-1;;;6481:18:9;;;6474:36;6527:19;;7793:72:2;6150:402:9;7793:72:2;-1:-1:-1;;;;;7899:15:2;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1342:25:9;;;8114:13:2;;8163:26;;1315:18:9;8163:26:2;;;;;;;8200:37;9375:659;1359:130:0;1273:6;;-1:-1:-1;;;;;1273:6:0;;;;;719:10:6;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;6759:2:9;1414:68:0;;;6741:21:9;;;6778:18;;;6771:30;6837:34;6817:18;;;6810:62;6889:18;;1414:68:0;6557:356:9;2433:117:1;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:1::1;::::0;;2521:22:::1;719:10:6::0;2530:12:1::1;2521:22;::::0;-1:-1:-1;;;;;2440:32:9;;;2422:51;;2410:2;2395:18;2521:22:1::1;;;;;;;2433:117::o:0;8520:535:2:-;-1:-1:-1;;;;;8603:21:2;;8595:65;;;;-1:-1:-1;;;8595:65:2;;7120:2:9;8595:65:2;;;7102:21:9;7159:2;7139:18;;;7132:30;7198:33;7178:18;;;7171:61;7249:18;;8595:65:2;6918:355:9;8595:65:2;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:2;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1342:25:9;;;8952:37:2;;1315:18:9;8952:37:2;;;;;;;618:95:8;;:::o;9375:659:2:-;-1:-1:-1;;;;;9458:21:2;;9450:67;;;;-1:-1:-1;;;9450:67:2;;7480:2:9;9450:67:2;;;7462:21:9;7519:2;7499:18;;;7492:30;7558:34;7538:18;;;7531:62;-1:-1:-1;;;7609:18:9;;;7602:31;7650:19;;9450:67:2;7278:397:9;9450:67:2;9528:49;9549:7;9566:1;9570:6;9528:20;:49::i;:::-;-1:-1:-1;;;;;9613:18:2;;9588:22;9613:18;;;;;;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:2;;7882:2:9;9641:71:2;;;7864:21:9;7921:2;7901:18;;;7894:30;7960:34;7940:18;;;7933:62;-1:-1:-1;;;8011:18:9;;;8004:32;8053:19;;9641:71:2;7680:398:9;9641:71:2;-1:-1:-1;;;;;9746:18:2;;:9;:18;;;;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;1342:25:9;;;9746:9:2;;:18;9931:37;;1315:18:9;9931:37:2;1196:177:9;2426:187:0;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;2518:6;2534:17;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;2186:115:1:-;1239:19;:17;:19::i;:::-;2245:7:::1;:14:::0;;-1:-1:-1;;2245:14:1::1;2255:4;2245:14;::::0;;2274:20:::1;2281:12;719:10:6::0;;640:96;721:199:8;1239:19:1;:17;:19::i;:::-;9440:594:2;9375:659;;:::o;1945:106:1:-;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:1;;8285:2:9;2003:41:1;;;8267:21:9;8324:2;8304:18;;;8297:30;-1:-1:-1;;;8343:18:9;;;8336:50;8403:18;;2003:41:1;8083:344:9;1767:106:1;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:1;;8634:2:9;1828:38:1;;;8616:21:9;8673:2;8653:18;;;8646:30;-1:-1:-1;;;8692:18:9;;;8685:46;8748:18;;1828:38:1;8432:340:9;14:548;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:9;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:9:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;1900:180::-;1959:6;2012:2;2000:9;1991:7;1987:23;1983:32;1980:52;;;2028:1;2025;2018:12;1980:52;-1:-1:-1;2051:23:9;;1900:180;-1:-1:-1;1900:180:9:o;2085:186::-;2144:6;2197:2;2185:9;2176:7;2172:23;2168:32;2165:52;;;2213:1;2210;2203:12;2165:52;2236:29;2255:9;2236:29;:::i;:::-;2226:39;2085:186;-1:-1:-1;;;2085:186:9:o;2484:260::-;2552:6;2560;2613:2;2601:9;2592:7;2588:23;2584:32;2581:52;;;2629:1;2626;2619:12;2581:52;2652:29;2671:9;2652:29;:::i;:::-;2642:39;;2700:38;2734:2;2723:9;2719:18;2700:38;:::i;:::-;2690:48;;2484:260;;;;;:::o;2749:380::-;2828:1;2824:12;;;;2871;;;2892:61;;2946:4;2938:6;2934:17;2924:27;;2892:61;2999:2;2991:6;2988:14;2968:18;2965:38;2962:161;;3045:10;3040:3;3036:20;3033:1;3026:31;3080:4;3077:1;3070:15;3108:4;3105:1;3098:15;2962:161;;2749:380;;;:::o;3134:222::-;3199:9;;;3220:10;;;3217:133;;;3272:10;3267:3;3263:20;3260:1;3253:31;3307:4;3304:1;3297:15;3335:4;3332:1;3325:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "735200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24652",
								"balanceOf(address)": "2563",
								"burn(uint256)": "53038",
								"burnFrom(address,uint256)": "infinite",
								"decimals()": "289",
								"decreaseAllowance(address,uint256)": "26995",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2441",
								"pause()": "infinite",
								"paused()": "2415",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2349",
								"transfer(address,uint256)": "53305",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "28479",
								"unpause()": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 306,
									"end": 923,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 306,
									"end": 923,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 306,
									"end": 923,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 370,
									"end": 468,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 370,
									"end": 468,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 370,
									"end": 468,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 370,
									"end": 468,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 370,
									"end": 468,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 370,
									"end": 468,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 468,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 370,
									"end": 468,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 370,
									"end": 468,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 370,
									"end": 468,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4D454D45"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1980,
									"end": 2093,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2051,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2046,
									"end": 2059,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 2046,
									"end": 2059,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2079,
									"end": 2086,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2076,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 2069,
									"end": 2086,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 2069,
									"end": 2086,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 417,
									"end": 460,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 423,
									"end": 433,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 443,
									"end": 459,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3186,
									"end": 3188,
									"name": "PUSH",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 443,
									"end": 445,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "A"
								},
								{
									"begin": 443,
									"end": 459,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 443,
									"end": 459,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 443,
									"end": 459,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 443,
									"end": 459,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 435,
									"end": 459,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 435,
									"end": 459,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 435,
									"end": 440,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "C350"
								},
								{
									"begin": 435,
									"end": 459,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 435,
									"end": 459,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 435,
									"end": 459,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 435,
									"end": 459,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 417,
									"end": 422,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 417,
									"end": 460,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 417,
									"end": 460,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 417,
									"end": 460,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 306,
									"end": 923,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "64"
								},
								{
									"begin": 306,
									"end": 923,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8603,
									"end": 8624,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8603,
									"end": 8624,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 4625,
									"end": 4627,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 4607,
									"end": 4628,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4664,
									"end": 4666,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4644,
									"end": 4662,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4644,
									"end": 4662,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4644,
									"end": 4662,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4637,
									"end": 4667,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4703,
									"end": 4736,
									"name": "PUSH",
									"source": 9,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 4683,
									"end": 4701,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 4683,
									"end": 4701,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4683,
									"end": 4701,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4676,
									"end": 4737,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4754,
									"end": 4772,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 4754,
									"end": 4772,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "tag",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 8595,
									"end": 8660,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8671,
									"end": 8720,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 8700,
									"end": 8701,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8704,
									"end": 8711,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8713,
									"end": 8719,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8671,
									"end": 8691,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 8671,
									"end": 8720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8671,
									"end": 8720,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 8671,
									"end": 8720,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8747,
									"end": 8753,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8743,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 8731,
									"end": 8743,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 8731,
									"end": 8753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8731,
									"end": 8753,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8908,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8917,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8899,
									"end": 8927,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5059,
									"end": 5084,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5059,
									"end": 5084,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5059,
									"end": 5084,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5032,
									"end": 5050,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 8952,
									"end": 8989,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8520,
									"end": 9055,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 8520,
									"end": 9055,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 721,
									"end": 920,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 721,
									"end": 920,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1239,
									"end": 1258,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1239,
									"end": 1256,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1239,
									"end": 1258,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1239,
									"end": 1258,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1239,
									"end": 1258,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 868,
									"end": 912,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 895,
									"end": 899,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 901,
									"end": 903,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 905,
									"end": 911,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 868,
									"end": 912,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 868,
									"end": 912,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 868,
									"end": 912,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 868,
									"end": 912,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 868,
									"end": 912,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 721,
									"end": 920,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 721,
									"end": 920,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 721,
									"end": 920,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 721,
									"end": 920,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1767,
									"end": 1873,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1767,
									"end": 1873,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 1685,
									"end": 1692,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1836,
									"end": 1845,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 5297,
									"end": 5299,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5279,
									"end": 5300,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5336,
									"end": 5338,
									"name": "PUSH",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 5316,
									"end": 5334,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 5316,
									"end": 5334,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5316,
									"end": 5334,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5309,
									"end": 5339,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "14185D5CD8589B194E881C185D5CD959"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "82"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5355,
									"end": 5373,
									"name": "PUSH",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 5355,
									"end": 5373,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5355,
									"end": 5373,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5348,
									"end": 5394,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 5411,
									"end": 5429,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 5411,
									"end": 5429,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 5095,
									"end": 5435,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 1828,
									"end": 1866,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1767,
									"end": 1873,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 9,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2735,
									"end": 2862,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 2735,
									"end": 2862,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2796,
									"end": 2806,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B71"
								},
								{
									"begin": 2791,
									"end": 2794,
									"name": "PUSH",
									"source": 9,
									"value": "E0"
								},
								{
									"begin": 2787,
									"end": 2807,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2784,
									"end": 2785,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2777,
									"end": 2808,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2827,
									"end": 2831,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 2824,
									"end": 2825,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2817,
									"end": 2832,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2851,
									"end": 2855,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2848,
									"end": 2849,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2841,
									"end": 2856,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2956,
									"end": 2957,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2999,
									"end": 3004,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2956,
									"end": 2957,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "tag",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3034,
									"end": 3041,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3024,
									"end": 3032,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3021,
									"end": 3042,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3093,
									"end": 3097,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3089,
									"end": 3090,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3085,
									"end": 3091,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 3081,
									"end": 3098,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 3075,
									"end": 3079,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3072,
									"end": 3099,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3069,
									"end": 3122,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3069,
									"end": 3122,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 3069,
									"end": 3122,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3102,
									"end": 3120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "tag",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 3102,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3152,
									"end": 3159,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3142,
									"end": 3150,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3138,
									"end": 3160,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3172,
									"end": 3188,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "tag",
									"source": 9,
									"value": "98"
								},
								{
									"begin": 3135,
									"end": 3190,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 3251,
									"end": 3273,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 3211,
									"end": 3226,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "93"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 3013,
									"end": 3283,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3017,
									"end": 3020,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2867,
									"end": 3289,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2867,
									"end": 3289,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3343,
									"end": 3348,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3373,
									"end": 3381,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3414,
									"end": 3415,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3428,
									"end": 3433,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 3428,
									"end": 3433,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "tag",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 3363,
									"end": 3443,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3462,
									"end": 3466,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3499,
									"end": 3500,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3513,
									"end": 3518,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 3513,
									"end": 3518,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 3452,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3544,
									"end": 3548,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3562,
									"end": 3563,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3630,
									"end": 3631,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "tag",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 3557,
									"end": 3616,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3587,
									"end": 3588,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3578,
									"end": 3588,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3578,
									"end": 3588,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3601,
									"end": 3606,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3601,
									"end": 3606,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 3601,
									"end": 3606,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "tag",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 3625,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3662,
									"end": 3665,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 3652,
									"end": 3660,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3649,
									"end": 3666,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3646,
									"end": 3689,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3646,
									"end": 3689,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 3646,
									"end": 3689,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3669,
									"end": 3687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "tag",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 3669,
									"end": 3687,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3725,
									"end": 3726,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3711,
									"end": 3727,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3711,
									"end": 3727,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 3740,
									"end": 3745,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 3740,
									"end": 3745,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3537,
									"end": 3755,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3839,
									"end": 3841,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3829,
									"end": 3837,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3826,
									"end": 3842,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3820,
									"end": 3823,
									"name": "PUSH",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 3814,
									"end": 3818,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3811,
									"end": 3824,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3807,
									"end": 3843,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3801,
									"end": 3803,
									"name": "PUSH",
									"source": 9,
									"value": "4E"
								},
								{
									"begin": 3791,
									"end": 3799,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3788,
									"end": 3804,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3783,
									"end": 3785,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 3777,
									"end": 3781,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3774,
									"end": 3786,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3770,
									"end": 3805,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3767,
									"end": 3844,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3876,
									"end": 3895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3876,
									"end": 3895,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3876,
									"end": 3895,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 3908,
									"end": 3913,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 3908,
									"end": 3913,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "tag",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 3764,
									"end": 3923,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 3980,
									"end": 3988,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3974,
									"end": 3978,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 3955,
									"end": 3989,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "tag",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 3955,
									"end": 3989,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4025,
									"end": 4031,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4021,
									"end": 4022,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4017,
									"end": 4023,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4013,
									"end": 4032,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 4004,
									"end": 4011,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4001,
									"end": 4033,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3998,
									"end": 4056,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3998,
									"end": 4056,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 3998,
									"end": 4056,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 4036,
									"end": 4054,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "tag",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 4036,
									"end": 4054,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4074,
									"end": 4094,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4074,
									"end": 4094,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "tag",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3294,
									"end": 4100,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3294,
									"end": 4100,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4105,
									"end": 4245,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 4105,
									"end": 4245,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4163,
									"end": 4168,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4192,
									"end": 4239,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 4233,
									"end": 4237,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 4223,
									"end": 4231,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4219,
									"end": 4238,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4213,
									"end": 4217,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4192,
									"end": 4239,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 4192,
									"end": 4239,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4192,
									"end": 4239,
									"name": "tag",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 4192,
									"end": 4239,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4183,
									"end": 4239,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4105,
									"end": 4245,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4105,
									"end": 4245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4250,
									"end": 4418,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 4250,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4323,
									"end": 4332,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4323,
									"end": 4332,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4323,
									"end": 4332,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4354,
									"end": 4363,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4354,
									"end": 4363,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4371,
									"end": 4386,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4371,
									"end": 4386,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4371,
									"end": 4386,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 4365,
									"end": 4387,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4365,
									"end": 4387,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 4351,
									"end": 4388,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4341,
									"end": 4412,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 4341,
									"end": 4412,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4392,
									"end": 4410,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 4392,
									"end": 4410,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 4392,
									"end": 4410,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4783,
									"end": 4908,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 4783,
									"end": 4908,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4848,
									"end": 4857,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4848,
									"end": 4857,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4848,
									"end": 4857,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4869,
									"end": 4879,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4869,
									"end": 4879,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4869,
									"end": 4879,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 4866,
									"end": 4902,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4866,
									"end": 4902,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 4866,
									"end": 4902,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4882,
									"end": 4900,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 4882,
									"end": 4900,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 4882,
									"end": 4900,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5095,
									"end": 5435,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 5095,
									"end": 5435,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 306,
									"end": 923,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 923,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 306,
									"end": 923,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 306,
									"end": 923,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 923,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 306,
									"end": 923,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 306,
									"end": 923,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b4e649bf7a0a73ea1cfd3bcdedd4acb2fc1cb866b949fe489f13fbb6ba884fc364736f6c63430008130033",
									".code": [
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "A457C2D7"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "79CC6790"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "8456CB59"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "39509351"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "39509351"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "3F4BA83A"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "40C10F19"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "42966C68"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "5C975ABB"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 306,
											"end": 923,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 306,
											"end": 923,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1169,
											"end": 1183,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1162,
											"end": 1184,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1185,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1132,
											"end": 1134,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1135,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1004,
											"end": 1191,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3342,
											"end": 3354,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1853,
											"end": 1889,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1841,
											"end": 1843,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1826,
											"end": 1844,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3104,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1711,
											"end": 1895,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5854,
											"end": 6088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 610,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 545,
											"end": 610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 545,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 545,
											"end": 610,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 545,
											"end": 610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 545,
											"end": 610,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 545,
											"end": 610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 545,
											"end": 610,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 618,
											"end": 713,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 618,
											"end": 713,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 618,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 618,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 618,
											"end": 713,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 618,
											"end": 713,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 618,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 618,
											"end": 713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 618,
											"end": 713,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 618,
											"end": 713,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 618,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 618,
											"end": 713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 578,
											"end": 667,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 578,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 578,
											"end": 667,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 578,
											"end": 667,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 578,
											"end": 667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3419,
											"end": 3544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3519,
											"end": 3537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3419,
											"end": 3544,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 973,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 973,
											"end": 1134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 476,
											"end": 537,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 476,
											"end": 537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 476,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 476,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 476,
											"end": 537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2410,
											"end": 2412,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2276,
											"end": 2479,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2369,
											"end": 2471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6575,
											"end": 7002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3740,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2212,
											"end": 2225,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2244,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2237,
											"end": 2249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2249,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4597,
											"end": 4604,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4606,
											"end": 4612,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4581,
											"end": 4613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4581,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4630,
											"end": 4634,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4623,
											"end": 4634,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4444,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5300,
											"end": 5304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5372,
											"end": 5376,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5387,
											"end": 5393,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5356,
											"end": 5394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 5356,
											"end": 5394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5414,
											"end": 5418,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5420,
											"end": 5422,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5424,
											"end": 5430,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 5404,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5404,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5448,
											"end": 5452,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5459,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5203,
											"end": 5459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 5854,
											"end": 6088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5996,
											"end": 6060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6049,
											"end": 6059,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6012,
											"end": 6019,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 6021,
											"end": 6046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 6021,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 6021,
											"end": 6059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 6021,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5996,
											"end": 6004,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 5996,
											"end": 6060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 610,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 545,
											"end": 610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 592,
											"end": 602,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 592,
											"end": 600,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 592,
											"end": 602,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 592,
											"end": 602,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 592,
											"end": 602,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 545,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 618,
											"end": 713,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 618,
											"end": 713,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 688,
											"end": 705,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 694,
											"end": 696,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 698,
											"end": 704,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 688,
											"end": 693,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 688,
											"end": 705,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 688,
											"end": 705,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "135"
										},
										{
											"begin": 688,
											"end": 705,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 618,
											"end": 713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 618,
											"end": 713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 618,
											"end": 713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 578,
											"end": 667,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 578,
											"end": 667,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 633,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 653,
											"end": 659,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 633,
											"end": 638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 633,
											"end": 660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 633,
											"end": 660,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 633,
											"end": 660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 578,
											"end": 667,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 578,
											"end": 667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 973,
											"end": 1134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1049,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1065,
											"end": 1072,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1088,
											"end": 1094,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1049,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 1049,
											"end": 1095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1049,
											"end": 1095,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 1049,
											"end": 1095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1111,
											"end": 1118,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1105,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1105,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 476,
											"end": 537,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 476,
											"end": 537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 521,
											"end": 529,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 521,
											"end": 527,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 521,
											"end": 529,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2369,
											"end": 2471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2438,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2457,
											"end": 2464,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2450,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 2450,
											"end": 2464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6575,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 6668,
											"end": 6672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6773,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 6749,
											"end": 6774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 6749,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6722,
											"end": 6774,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6808,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3563,
											"end": 3565,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3566,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3602,
											"end": 3604,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3582,
											"end": 3600,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3575,
											"end": 3605,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3675,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3614,
											"end": 3676,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3692,
											"end": 3710,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 3692,
											"end": 3710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3692,
											"end": 3710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3685,
											"end": 3720,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3737,
											"end": 3756,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 3737,
											"end": 3756,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 6784,
											"end": 6869,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6963,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 6912,
											"end": 6917,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6919,
											"end": 6926,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6947,
											"end": 6962,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6944,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6928,
											"end": 6962,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6903,
											"end": 6911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 6903,
											"end": 6963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3740,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3819,
											"end": 3823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3873,
											"end": 3901,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3890,
											"end": 3892,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3873,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 3873,
											"end": 3901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3987,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4083,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4113,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4120,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4102,
											"end": 4129,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3987,
											"end": 4136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3969,
											"end": 3971,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 3972,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4008,
											"end": 4010,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3988,
											"end": 4006,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3981,
											"end": 4011,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4047,
											"end": 4081,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4027,
											"end": 4045,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4082,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4098,
											"end": 4116,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4098,
											"end": 4116,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4098,
											"end": 4116,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4091,
											"end": 4127,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4144,
											"end": 4163,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4144,
											"end": 4163,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3767,
											"end": 4169,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10577,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4376,
											"end": 4378,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4358,
											"end": 4379,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4415,
											"end": 4417,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4395,
											"end": 4413,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4395,
											"end": 4413,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4395,
											"end": 4413,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4418,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4454,
											"end": 4488,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 4434,
											"end": 4452,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4434,
											"end": 4452,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4434,
											"end": 4452,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4427,
											"end": 4489,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4505,
											"end": 4523,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4498,
											"end": 4532,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4549,
											"end": 4568,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4549,
											"end": 4568,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4174,
											"end": 4574,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 10550,
											"end": 10618,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10657,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4781,
											"end": 4783,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4763,
											"end": 4784,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4820,
											"end": 4822,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4800,
											"end": 4818,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4793,
											"end": 4823,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4859,
											"end": 4893,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4839,
											"end": 4857,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 4839,
											"end": 4857,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4839,
											"end": 4857,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4832,
											"end": 4894,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4910,
											"end": 4928,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4910,
											"end": 4928,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4910,
											"end": 4928,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4903,
											"end": 4935,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 4971,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4952,
											"end": 4971,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4579,
											"end": 4977,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 10628,
											"end": 10696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10718,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10725,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10734,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10707,
											"end": 10743,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10758,
											"end": 10790,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10457,
											"end": 10797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11202,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 11215,
											"end": 11220,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11222,
											"end": 11229,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11214,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 11205,
											"end": 11230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 11205,
											"end": 11230,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11178,
											"end": 11230,
											"name": "POP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11244,
											"end": 11260,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11244,
											"end": 11281,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 11240,
											"end": 11483,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11325,
											"end": 11331,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11305,
											"end": 11331,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5184,
											"end": 5186,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5166,
											"end": 5187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5223,
											"end": 5225,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 5203,
											"end": 5221,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5203,
											"end": 5221,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5203,
											"end": 5221,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5196,
											"end": 5226,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5262,
											"end": 5293,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 5242,
											"end": 5260,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5242,
											"end": 5260,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5242,
											"end": 5260,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5235,
											"end": 5294,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5311,
											"end": 5329,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5311,
											"end": 5329,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 4982,
											"end": 5335,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 11297,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 11416,
											"end": 11421,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11423,
											"end": 11430,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11448,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11432,
											"end": 11457,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 11407,
											"end": 11458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 11407,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11168,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11078,
											"end": 11489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 7456,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5542,
											"end": 5544,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5524,
											"end": 5545,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5581,
											"end": 5583,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 5561,
											"end": 5579,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5561,
											"end": 5579,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5561,
											"end": 5579,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5554,
											"end": 5584,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5620,
											"end": 5654,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5618,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5593,
											"end": 5655,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5671,
											"end": 5689,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5664,
											"end": 5699,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5716,
											"end": 5735,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5716,
											"end": 5735,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5340,
											"end": 5741,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 7544,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7630,
											"end": 7646,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5948,
											"end": 5950,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5930,
											"end": 5951,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 5989,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 5967,
											"end": 5985,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 5967,
											"end": 5985,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5967,
											"end": 5985,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5960,
											"end": 5990,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6026,
											"end": 6060,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 6006,
											"end": 6024,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6006,
											"end": 6024,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6006,
											"end": 6024,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5999,
											"end": 6061,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6077,
											"end": 6095,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6070,
											"end": 6103,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6120,
											"end": 6139,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 6120,
											"end": 6139,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5746,
											"end": 6145,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 7622,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 7718,
											"end": 7722,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7724,
											"end": 7726,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7728,
											"end": 7734,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7697,
											"end": 7717,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 7697,
											"end": 7735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 7697,
											"end": 7735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7768,
											"end": 7783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7801,
											"end": 7822,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6354,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6334,
											"end": 6355,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6391,
											"end": 6393,
											"name": "PUSH",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 6371,
											"end": 6389,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6371,
											"end": 6389,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6371,
											"end": 6389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6364,
											"end": 6394,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6430,
											"end": 6464,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 6410,
											"end": 6428,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6410,
											"end": 6428,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6410,
											"end": 6428,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6403,
											"end": 6465,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6481,
											"end": 6499,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6481,
											"end": 6499,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6481,
											"end": 6499,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6474,
											"end": 6510,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 6527,
											"end": 6546,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 6150,
											"end": 6552,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 7793,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7914,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7917,
											"end": 7937,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7899,
											"end": 7937,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8137,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8114,
											"end": 8127,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8163,
											"end": 8189,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 8200,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6759,
											"end": 6761,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6741,
											"end": 6762,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6741,
											"end": 6762,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6741,
											"end": 6762,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6778,
											"end": 6796,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6771,
											"end": 6801,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6837,
											"end": 6871,
											"name": "PUSH",
											"source": 9,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6810,
											"end": 6872,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6889,
											"end": 6907,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 6889,
											"end": 6907,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 6557,
											"end": 6913,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2440,
											"end": 2472,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2422,
											"end": 2473,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2410,
											"end": 2412,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2413,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8520,
											"end": 9055,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 8520,
											"end": 9055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8603,
											"end": 8624,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8603,
											"end": 8624,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7120,
											"end": 7122,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7102,
											"end": 7123,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7159,
											"end": 7161,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 7139,
											"end": 7157,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7139,
											"end": 7157,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7139,
											"end": 7157,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7132,
											"end": 7162,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7198,
											"end": 7231,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 7178,
											"end": 7196,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7178,
											"end": 7196,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7178,
											"end": 7196,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7171,
											"end": 7232,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7249,
											"end": 7267,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7249,
											"end": 7267,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 6918,
											"end": 7273,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 8595,
											"end": 8660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8671,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 8700,
											"end": 8701,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8704,
											"end": 8711,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8713,
											"end": 8719,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8671,
											"end": 8691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 8671,
											"end": 8720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8671,
											"end": 8720,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 8671,
											"end": 8720,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8747,
											"end": 8753,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8743,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8731,
											"end": 8743,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 8731,
											"end": 8753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8731,
											"end": 8753,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8917,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8899,
											"end": 8927,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8952,
											"end": 8989,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 618,
											"end": 713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 618,
											"end": 713,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 618,
											"end": 713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9458,
											"end": 9479,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9458,
											"end": 9479,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7480,
											"end": 7482,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7462,
											"end": 7483,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7519,
											"end": 7521,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7499,
											"end": 7517,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7492,
											"end": 7522,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7558,
											"end": 7592,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
										},
										{
											"begin": 7538,
											"end": 7556,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7538,
											"end": 7556,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7538,
											"end": 7556,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7531,
											"end": 7593,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7609,
											"end": 7627,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7602,
											"end": 7633,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7650,
											"end": 7669,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 7650,
											"end": 7669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7278,
											"end": 7675,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 9450,
											"end": 9517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9528,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 9549,
											"end": 9556,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9566,
											"end": 9567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9570,
											"end": 9576,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9528,
											"end": 9548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 9528,
											"end": 9577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9528,
											"end": 9577,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 9528,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9588,
											"end": 9610,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9613,
											"end": 9631,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9649,
											"end": 9673,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7882,
											"end": 7884,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7885,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7921,
											"end": 7923,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 7901,
											"end": 7919,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7901,
											"end": 7919,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7901,
											"end": 7919,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7894,
											"end": 7924,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7960,
											"end": 7994,
											"name": "PUSH",
											"source": 9,
											"value": "45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
										},
										{
											"begin": 7940,
											"end": 7958,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 7940,
											"end": 7958,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7940,
											"end": 7958,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7933,
											"end": 7995,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8011,
											"end": 8029,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8011,
											"end": 8029,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8011,
											"end": 8029,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8004,
											"end": 8036,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8053,
											"end": 8072,
											"name": "PUSH",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8053,
											"end": 8072,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7680,
											"end": 8078,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 9641,
											"end": 9712,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9767,
											"end": 9790,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9790,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9790,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9895,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9883,
											"end": 9905,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1342,
											"end": 1367,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9755,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 9746,
											"end": 9764,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9931,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 1196,
											"end": 1373,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 719,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 721,
											"end": 920,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 721,
											"end": 920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9440,
											"end": 10034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9375,
											"end": 10034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9375,
											"end": 10034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8287,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8288,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8324,
											"end": 8326,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 8304,
											"end": 8322,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8304,
											"end": 8322,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8304,
											"end": 8322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8297,
											"end": 8327,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8343,
											"end": 8361,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8343,
											"end": 8361,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8343,
											"end": 8361,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8336,
											"end": 8386,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8403,
											"end": 8421,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8403,
											"end": 8421,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 8083,
											"end": 8427,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8636,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8616,
											"end": 8637,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8673,
											"end": 8675,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 8653,
											"end": 8671,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8653,
											"end": 8671,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8653,
											"end": 8671,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8646,
											"end": 8676,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "PUSH",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8692,
											"end": 8710,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8685,
											"end": 8731,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8748,
											"end": 8766,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 8748,
											"end": 8766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 8432,
											"end": 8772,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 254,
											"end": 256,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 567,
											"end": 740,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 715,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 684,
											"end": 715,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 674,
											"end": 716,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 674,
											"end": 716,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 664,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 664,
											"end": 734,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 664,
											"end": 734,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 567,
											"end": 740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 745,
											"end": 999,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 745,
											"end": 999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 813,
											"end": 819,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 821,
											"end": 827,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 874,
											"end": 876,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 853,
											"end": 860,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 845,
											"end": 877,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 842,
											"end": 894,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 842,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 890,
											"end": 891,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 888,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 880,
											"end": 892,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 842,
											"end": 894,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 842,
											"end": 894,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 932,
											"end": 941,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 913,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 913,
											"end": 942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 913,
											"end": 942,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 913,
											"end": 942,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 903,
											"end": 942,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 989,
											"end": 991,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 974,
											"end": 992,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 974,
											"end": 992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 961,
											"end": 993,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 961,
											"end": 993,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 745,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1471,
											"end": 1477,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1524,
											"end": 1526,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1512,
											"end": 1521,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1499,
											"end": 1522,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1495,
											"end": 1527,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1540,
											"end": 1541,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1538,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1530,
											"end": 1542,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 1492,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 1582,
											"end": 1591,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 1563,
											"end": 1592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 1563,
											"end": 1592,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1553,
											"end": 1592,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 1645,
											"end": 1647,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1634,
											"end": 1643,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1630,
											"end": 1648,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 1611,
											"end": 1649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 1611,
											"end": 1649,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1601,
											"end": 1649,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1696,
											"end": 1698,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1685,
											"end": 1694,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1681,
											"end": 1699,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1668,
											"end": 1700,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1658,
											"end": 1700,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1378,
											"end": 1706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1959,
											"end": 1965,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 1998,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1987,
											"end": 2010,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 2015,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2025,
											"end": 2026,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2018,
											"end": 2030,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 1980,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 2080,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1900,
											"end": 2080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2144,
											"end": 2150,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2199,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2176,
											"end": 2183,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2172,
											"end": 2195,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2168,
											"end": 2200,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2213,
											"end": 2214,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2210,
											"end": 2211,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2203,
											"end": 2215,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 2165,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 2255,
											"end": 2264,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 2236,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 2236,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2226,
											"end": 2265,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2085,
											"end": 2271,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2085,
											"end": 2271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2552,
											"end": 2558,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2613,
											"end": 2615,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2592,
											"end": 2599,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2588,
											"end": 2611,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2584,
											"end": 2616,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2626,
											"end": 2627,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2619,
											"end": 2631,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 2581,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 2671,
											"end": 2680,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 2652,
											"end": 2681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 2652,
											"end": 2681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2642,
											"end": 2681,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 2734,
											"end": 2736,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 2700,
											"end": 2738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 2700,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2690,
											"end": 2738,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2744,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2484,
											"end": 2744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2828,
											"end": 2829,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 2824,
											"end": 2836,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2871,
											"end": 2883,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2946,
											"end": 2950,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 2938,
											"end": 2944,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2934,
											"end": 2951,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 2951,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2924,
											"end": 2951,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 2892,
											"end": 2953,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2999,
											"end": 3001,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2991,
											"end": 2997,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 3002,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2968,
											"end": 2986,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2965,
											"end": 3003,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3045,
											"end": 3055,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 3040,
											"end": 3043,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3036,
											"end": 3056,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3033,
											"end": 3034,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3026,
											"end": 3057,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3080,
											"end": 3084,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3070,
											"end": 3085,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3108,
											"end": 3112,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3113,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2962,
											"end": 3123,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2749,
											"end": 3129,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2749,
											"end": 3129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3356,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 3134,
											"end": 3356,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3208,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3208,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3199,
											"end": 3208,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3220,
											"end": 3230,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3217,
											"end": 3350,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3217,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 3217,
											"end": 3350,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3272,
											"end": 3282,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B71"
										},
										{
											"begin": 3267,
											"end": 3270,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 3263,
											"end": 3283,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 3260,
											"end": 3261,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3253,
											"end": 3284,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3307,
											"end": 3311,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 3304,
											"end": 3305,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3297,
											"end": 3312,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3335,
											"end": 3339,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 3332,
											"end": 3333,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3325,
											"end": 3340,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"DEX.sol",
								"MEME.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"MEME.sol\":\"MEME\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"MEME.sol\":{\"keccak256\":\"0x3fca3f1262f20833c3e079d9692dfd0af0f3a93b2eef3205f69430ae490a6d26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9f24cce4eb4afb866c7710fe6019de37da9944fa0914a0b8e0d0206fcb4bc1c\",\"dweb:/ipfs/QmPrDUwqYS4BDE6ks5bWgrnTnsbxw7DA7ddLcjSgt31Ltd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 236,
								"contract": "MEME.sol:MEME",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 242,
								"contract": "MEME.sol:MEME",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 244,
								"contract": "MEME.sol:MEME",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 246,
								"contract": "MEME.sol:MEME",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 248,
								"contract": "MEME.sol:MEME",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 130,
								"contract": "MEME.sol:MEME",
								"label": "_paused",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							},
							{
								"astId": 7,
								"contract": "MEME.sol:MEME",
								"label": "_owner",
								"offset": 1,
								"slot": "5",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n   --> DEX.sol:280:9:\n    |\n280 |         uint256 meme_tax = (meme_price_without_tax * taxRate) / precision;\n    |         ^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 8924,
					"file": "DEX.sol",
					"start": 8908
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							976
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 977,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nameLocations": [
											"683:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 976,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								976
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1878:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1888:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1868:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:0"
									},
									"scope": 112,
									"src": "1824:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2144:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2162:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2256:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2237:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2134:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2101:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:0"
									},
									"scope": 112,
									"src": "2074:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2489:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2499:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2518:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2534:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2543:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2587:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2597:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2566:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2561:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2454:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:0"
									},
									"scope": 112,
									"src": "2426:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1961:0",
							"usedErrors": []
						}
					],
					"src": "102:2514:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							976
						],
						"Pausable": [
							220
						]
					},
					"id": 221,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 221,
							"sourceUnit": 977,
							"src": "130:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 117,
										"name": "Context",
										"nameLocations": [
											"632:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 976,
										"src": "632:7:1"
									},
									"id": 118,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:1"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:1",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 220,
							"linearizedBaseContracts": [
								220,
								976
							],
							"name": "Pausable",
							"nameLocation": "620:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:1",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 123,
									"name": "Paused",
									"nameLocation": "730:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "737:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:1"
									},
									"src": "724:30:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:1",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 128,
									"name": "Unpaused",
									"nameLocation": "841:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "850:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:1"
									},
									"src": "835:32:1"
								},
								{
									"constant": false,
									"id": 130,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 220,
									"src": "873:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 129,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "986:32:1",
										"statements": [
											{
												"expression": {
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 134,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "996:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "996:15:1"
											}
										]
									},
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:1",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 139,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:1"
									},
									"scope": 220,
									"src": "972:46:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "1229:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 142,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1239:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:1"
											},
											{
												"id": 145,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:1"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:1",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 147,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:1"
									},
									"src": "1204:72:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1476:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 150,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "1486:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:1"
											},
											{
												"id": 153,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:1"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:1",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 155,
									"name": "whenPaused",
									"nameLocation": "1463:10:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:1"
									},
									"src": "1454:66:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "1668:31:1",
										"statements": [
											{
												"expression": {
													"id": 161,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 130,
													"src": "1685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 160,
												"id": 162,
												"nodeType": "Return",
												"src": "1678:14:1"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:1",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:1"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "1662:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:1"
									},
									"scope": 220,
									"src": "1615:84:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "1818:55:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:1",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 169,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "1837:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 170,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 168,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:1"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:1",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:1"
									},
									"scope": 220,
									"src": "1767:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 186,
										"nodeType": "Block",
										"src": "1993:58:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 181,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2011:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 180,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:1"
											}
										]
									},
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:1",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:1"
									},
									"scope": 220,
									"src": "1945:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "2235:66:1",
										"statements": [
											{
												"expression": {
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 193,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2245:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 196,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 198,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "2281:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 197,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2274:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 201,
												"nodeType": "EmitStatement",
												"src": "2269:25:1"
											}
										]
									},
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:1",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 191,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 190,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2221:13:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:1"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:1"
									},
									"returnParameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:1"
									},
									"scope": 220,
									"src": "2186:115:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 218,
										"nodeType": "Block",
										"src": "2481:69:1",
										"statements": [
											{
												"expression": {
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 209,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 130,
														"src": "2491:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 214,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "2530:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 213,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "2521:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 217,
												"nodeType": "EmitStatement",
												"src": "2516:27:1"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:1",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 219,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 207,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 206,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 155,
												"src": "2470:10:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:1"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:1"
									},
									"scope": 220,
									"src": "2433:117:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 221,
							"src": "602:1950:1",
							"usedErrors": []
						}
					],
					"src": "105:2448:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							976
						],
						"ERC20": [
							807
						],
						"IERC20": [
							885
						],
						"IERC20Metadata": [
							954
						]
					},
					"id": 808,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 222,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 223,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 808,
							"sourceUnit": 886,
							"src": "130:22:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 224,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 808,
							"sourceUnit": 955,
							"src": "153:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 225,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 808,
							"sourceUnit": 977,
							"src": "195:33:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 227,
										"name": "Context",
										"nameLocations": [
											"1550:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 976,
										"src": "1550:7:2"
									},
									"id": 228,
									"nodeType": "InheritanceSpecifier",
									"src": "1550:7:2"
								},
								{
									"baseName": {
										"id": 229,
										"name": "IERC20",
										"nameLocations": [
											"1559:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 885,
										"src": "1559:6:2"
									},
									"id": 230,
									"nodeType": "InheritanceSpecifier",
									"src": "1559:6:2"
								},
								{
									"baseName": {
										"id": 231,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1567:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 954,
										"src": "1567:14:2"
									},
									"id": 232,
									"nodeType": "InheritanceSpecifier",
									"src": "1567:14:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 226,
								"nodeType": "StructuredDocumentation",
								"src": "230:1301:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 807,
							"linearizedBaseContracts": [
								807,
								954,
								885,
								976
							],
							"name": "ERC20",
							"nameLocation": "1541:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 236,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1624:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "1588:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 235,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 233,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1596:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1588:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 234,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1607:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 242,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1696:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "1640:67:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 241,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 237,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1648:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1640:47:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 240,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 238,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1667:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1659:27:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 239,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 244,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1730:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "1714:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 243,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1714:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 246,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1764:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "1749:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 245,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1749:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1790:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 807,
									"src": "1775:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 247,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1775:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "2036:57:2",
										"statements": [
											{
												"expression": {
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 256,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2046:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 257,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "2054:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2046:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "2046:13:2"
											},
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 260,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2069:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 261,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "2079:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2069:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "2069:17:2"
											}
										]
									},
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "1804:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 265,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2006:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "1992:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 250,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1992:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2027:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "2013:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 252,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2013:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:44:2"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2036:0:2"
									},
									"scope": 807,
									"src": "1980:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										941
									],
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "2227:29:2",
										"statements": [
											{
												"expression": {
													"id": 272,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 246,
													"src": "2244:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 271,
												"id": 273,
												"nodeType": "Return",
												"src": "2237:12:2"
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "2099:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2167:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 268,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2194:8:2"
									},
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2171:2:2"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "2212:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 269,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2212:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2211:15:2"
									},
									"scope": 807,
									"src": "2158:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										947
									],
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "2440:31:2",
										"statements": [
											{
												"expression": {
													"id": 282,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 248,
													"src": "2457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 281,
												"id": 283,
												"nodeType": "Return",
												"src": "2450:14:2"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "2262:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2378:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 278,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2407:8:2"
									},
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2384:2:2"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "2425:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 279,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2425:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2424:15:2"
									},
									"scope": 807,
									"src": "2369:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										953
									],
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "3169:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 292,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3186:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 291,
												"id": 293,
												"nodeType": "Return",
												"src": "3179:9:2"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "2477:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3113:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 288,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3144:8:2"
									},
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3121:2:2"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "3162:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 289,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3162:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3161:7:2"
									},
									"scope": 807,
									"src": "3104:91:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "3325:36:2",
										"statements": [
											{
												"expression": {
													"id": 302,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 244,
													"src": "3342:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 301,
												"id": 303,
												"nodeType": "Return",
												"src": "3335:19:2"
											}
										]
									},
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "3201:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3264:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 298,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3298:8:2"
									},
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3275:2:2"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "3316:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3315:9:2"
									},
									"scope": 807,
									"src": "3255:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										842
									],
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "3502:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 314,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "3519:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 316,
													"indexExpression": {
														"id": 315,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "3529:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3519:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 313,
												"id": 317,
												"nodeType": "Return",
												"src": "3512:25:2"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "3367:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3428:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 310,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3475:8:2"
									},
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3446:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "3438:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3438:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:17:2"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "3493:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3493:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3492:9:2"
									},
									"scope": 807,
									"src": "3419:125:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										852
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "3825:104:2",
										"statements": [
											{
												"assignments": [
													331
												],
												"declarations": [
													{
														"constant": false,
														"id": 331,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3843:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 343,
														"src": "3835:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 330,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3835:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 334,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 332,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "3851:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3851:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3835:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 336,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "3883:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "3890:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "3894:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 335,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "3873:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3873:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "3873:28:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3918:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 329,
												"id": 342,
												"nodeType": "Return",
												"src": "3911:11:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "3550:185:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3749:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 326,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3801:8:2"
									},
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3766:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "3758:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3758:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3778:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "3770:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3757:28:2"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "3819:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 327,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3819:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:6:2"
									},
									"scope": 807,
									"src": "3740:189:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										862
									],
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "4085:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 355,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "4102:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 357,
														"indexExpression": {
															"id": 356,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "4114:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4102:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 359,
													"indexExpression": {
														"id": 358,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 349,
														"src": "4121:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4102:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 354,
												"id": 360,
												"nodeType": "Return",
												"src": "4095:34:2"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "3935:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3996:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 351,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4058:8:2"
									},
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4014:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4006:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4006:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4029:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4021:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4021:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:32:2"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "4076:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4076:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4075:9:2"
									},
									"scope": 807,
									"src": "3987:149:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										872
									],
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "4533:108:2",
										"statements": [
											{
												"assignments": [
													374
												],
												"declarations": [
													{
														"constant": false,
														"id": 374,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4551:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 386,
														"src": "4543:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 373,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4543:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 375,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "4559:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4559:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4543:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 379,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "4590:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 380,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "4597:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 381,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "4606:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 378,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "4581:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4581:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "4581:32:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4630:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 372,
												"id": 385,
												"nodeType": "Return",
												"src": "4623:11:2"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "4142:297:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4453:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 369,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4509:8:2"
									},
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4469:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4461:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4486:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4478:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4460:33:2"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "4527:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 370,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4527:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4526:6:2"
									},
									"scope": 807,
									"src": "4444:197:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										884
									],
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "5306:153:2",
										"statements": [
											{
												"assignments": [
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5324:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 419,
														"src": "5316:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 400,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5316:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 404,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 402,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "5334:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5334:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5316:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 406,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "5372:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 407,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "5378:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 408,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "5387:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 405,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "5356:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5356:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "5356:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 412,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "5414:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 413,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "5420:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 414,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "5424:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 411,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "5404:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5404:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "5404:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5448:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 399,
												"id": 418,
												"nodeType": "Return",
												"src": "5441:11:2"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "4647:551:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5212:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 396,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5282:8:2"
									},
									"parameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5233:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5225:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5225:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5247:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5239:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5259:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5251:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5251:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:42:2"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5300:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 397,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5300:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:6:2"
									},
									"scope": 807,
									"src": "5203:256:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 448,
										"nodeType": "Block",
										"src": "5948:140:2",
										"statements": [
											{
												"assignments": [
													431
												],
												"declarations": [
													{
														"constant": false,
														"id": 431,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5966:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 448,
														"src": "5958:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 430,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5958:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 432,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "5974:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5974:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5958:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 436,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "6005:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 437,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "6012:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 439,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 431,
																		"src": "6031:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 440,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "6038:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 438,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "6021:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6021:25:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 442,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "6049:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6021:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 435,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "5996:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5996:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "5996:64:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6077:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 429,
												"id": 447,
												"nodeType": "Return",
												"src": "6070:11:2"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:2",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5863:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5889:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "5881:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5881:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5906:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "5898:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5880:37:2"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "5942:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 427,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5942:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5941:6:2"
									},
									"scope": 807,
									"src": "5854:234:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "6674:328:2",
										"statements": [
											{
												"assignments": [
													460
												],
												"declarations": [
													{
														"constant": false,
														"id": 460,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6692:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 489,
														"src": "6684:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 459,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6684:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 463,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 461,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "6700:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6684:28:2"
											},
											{
												"assignments": [
													465
												],
												"declarations": [
													{
														"constant": false,
														"id": 465,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6730:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 489,
														"src": "6722:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 464,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6722:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 470,
												"initialValue": {
													"arguments": [
														{
															"id": 467,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "6759:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "6766:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 466,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "6749:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6749:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6722:52:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 472,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "6792:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 473,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 454,
																"src": "6812:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6792:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6829:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 471,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6784:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6784:85:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 477,
												"nodeType": "ExpressionStatement",
												"src": "6784:85:2"
											},
											{
												"id": 486,
												"nodeType": "UncheckedBlock",
												"src": "6879:95:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 479,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 460,
																	"src": "6912:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 480,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6919:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 481,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 465,
																		"src": "6928:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 482,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "6947:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6928:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 478,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "6903:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6903:60:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 485,
														"nodeType": "ExpressionStatement",
														"src": "6903:60:2"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6991:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 458,
												"id": 488,
												"nodeType": "Return",
												"src": "6984:11:2"
											}
										]
									},
									"documentation": {
										"id": 450,
										"nodeType": "StructuredDocumentation",
										"src": "6094:476:2",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6584:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6610:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "6602:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6627:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "6619:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6619:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6601:42:2"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "6668:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 456,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6668:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6667:6:2"
									},
									"scope": 807,
									"src": "6575:427:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "7534:710:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 501,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "7552:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7568:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7560:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 502,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7560:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7560:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7552:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7572:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7544:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7544:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "7544:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 511,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "7630:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7644:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7636:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 512,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7636:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7636:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7630:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 517,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7648:37:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 510,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7622:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7622:64:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 519,
												"nodeType": "ExpressionStatement",
												"src": "7622:64:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 521,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "7718:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 522,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "7724:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 523,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "7728:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 520,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "7697:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7697:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "7697:38:2"
											},
											{
												"assignments": [
													527
												],
												"declarations": [
													{
														"constant": false,
														"id": 527,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "7754:11:2",
														"nodeType": "VariableDeclaration",
														"scope": 566,
														"src": "7746:19:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 526,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7746:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 531,
												"initialValue": {
													"baseExpression": {
														"id": 528,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "7768:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 530,
													"indexExpression": {
														"id": 529,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "7778:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7768:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7746:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 533,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "7801:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 534,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "7816:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7801:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7824:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7793:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7793:72:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "7793:72:2"
											},
											{
												"id": 553,
												"nodeType": "UncheckedBlock",
												"src": "7875:273:2",
												"statements": [
													{
														"expression": {
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 539,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "7899:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 541,
																"indexExpression": {
																	"id": 540,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 493,
																	"src": "7909:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "7899:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 542,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "7917:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 543,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "7931:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7917:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7899:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 546,
														"nodeType": "ExpressionStatement",
														"src": "7899:38:2"
													},
													{
														"expression": {
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 547,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "8114:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 549,
																"indexExpression": {
																	"id": 548,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 495,
																	"src": "8124:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8114:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 550,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 497,
																"src": "8131:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8114:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 552,
														"nodeType": "ExpressionStatement",
														"src": "8114:23:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 555,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "8172:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 556,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "8178:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 557,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "8182:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 554,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "8163:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8163:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "EmitStatement",
												"src": "8158:31:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 561,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "8220:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 562,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "8226:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 563,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "8230:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 560,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "8200:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8200:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "8200:37:2"
											}
										]
									},
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "7008:443:2",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7465:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7483:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "7475:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7475:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7497:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "7489:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7489:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7509:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "7501:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7501:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7474:42:2"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7534:0:2"
									},
									"scope": 807,
									"src": "7456:788:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "8585:470:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 576,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "8603:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8622:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8614:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 577,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8614:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8614:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8603:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8626:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 575,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8595:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8595:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 584,
												"nodeType": "ExpressionStatement",
												"src": "8595:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8700:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8692:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 586,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8692:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8692:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 590,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "8704:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "8713:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 585,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "8671:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8671:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 593,
												"nodeType": "ExpressionStatement",
												"src": "8671:49:2"
											},
											{
												"expression": {
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 594,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "8731:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 595,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "8747:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8731:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "8731:22:2"
											},
											{
												"id": 604,
												"nodeType": "UncheckedBlock",
												"src": "8763:175:2",
												"statements": [
													{
														"expression": {
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 598,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "8899:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 600,
																"indexExpression": {
																	"id": 599,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 570,
																	"src": "8909:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8899:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 601,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 572,
																"src": "8921:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8899:28:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 603,
														"nodeType": "ExpressionStatement",
														"src": "8899:28:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8969:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8961:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 606,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8961:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8961:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 610,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "8973:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 611,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "8982:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 605,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "8952:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8952:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "EmitStatement",
												"src": "8947:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9028:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9020:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 615,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9020:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 618,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9020:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 619,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "9032:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 620,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 572,
															"src": "9041:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 614,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "9000:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "9000:48:2"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "8250:265:2",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8529:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8543:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "8535:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8535:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8560:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "8552:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8552:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:33:2"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8585:0:2"
									},
									"scope": 807,
									"src": "8520:535:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "9440:594:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 633,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "9458:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9477:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9469:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 634,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9469:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9469:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9458:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9481:35:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 632,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9450:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9450:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "9450:67:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 643,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "9549:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 646,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9566:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9558:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 644,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9558:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9558:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "9570:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 642,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "9528:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9528:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "9528:49:2"
											},
											{
												"assignments": [
													652
												],
												"declarations": [
													{
														"constant": false,
														"id": 652,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "9596:14:2",
														"nodeType": "VariableDeclaration",
														"scope": 695,
														"src": "9588:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 651,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9588:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 656,
												"initialValue": {
													"baseExpression": {
														"id": 653,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "9613:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 655,
													"indexExpression": {
														"id": 654,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 627,
														"src": "9623:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9613:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9588:43:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 658,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "9649:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 659,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 629,
																"src": "9667:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9649:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 661,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9675:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 657,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9641:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9641:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "9641:71:2"
											},
											{
												"id": 676,
												"nodeType": "UncheckedBlock",
												"src": "9722:194:2",
												"statements": [
													{
														"expression": {
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 664,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "9746:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 666,
																"indexExpression": {
																	"id": 665,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 627,
																	"src": "9756:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9746:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 667,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "9767:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 668,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "9784:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9767:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9746:44:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 671,
														"nodeType": "ExpressionStatement",
														"src": "9746:44:2"
													},
													{
														"expression": {
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 672,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "9883:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"id": 673,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 629,
																"src": "9899:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9883:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 675,
														"nodeType": "ExpressionStatement",
														"src": "9883:22:2"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 678,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "9940:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9957:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9949:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 679,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9949:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9949:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 683,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "9961:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 677,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "9931:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9931:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 685,
												"nodeType": "EmitStatement",
												"src": "9926:42:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 687,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "9999:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10016:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10008:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 688,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10008:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10008:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 629,
															"src": "10020:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 686,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "9979:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9979:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "9979:48:2"
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "9061:309:2",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9384:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9398:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "9390:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9390:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9415:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "9407:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9389:33:2"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9440:0:2"
									},
									"scope": 807,
									"src": "9375:659:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 740,
										"nodeType": "Block",
										"src": "10540:257:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 707,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "10558:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10575:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10567:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 708,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10567:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10567:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10558:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10579:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 706,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10550:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10550:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "10550:68:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 717,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "10636:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10655:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10647:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 718,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10647:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 721,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10647:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10636:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10659:36:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 716,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10628:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10628:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 725,
												"nodeType": "ExpressionStatement",
												"src": "10628:68:2"
											},
											{
												"expression": {
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 726,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "10707:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 729,
															"indexExpression": {
																"id": 727,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 699,
																"src": "10719:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10707:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 730,
														"indexExpression": {
															"id": 728,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "10726:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10707:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 731,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "10737:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10707:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "10707:36:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "10767:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "10774:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 737,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "10783:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 734,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "10758:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10758:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 739,
												"nodeType": "EmitStatement",
												"src": "10753:37:2"
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "10040:412:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10466:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10483:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "10475:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10475:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10498:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "10490:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10515:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "10507:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10507:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10474:48:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10540:0:2"
									},
									"scope": 807,
									"src": "10457:340:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "11168:321:2",
										"statements": [
											{
												"assignments": [
													752
												],
												"declarations": [
													{
														"constant": false,
														"id": 752,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11186:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 783,
														"src": "11178:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 751,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11178:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 757,
												"initialValue": {
													"arguments": [
														{
															"id": 754,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "11215:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "11222:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 753,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "11205:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11205:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11178:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 758,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "11244:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11269:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 760,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11269:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 759,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11264:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11264:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11278:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11264:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11244:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 782,
												"nodeType": "IfStatement",
												"src": "11240:243:2",
												"trueBody": {
													"id": 781,
													"nodeType": "Block",
													"src": "11283:200:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 766,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 752,
																			"src": "11305:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 767,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 748,
																			"src": "11325:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11305:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11333:31:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 765,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11297:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11297:68:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 771,
															"nodeType": "ExpressionStatement",
															"src": "11297:68:2"
														},
														{
															"id": 780,
															"nodeType": "UncheckedBlock",
															"src": "11379:94:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 773,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 744,
																				"src": "11416:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 774,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 746,
																				"src": "11423:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 775,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 752,
																					"src": "11432:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 776,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 748,
																					"src": "11451:6:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11432:25:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 772,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 741,
																			"src": "11407:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11407:51:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 779,
																	"nodeType": "ExpressionStatement",
																	"src": "11407:51:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "10803:270:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11087:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11111:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "11103:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11103:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11126:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "11118:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11118:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11143:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "11135:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11135:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11102:48:2"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11168:0:2"
									},
									"scope": 807,
									"src": "11078:411:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 794,
										"nodeType": "Block",
										"src": "12162:2:2",
										"statements": []
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "11495:573:2",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12082:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12111:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "12103:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12103:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12125:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "12117:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12117:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12137:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "12129:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12129:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12102:42:2"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12162:0:2"
									},
									"scope": 807,
									"src": "12073:91:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 805,
										"nodeType": "Block",
										"src": "12840:2:2",
										"statements": []
									},
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "12170:577:2",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "12761:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12789:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "12781:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12781:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12803:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "12795:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12795:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12815:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "12807:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12807:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12780:42:2"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12840:0:2"
									},
									"scope": 807,
									"src": "12752:90:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 808,
							"src": "1532:11312:2",
							"usedErrors": []
						}
					],
					"src": "105:12740:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							885
						]
					},
					"id": 886,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 809,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 810,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 885,
							"linearizedBaseContracts": [
								885
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 819,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 828,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 885,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 885,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 852,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 849,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 885,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 885,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 872,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 872,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 869,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 885,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 873,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 884,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "2668:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 874,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "2682:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "2694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:3"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "2728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 881,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:3"
									},
									"scope": 885,
									"src": "2646:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 886,
							"src": "202:2534:3",
							"usedErrors": []
						}
					],
					"src": "106:2631:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							976
						],
						"ERC20": [
							807
						],
						"ERC20Burnable": [
							929
						],
						"IERC20": [
							885
						],
						"IERC20Metadata": [
							954
						]
					},
					"id": 930,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 887,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "124:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 888,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 930,
							"sourceUnit": 808,
							"src": "149:22:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 930,
							"sourceUnit": 977,
							"src": "172:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 891,
										"name": "Context",
										"nameLocations": [
											"454:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 976,
										"src": "454:7:4"
									},
									"id": 892,
									"nodeType": "InheritanceSpecifier",
									"src": "454:7:4"
								},
								{
									"baseName": {
										"id": 893,
										"name": "ERC20",
										"nameLocations": [
											"463:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 807,
										"src": "463:5:4"
									},
									"id": 894,
									"nodeType": "InheritanceSpecifier",
									"src": "463:5:4"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 890,
								"nodeType": "StructuredDocumentation",
								"src": "210:208:4",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 929,
							"linearizedBaseContracts": [
								929,
								807,
								954,
								885,
								976
							],
							"name": "ERC20Burnable",
							"nameLocation": "437:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "623:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 901,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "639:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "639:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 903,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "653:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 900,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "633:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "633:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 905,
												"nodeType": "ExpressionStatement",
												"src": "633:27:4"
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "475:98:4",
										"text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "587:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "600:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "592:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:16:4"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "623:0:4"
									},
									"scope": 929,
									"src": "578:89:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 927,
										"nodeType": "Block",
										"src": "1039:95:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 916,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "1065:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 917,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "1074:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1074:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "1088:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 915,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "1049:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1049:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "1049:46:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 923,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "1111:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "1120:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 922,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "1105:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1105:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 926,
												"nodeType": "ExpressionStatement",
												"src": "1105:22:4"
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "673:295:4",
										"text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
									},
									"functionSelector": "79cc6790",
									"id": 928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "982:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "999:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "991:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1016:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "1008:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "990:33:4"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1039:0:4"
									},
									"scope": 929,
									"src": "973:161:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 930,
							"src": "419:717:4",
							"usedErrors": []
						}
					],
					"src": "124:1013:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							885
						],
						"IERC20Metadata": [
							954
						]
					},
					"id": 955,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 931,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 932,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 955,
							"sourceUnit": 886,
							"src": "135:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 934,
										"name": "IERC20",
										"nameLocations": [
											"305:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 885,
										"src": "305:6:5"
									},
									"id": 935,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 933,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:5",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 954,
							"linearizedBaseContracts": [
								954,
								885
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:5"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 941,
												"src": "416:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 938,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:5"
									},
									"scope": 954,
									"src": "377:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 942,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 947,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:5"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "539:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 944,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:5"
									},
									"scope": 954,
									"src": "498:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 953,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:5"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "673:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 950,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:5"
									},
									"scope": 954,
									"src": "630:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 955,
							"src": "277:405:5",
							"usedErrors": []
						}
					],
					"src": "110:573:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							976
						]
					},
					"id": 977,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 956,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 957,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 976,
							"linearizedBaseContracts": [
								976
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 962,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 961,
												"id": 964,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 976,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 971,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 970,
												"id": 973,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 968,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 976,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 977,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"DEX.sol": {
				"ast": {
					"absolutePath": "DEX.sol",
					"exportedSymbols": {
						"Context": [
							976
						],
						"DEX": [
							2110
						],
						"ERC20": [
							807
						],
						"ERC20Burnable": [
							929
						],
						"IERC20": [
							885
						],
						"IERC20Metadata": [
							954
						],
						"MEME": [
							2198
						],
						"Ownable": [
							112
						],
						"Pausable": [
							220
						]
					},
					"id": 2111,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 978,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 979,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2111,
							"sourceUnit": 221,
							"src": "58:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 980,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2111,
							"sourceUnit": 113,
							"src": "114:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 981,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2111,
							"sourceUnit": 808,
							"src": "167:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "MEME.sol",
							"file": "MEME.sol",
							"id": 982,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2111,
							"sourceUnit": 2199,
							"src": "223:18:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 983,
										"name": "Pausable",
										"nameLocations": [
											"259:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 220,
										"src": "259:8:7"
									},
									"id": 984,
									"nodeType": "InheritanceSpecifier",
									"src": "259:8:7"
								},
								{
									"baseName": {
										"id": 985,
										"name": "Ownable",
										"nameLocations": [
											"269:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "269:7:7"
									},
									"id": 986,
									"nodeType": "InheritanceSpecifier",
									"src": "269:7:7"
								}
							],
							"canonicalName": "DEX",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2110,
							"linearizedBaseContracts": [
								2110,
								112,
								220,
								976
							],
							"name": "DEX",
							"nameLocation": "252:3:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DEX.Stack_Struct",
									"id": 993,
									"members": [
										{
											"constant": false,
											"id": 988,
											"mutability": "mutable",
											"name": "meme_amount",
											"nameLocation": "321:11:7",
											"nodeType": "VariableDeclaration",
											"scope": 993,
											"src": "313:19:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 987,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "313:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 990,
											"mutability": "mutable",
											"name": "eth_amount",
											"nameLocation": "350:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 993,
											"src": "342:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 989,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "342:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 992,
											"mutability": "mutable",
											"name": "time",
											"nameLocation": "378:4:7",
											"nodeType": "VariableDeclaration",
											"scope": 993,
											"src": "370:12:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 991,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "370:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stack_Struct",
									"nameLocation": "290:12:7",
									"nodeType": "StructDefinition",
									"scope": 2110,
									"src": "283:106:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 996,
									"mutability": "mutable",
									"name": "meme",
									"nameLocation": "400:4:7",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "394:10:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC20_$807",
										"typeString": "contract ERC20"
									},
									"typeName": {
										"id": 995,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 994,
											"name": "ERC20",
											"nameLocations": [
												"394:5:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 807,
											"src": "394:5:7"
										},
										"referencedDeclaration": 807,
										"src": "394:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$807",
											"typeString": "contract ERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"eventSelector": "1cbc5ab135991bd2b6a4b034a04aa2aa086dac1371cb9b16b8b5e2ed6b036bed",
									"id": 1004,
									"name": "Buy",
									"nameLocation": "417:3:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "437:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "421:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"indexed": false,
												"mutability": "mutable",
												"name": "Meme_amount",
												"nameLocation": "451:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "443:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "443:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"indexed": false,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "472:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "464:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "420:63:7"
									},
									"src": "411:73:7"
								},
								{
									"anonymous": false,
									"eventSelector": "ed7a144fad14804d5c249145e3e0e2b63a9eb455b76aee5bc92d711e9bba3e4a",
									"id": 1012,
									"name": "Sell",
									"nameLocation": "495:4:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "516:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "500:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"indexed": false,
												"mutability": "mutable",
												"name": "Meme_amount",
												"nameLocation": "530:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "522:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1010,
												"indexed": false,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "551:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1012,
												"src": "543:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1009,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "499:63:7"
									},
									"src": "489:74:7"
								},
								{
									"anonymous": false,
									"eventSelector": "5caad8f5613b6f1d592fc8c69d8f0999453740f0806c754f20cc92f3d4b2b1b6",
									"id": 1020,
									"name": "Stack",
									"nameLocation": "574:5:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "596:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "580:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"indexed": false,
												"mutability": "mutable",
												"name": "Meme_amount",
												"nameLocation": "610:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "602:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1015,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "602:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"indexed": false,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "631:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "623:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "623:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:63:7"
									},
									"src": "568:75:7"
								},
								{
									"anonymous": false,
									"eventSelector": "bb564df1f5d4ebb97b073adcab505c7796a37035ac5d14f51269660939c39cf4",
									"id": 1028,
									"name": "UnStack",
									"nameLocation": "654:7:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "687:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "671:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"indexed": false,
												"mutability": "mutable",
												"name": "Meme_amount",
												"nameLocation": "709:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "701:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "701:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"indexed": false,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "738:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "730:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "730:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "661:93:7"
									},
									"src": "648:107:7"
								},
								{
									"constant": false,
									"id": 1034,
									"mutability": "mutable",
									"name": "Stacked",
									"nameLocation": "805:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "761:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct DEX.Stack_Struct[])"
									},
									"typeName": {
										"id": 1033,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1029,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "769:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "761:34:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct DEX.Stack_Struct[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1031,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1030,
													"name": "Stack_Struct",
													"nameLocations": [
														"780:12:7"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 993,
													"src": "780:12:7"
												},
												"referencedDeclaration": 993,
												"src": "780:12:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stack_Struct_$993_storage_ptr",
													"typeString": "struct DEX.Stack_Struct"
												}
											},
											"id": 1032,
											"nodeType": "ArrayTypeName",
											"src": "780:14:7",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_ptr",
												"typeString": "struct DEX.Stack_Struct[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "2ad9d559",
									"id": 1038,
									"mutability": "mutable",
									"name": "dailyTax",
									"nameLocation": "854:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "819:43:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 1037,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1035,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "827:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "819:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1036,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "838:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9c74f05d",
									"id": 1040,
									"mutability": "mutable",
									"name": "stackingRate",
									"nameLocation": "884:12:7",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "869:27:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1039,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "869:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1042,
									"mutability": "mutable",
									"name": "_k",
									"nameLocation": "920:2:7",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "903:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1041,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "903:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1044,
									"mutability": "mutable",
									"name": "_x",
									"nameLocation": "945:2:7",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "928:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1043,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "928:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1046,
									"mutability": "mutable",
									"name": "_y",
									"nameLocation": "970:2:7",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "953:19:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1045,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "953:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1049,
									"mutability": "mutable",
									"name": "precision",
									"nameLocation": "996:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "979:34:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1047,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "979:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130653138",
										"id": 1048,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1008:5:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000"
										},
										"value": "10e18"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1057,
									"mutability": "mutable",
									"name": "taxRate",
									"nameLocation": "1037:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "1020:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1050,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1020:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 1056,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "33",
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1048:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1052,
														"name": "precision",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "1052:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1048:13:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1054,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "1047:15:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "/",
										"rightExpression": {
											"hexValue": "31303030",
											"id": 1055,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1065:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000_by_1",
												"typeString": "int_const 1000"
											},
											"value": "1000"
										},
										"src": "1047:22:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "1120:121:7",
										"statements": [
											{
												"expression": {
													"id": 1068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1064,
														"name": "meme",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "1130:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC20_$807",
															"typeString": "contract ERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1066,
																"name": "addr",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1059,
																"src": "1142:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1065,
															"name": "MEME",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2198,
															"src": "1137:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_MEME_$2198_$",
																"typeString": "type(contract MEME)"
															}
														},
														"id": 1067,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1137:10:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_MEME_$2198",
															"typeString": "contract MEME"
														}
													},
													"src": "1130:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC20_$807",
														"typeString": "contract ERC20"
													}
												},
												"id": 1069,
												"nodeType": "ExpressionStatement",
												"src": "1130:17:7"
											},
											{
												"expression": {
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1070,
														"name": "taxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "1157:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1071,
																		"name": "_taxrate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1061,
																		"src": "1168:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1072,
																		"name": "precision",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1049,
																		"src": "1179:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1074,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1167:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "31303030",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1192:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000_by_1",
																"typeString": "int_const 1000"
															},
															"value": "1000"
														},
														"src": "1167:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1157:39:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "1157:39:7"
											}
										]
									},
									"id": 1080,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "1096:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "1088:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "_taxrate",
												"nameLocation": "1110:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "1102:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1087:32:7"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1120:0:7"
									},
									"scope": 2110,
									"src": "1076:165:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "1283:25:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1085,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1293:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1293:8:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "1293:8:7"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1083,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1082,
												"name": "onlyOwner",
												"nameLocations": [
													"1273:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1273:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1273:9:7"
										}
									],
									"name": "pause",
									"nameLocation": "1256:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1261:2:7"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1283:0:7"
									},
									"scope": 2110,
									"src": "1247:61:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "1352:27:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1094,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "1362:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1362:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "1362:10:7"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1092,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1091,
												"name": "onlyOwner",
												"nameLocations": [
													"1342:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1342:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1342:9:7"
										}
									],
									"name": "unpause",
									"nameLocation": "1323:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1330:2:7"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1352:0:7"
									},
									"scope": 2110,
									"src": "1314:65:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "1414:29:7",
										"statements": [
											{
												"expression": {
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1101,
														"name": "_k",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "1424:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1102,
															"name": "_x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1044,
															"src": "1429:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1103,
															"name": "_y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1046,
															"src": "1434:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1429:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1424:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "1424:12:7"
											}
										]
									},
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateK",
									"nameLocation": "1394:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1402:2:7"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1414:0:7"
									},
									"scope": 2110,
									"src": "1385:58:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "1514:43:7",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1115,
														"name": "Stacked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "1531:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
														}
													},
													"id": 1118,
													"indexExpression": {
														"expression": {
															"id": 1116,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1539:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1117,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1543:6:7",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1539:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1531:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage",
														"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 1114,
												"id": 1119,
												"nodeType": "Return",
												"src": "1524:26:7"
											}
										]
									},
									"functionSelector": "e8bca8b8",
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStacks",
									"nameLocation": "1458:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:7"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "1491:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct DEX.Stack_Struct[]"
												},
												"typeName": {
													"baseType": {
														"id": 1111,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1110,
															"name": "Stack_Struct",
															"nameLocations": [
																"1491:12:7"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 993,
															"src": "1491:12:7"
														},
														"referencedDeclaration": 993,
														"src": "1491:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stack_Struct_$993_storage_ptr",
															"typeString": "struct DEX.Stack_Struct"
														}
													},
													"id": 1112,
													"nodeType": "ArrayTypeName",
													"src": "1491:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_ptr",
														"typeString": "struct DEX.Stack_Struct[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1490:23:7"
									},
									"scope": 2110,
									"src": "1449:108:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "1628:279:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1129,
																"name": "meme_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "1646:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1660:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1646:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e64206d6f7265204d454d45",
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1663:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a846ae426b95dae7130b856727d5256e6d2011b269481b9be8507efe8d0d207e",
																"typeString": "literal_string \"Send more MEME\""
															},
															"value": "Send more MEME"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a846ae426b95dae7130b856727d5256e6d2011b269481b9be8507efe8d0d207e",
																"typeString": "literal_string \"Send more MEME\""
															}
														],
														"id": 1128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1638:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1638:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "1638:42:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1136,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1698:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1137,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1702:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1698:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1710:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1698:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e64206d6f726520455448",
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1713:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_78b7994db21b321ba8531e19f302fa7a3e3fe17bff2fbaa020f4bcef4cd665f8",
																"typeString": "literal_string \"Send more ETH\""
															},
															"value": "Send more ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_78b7994db21b321ba8531e19f302fa7a3e3fe17bff2fbaa020f4bcef4cd665f8",
																"typeString": "literal_string \"Send more ETH\""
															}
														],
														"id": 1135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1690:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1690:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1142,
												"nodeType": "ExpressionStatement",
												"src": "1690:39:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1144,
																"name": "stackingRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1040,
																"src": "1760:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1145,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "1777:3:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1146,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1781:5:7",
																				"memberName": "value",
																				"nodeType": "MemberAccess",
																				"src": "1777:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1147,
																				"name": "precision",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "1789:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1777:21:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1149,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1776:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1150,
																	"name": "meme_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1123,
																	"src": "1802:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1776:37:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1760:53:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537461636b696e672052617465206e6f74206d6574",
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1827:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f3a7037a6f515e768f09bbd7b942e7ec8e428cdd68ed2428de9d02c6ace4c1a",
																"typeString": "literal_string \"Stacking Rate not met\""
															},
															"value": "Stacking Rate not met"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5f3a7037a6f515e768f09bbd7b942e7ec8e428cdd68ed2428de9d02c6ace4c1a",
																"typeString": "literal_string \"Stacking Rate not met\""
															}
														],
														"id": 1143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1739:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1739:121:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "1739:121:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1157,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1123,
															"src": "1877:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1158,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1890:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1894:5:7",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1890:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1156,
														"name": "_stack",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "1870:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1870:30:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1161,
												"nodeType": "ExpressionStatement",
												"src": "1870:30:7"
											}
										]
									},
									"functionSelector": "dc9031c4",
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1125,
												"name": "whenNotPaused",
												"nameLocations": [
													"1614:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1614:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1614:13:7"
										}
									],
									"name": "stack",
									"nameLocation": "1572:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "meme_amount",
												"nameLocation": "1586:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "1578:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1578:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1577:21:7"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:7"
									},
									"scope": 2110,
									"src": "1563:344:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "1966:94:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1171,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "2047:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1170,
														"name": "_unstack",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "2038:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2038:15:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1173,
												"nodeType": "ExpressionStatement",
												"src": "2038:15:7"
											}
										]
									},
									"functionSelector": "200061df",
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1168,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1167,
												"name": "whenNotPaused",
												"nameLocations": [
													"1952:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1952:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1952:13:7"
										}
									],
									"name": "unstack",
									"nameLocation": "1922:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1938:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1930:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1930:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1929:15:7"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1966:0:7"
									},
									"scope": 2110,
									"src": "1913:147:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "2132:452:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1185,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2160:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2164:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2160:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1189,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2180:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DEX_$2110",
																		"typeString": "contract DEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DEX_$2110",
																		"typeString": "contract DEX"
																	}
																],
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2172:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1187,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2172:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2172:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1191,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "2187:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1182,
															"name": "meme",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "2142:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$807",
																"typeString": "contract ERC20"
															}
														},
														"id": 1184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2147:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 420,
														"src": "2142:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2142:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1193,
												"nodeType": "ExpressionStatement",
												"src": "2142:57:7"
											},
											{
												"expression": {
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1194,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "2209:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1195,
														"name": "meme_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "2215:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2209:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1197,
												"nodeType": "ExpressionStatement",
												"src": "2209:17:7"
											},
											{
												"expression": {
													"id": 1200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1198,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "2236:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1199,
														"name": "eth_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "2242:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2236:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1201,
												"nodeType": "ExpressionStatement",
												"src": "2236:16:7"
											},
											{
												"assignments": [
													1204
												],
												"declarations": [
													{
														"constant": false,
														"id": 1204,
														"mutability": "mutable",
														"name": "ss",
														"nameLocation": "2283:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1245,
														"src": "2263:22:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
															"typeString": "struct DEX.Stack_Struct"
														},
														"typeName": {
															"id": 1203,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1202,
																"name": "Stack_Struct",
																"nameLocations": [
																	"2263:12:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 993,
																"src": "2263:12:7"
															},
															"referencedDeclaration": 993,
															"src": "2263:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stack_Struct_$993_storage_ptr",
																"typeString": "struct DEX.Stack_Struct"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1211,
												"initialValue": {
													"arguments": [
														{
															"id": 1206,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "2314:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1207,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "2339:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1208,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2363:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2369:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2363:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1205,
														"name": "Stack_Struct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "2288:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Stack_Struct_$993_storage_ptr_$",
															"typeString": "type(struct DEX.Stack_Struct storage pointer)"
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2288:100:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
														"typeString": "struct DEX.Stack_Struct memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2263:125:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1217,
															"name": "ss",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "2423:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
																"typeString": "struct DEX.Stack_Struct memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
																"typeString": "struct DEX.Stack_Struct memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1212,
																"name": "Stacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "2398:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
																}
															},
															"id": 1215,
															"indexExpression": {
																"expression": {
																	"id": 1213,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2406:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2410:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2406:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2398:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage",
																"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
															}
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2418:4:7",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2398:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_ptr_$_t_struct$_Stack_Struct_$993_storage_$returns$__$attached_to$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DEX.Stack_Struct storage ref[] storage pointer,struct DEX.Stack_Struct storage ref)"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "2398:28:7"
											},
											{
												"expression": {
													"id": 1228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1220,
														"name": "stackingRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "2437:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1223,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1221,
																				"name": "_y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1046,
																				"src": "2454:2:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1222,
																				"name": "precision",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "2459:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2454:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1224,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2453:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1225,
																	"name": "_x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "2472:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2453:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1227,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2452:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2437:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1229,
												"nodeType": "ExpressionStatement",
												"src": "2437:38:7"
											},
											{
												"expression": {
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1230,
														"name": "originalX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "2486:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1231,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "2498:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2486:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "2486:14:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1234,
														"name": "_updateK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "2511:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2511:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "2511:10:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1238,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2542:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2546:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2542:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1240,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1177,
															"src": "2554:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1241,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2567:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2571:5:7",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2567:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1237,
														"name": "Stack",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "2536:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2536:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "EmitStatement",
												"src": "2531:46:7"
											}
										]
									},
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_stack",
									"nameLocation": "2075:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "meme_amount",
												"nameLocation": "2090:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "2082:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2082:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "2111:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "2103:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2103:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2081:41:7"
									},
									"returnParameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2132:0:7"
									},
									"scope": 2110,
									"src": "2066:518:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1249,
									"mutability": "mutable",
									"name": "originalX",
									"nameLocation": "2607:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 2110,
									"src": "2590:31:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2590:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"id": 1248,
										"name": "_x",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1044,
										"src": "2619:2:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1397,
										"nodeType": "Block",
										"src": "2670:1144:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1255,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1251,
																"src": "2688:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1256,
																		"name": "Stacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1034,
																		"src": "2696:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
																		}
																	},
																	"id": 1259,
																	"indexExpression": {
																		"expression": {
																			"id": 1257,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2704:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2708:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2704:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2696:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage",
																		"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
																	}
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2716:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2696:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2688:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e646578206f7574206f6620626f756e6473",
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2724:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
																"typeString": "literal_string \"Index out of bounds\""
															},
															"value": "Index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
																"typeString": "literal_string \"Index out of bounds\""
															}
														],
														"id": 1254,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2680:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2680:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "2680:66:7"
											},
											{
												"assignments": [
													1267
												],
												"declarations": [
													{
														"constant": false,
														"id": 1267,
														"mutability": "mutable",
														"name": "ss",
														"nameLocation": "2777:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1397,
														"src": "2757:22:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
															"typeString": "struct DEX.Stack_Struct"
														},
														"typeName": {
															"id": 1266,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1265,
																"name": "Stack_Struct",
																"nameLocations": [
																	"2757:12:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 993,
																"src": "2757:12:7"
															},
															"referencedDeclaration": 993,
															"src": "2757:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stack_Struct_$993_storage_ptr",
																"typeString": "struct DEX.Stack_Struct"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1274,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1268,
															"name": "Stacked",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1034,
															"src": "2782:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
															}
														},
														"id": 1271,
														"indexExpression": {
															"expression": {
																"id": 1269,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2790:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2794:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2790:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2782:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage",
															"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
														}
													},
													"id": 1273,
													"indexExpression": {
														"id": 1272,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "2802:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2782:26:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stack_Struct_$993_storage",
														"typeString": "struct DEX.Stack_Struct storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2757:51:7"
											},
											{
												"assignments": [
													1276
												],
												"declarations": [
													{
														"constant": false,
														"id": 1276,
														"mutability": "mutable",
														"name": "tax",
														"nameLocation": "2827:3:7",
														"nodeType": "VariableDeclaration",
														"scope": 1397,
														"src": "2819:11:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2819:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1280,
												"initialValue": {
													"arguments": [
														{
															"id": 1278,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "2848:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1277,
														"name": "_distributeTax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "2833:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2833:21:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2819:35:7"
											},
											{
												"assignments": [
													1282
												],
												"declarations": [
													{
														"constant": false,
														"id": 1282,
														"mutability": "mutable",
														"name": "meme_to_return",
														"nameLocation": "2872:14:7",
														"nodeType": "VariableDeclaration",
														"scope": 1397,
														"src": "2864:22:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1281,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2864:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1285,
												"initialValue": {
													"expression": {
														"id": 1283,
														"name": "ss",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "2889:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
															"typeString": "struct DEX.Stack_Struct memory"
														}
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2892:11:7",
													"memberName": "meme_amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 988,
													"src": "2889:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2864:39:7"
											},
											{
												"assignments": [
													1287
												],
												"declarations": [
													{
														"constant": false,
														"id": 1287,
														"mutability": "mutable",
														"name": "eth_to_return",
														"nameLocation": "2921:13:7",
														"nodeType": "VariableDeclaration",
														"scope": 1397,
														"src": "2913:21:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1286,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2913:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1292,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1288,
															"name": "ss",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "2937:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
																"typeString": "struct DEX.Stack_Struct memory"
															}
														},
														"id": 1289,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2940:10:7",
														"memberName": "eth_amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 990,
														"src": "2937:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1290,
														"name": "tax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1276,
														"src": "2953:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2937:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2913:43:7"
											},
											{
												"expression": {
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1293,
														"name": "originalX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1249,
														"src": "2966:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1294,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "2978:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2966:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1296,
												"nodeType": "ExpressionStatement",
												"src": "2966:14:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1298,
																"name": "meme_to_return",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1282,
																"src": "3012:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1303,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3053:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_DEX_$2110",
																					"typeString": "contract DEX"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_DEX_$2110",
																					"typeString": "contract DEX"
																				}
																			],
																			"id": 1302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3045:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1301,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3045:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3045:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1299,
																		"name": "meme",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "3030:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$807",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 1300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3035:9:7",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 319,
																	"src": "3030:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3030:29:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3012:47:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536f7272792043757272656e746c79207468697320636f6e747261637420646f65736e27742068617665204d656d6520746f2072657475726e2c20436865636b206261636b20536f6f6e21",
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3073:77:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_420e5b55c2a1e24d83b9e05813ebfcbc021e37999e94a679003aeae679b03f0b",
																"typeString": "literal_string \"Sorry Currently this contract doesn't have Meme to return, Check back Soon!\""
															},
															"value": "Sorry Currently this contract doesn't have Meme to return, Check back Soon!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_420e5b55c2a1e24d83b9e05813ebfcbc021e37999e94a679003aeae679b03f0b",
																"typeString": "literal_string \"Sorry Currently this contract doesn't have Meme to return, Check back Soon!\""
															}
														],
														"id": 1297,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2991:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2991:169:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "2991:169:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1311,
																"name": "eth_to_return",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1287,
																"src": "3191:13:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1314,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3216:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_DEX_$2110",
																				"typeString": "contract DEX"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_DEX_$2110",
																				"typeString": "contract DEX"
																			}
																		],
																		"id": 1313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3208:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1312,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3208:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3208:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3222:7:7",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "3208:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3191:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536f7272792043757272656e746c79207468697320636f6e747261637420646f65736e277420686176652045746820746f2072657475726e2c20436865636b206261636b20536f6f6e21",
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3243:76:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4a553fec1f423c8cd4748b1aaff7e9000972fd303793b6f6abe7b83513bc6b9a",
																"typeString": "literal_string \"Sorry Currently this contract doesn't have Eth to return, Check back Soon!\""
															},
															"value": "Sorry Currently this contract doesn't have Eth to return, Check back Soon!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4a553fec1f423c8cd4748b1aaff7e9000972fd303793b6f6abe7b83513bc6b9a",
																"typeString": "literal_string \"Sorry Currently this contract doesn't have Eth to return, Check back Soon!\""
															}
														],
														"id": 1310,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3170:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3170:159:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1320,
												"nodeType": "ExpressionStatement",
												"src": "3170:159:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1324,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3353:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3357:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3353:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1326,
															"name": "meme_to_return",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "3365:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1321,
															"name": "meme",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "3339:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$807",
																"typeString": "contract ERC20"
															}
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3344:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 344,
														"src": "3339:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3339:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1328,
												"nodeType": "ExpressionStatement",
												"src": "3339:41:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1335,
															"name": "eth_to_return",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "3419:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1331,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3398:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3402:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3398:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3390:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1329,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3390:8:7",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3390:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3410:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "3390:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3390:43:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1337,
												"nodeType": "ExpressionStatement",
												"src": "3390:43:7"
											},
											{
												"expression": {
													"id": 1349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1338,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "3444:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1339,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1044,
																		"src": "3450:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1340,
																		"name": "meme_to_return",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1282,
																		"src": "3456:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3450:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1342,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3449:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "30",
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3498:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"id": 1348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "3449:50:7",
														"trueExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1343,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1044,
																		"src": "3475:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1344,
																		"name": "meme_to_return",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1282,
																		"src": "3480:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3475:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1346,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3474:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3444:55:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1350,
												"nodeType": "ExpressionStatement",
												"src": "3444:55:7"
											},
											{
												"expression": {
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1351,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "3509:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1352,
																		"name": "_y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1046,
																		"src": "3515:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1353,
																		"name": "eth_to_return",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "3521:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3515:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1355,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3514:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"hexValue": "30",
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3561:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"id": 1361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "3514:48:7",
														"trueExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1356,
																		"name": "_y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1046,
																		"src": "3539:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1357,
																		"name": "eth_to_return",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1287,
																		"src": "3544:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3539:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1359,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3538:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3509:53:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "3509:53:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1364,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "3577:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3583:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3577:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1381,
													"nodeType": "Block",
													"src": "3633:61:7",
													"statements": [
														{
															"expression": {
																"id": 1379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1372,
																	"name": "stackingRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "3647:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1375,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1373,
																					"name": "_y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1046,
																					"src": "3663:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 1374,
																					"name": "precision",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1049,
																					"src": "3668:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3663:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1376,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3662:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1377,
																		"name": "_x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1044,
																		"src": "3681:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3662:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3647:36:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1380,
															"nodeType": "ExpressionStatement",
															"src": "3647:36:7"
														}
													]
												},
												"id": 1382,
												"nodeType": "IfStatement",
												"src": "3573:121:7",
												"trueBody": {
													"id": 1371,
													"nodeType": "Block",
													"src": "3586:41:7",
													"statements": [
														{
															"expression": {
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1367,
																	"name": "stackingRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1040,
																	"src": "3600:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3615:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3600:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1370,
															"nodeType": "ExpressionStatement",
															"src": "3600:16:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1384,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "3715:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1383,
														"name": "_removeArr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "3704:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3704:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1386,
												"nodeType": "ExpressionStatement",
												"src": "3704:17:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1387,
														"name": "_updateK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "3732:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3732:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1389,
												"nodeType": "ExpressionStatement",
												"src": "3732:10:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1391,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3765:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3769:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3765:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1393,
															"name": "meme_to_return",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "3777:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1394,
															"name": "eth_to_return",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "3793:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1390,
														"name": "UnStack",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "3757:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3757:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1396,
												"nodeType": "EmitStatement",
												"src": "3752:55:7"
											}
										]
									},
									"id": 1398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unstack",
									"nameLocation": "2637:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2654:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "2646:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2646:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:15:7"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2670:0:7"
									},
									"scope": 2110,
									"src": "2628:1186:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1455,
										"nodeType": "Block",
										"src": "3864:268:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1404,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "3882:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1405,
																		"name": "Stacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1034,
																		"src": "3890:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
																		}
																	},
																	"id": 1408,
																	"indexExpression": {
																		"expression": {
																			"id": 1406,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3898:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1407,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3902:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3898:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3890:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage",
																		"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
																	}
																},
																"id": 1409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3910:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3890:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3882:34:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e646578206f7574206f6620626f756e6473",
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3918:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
																"typeString": "literal_string \"Index out of bounds\""
															},
															"value": "Index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
																"typeString": "literal_string \"Index out of bounds\""
															}
														],
														"id": 1403,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3874:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:66:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1413,
												"nodeType": "ExpressionStatement",
												"src": "3874:66:7"
											},
											{
												"body": {
													"id": 1446,
													"nodeType": "Block",
													"src": "4015:76:7",
													"statements": [
														{
															"expression": {
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1430,
																			"name": "Stacked",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1034,
																			"src": "4029:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
																				"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
																			}
																		},
																		"id": 1434,
																		"indexExpression": {
																			"expression": {
																				"id": 1431,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4037:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4041:6:7",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4037:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4029:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage",
																			"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
																		}
																	},
																	"id": 1435,
																	"indexExpression": {
																		"id": 1433,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1415,
																		"src": "4049:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4029:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stack_Struct_$993_storage",
																		"typeString": "struct DEX.Stack_Struct storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1436,
																			"name": "Stacked",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1034,
																			"src": "4054:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
																				"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
																			}
																		},
																		"id": 1439,
																		"indexExpression": {
																			"expression": {
																				"id": 1437,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4062:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4066:6:7",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4062:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4054:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage",
																			"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
																		}
																	},
																	"id": 1443,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1440,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1415,
																			"src": "4074:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4078:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "4074:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4054:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stack_Struct_$993_storage",
																		"typeString": "struct DEX.Stack_Struct storage ref"
																	}
																},
																"src": "4029:51:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stack_Struct_$993_storage",
																	"typeString": "struct DEX.Stack_Struct storage ref"
																}
															},
															"id": 1445,
															"nodeType": "ExpressionStatement",
															"src": "4029:51:7"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1418,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1415,
														"src": "3974:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 1419,
																	"name": "Stacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1034,
																	"src": "3978:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
																		"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
																	}
																},
																"id": 1422,
																"indexExpression": {
																	"expression": {
																		"id": 1420,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3986:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3990:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3986:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3978:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage",
																	"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
																}
															},
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3998:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3978:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4007:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3978:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3974:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1447,
												"initializationExpression": {
													"assignments": [
														1415
													],
													"declarations": [
														{
															"constant": false,
															"id": 1415,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3963:1:7",
															"nodeType": "VariableDeclaration",
															"scope": 1447,
															"src": "3955:9:7",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1414,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3955:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1417,
													"initialValue": {
														"id": 1416,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1400,
														"src": "3967:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3955:17:7"
												},
												"loopExpression": {
													"expression": {
														"id": 1428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4010:3:7",
														"subExpression": {
															"id": 1427,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "4010:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1429,
													"nodeType": "ExpressionStatement",
													"src": "4010:3:7"
												},
												"nodeType": "ForStatement",
												"src": "3950:141:7"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"baseExpression": {
																"id": 1448,
																"name": "Stacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1034,
																"src": "4100:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
																}
															},
															"id": 1451,
															"indexExpression": {
																"expression": {
																	"id": 1449,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4108:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4112:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4108:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4100:19:7",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage",
																"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
															}
														},
														"id": 1452,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4120:3:7",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "4100:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DEX.Stack_Struct storage ref[] storage pointer)"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4100:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "4100:25:7"
											}
										]
									},
									"id": 1456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_removeArr",
									"nameLocation": "3829:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "3848:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "3840:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3840:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3839:15:7"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3864:0:7"
									},
									"scope": 2110,
									"src": "3820:312:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1551,
										"nodeType": "Block",
										"src": "5453:723:7",
										"statements": [
											{
												"assignments": [
													1464
												],
												"declarations": [
													{
														"constant": false,
														"id": 1464,
														"mutability": "mutable",
														"name": "taxShare",
														"nameLocation": "5471:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1551,
														"src": "5463:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1463,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5463:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1466,
												"initialValue": {
													"hexValue": "30",
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5482:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5463:20:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1467,
															"name": "dailyTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "5497:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1472,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1468,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5506:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5512:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5506:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31",
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5524:6:7",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															},
															"src": "5506:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5497:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5534:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5497:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1548,
												"nodeType": "IfStatement",
												"src": "5493:652:7",
												"trueBody": {
													"id": 1547,
													"nodeType": "Block",
													"src": "5537:608:7",
													"statements": [
														{
															"assignments": [
																1479
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1479,
																	"mutability": "mutable",
																	"name": "stacks",
																	"nameLocation": "5573:6:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1547,
																	"src": "5551:28:7",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct DEX.Stack_Struct[]"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 1477,
																			"nodeType": "UserDefinedTypeName",
																			"pathNode": {
																				"id": 1476,
																				"name": "Stack_Struct",
																				"nameLocations": [
																					"5551:12:7"
																				],
																				"nodeType": "IdentifierPath",
																				"referencedDeclaration": 993,
																				"src": "5551:12:7"
																			},
																			"referencedDeclaration": 993,
																			"src": "5551:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stack_Struct_$993_storage_ptr",
																				"typeString": "struct DEX.Stack_Struct"
																			}
																		},
																		"id": 1478,
																		"nodeType": "ArrayTypeName",
																		"src": "5551:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_ptr",
																			"typeString": "struct DEX.Stack_Struct[]"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1484,
															"initialValue": {
																"baseExpression": {
																	"id": 1480,
																	"name": "Stacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1034,
																	"src": "5582:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage_$",
																		"typeString": "mapping(address => struct DEX.Stack_Struct storage ref[] storage ref)"
																	}
																},
																"id": 1483,
																"indexExpression": {
																	"expression": {
																		"id": 1481,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5590:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5594:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5590:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5582:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_storage_$dyn_storage",
																	"typeString": "struct DEX.Stack_Struct storage ref[] storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5551:50:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1486,
																			"name": "poolIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1458,
																			"src": "5623:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"expression": {
																				"id": 1487,
																				"name": "stacks",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1479,
																				"src": "5635:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct DEX.Stack_Struct memory[] memory"
																				}
																			},
																			"id": 1488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5642:6:7",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5635:13:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5623:25:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c696420706f6f6c20696e646578",
																		"id": 1490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5650:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_dd6b63468bea601aadd3bce26c907cd8f24675c7343a04be7e19210fd1c03f99",
																			"typeString": "literal_string \"Invalid pool index\""
																		},
																		"value": "Invalid pool index"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_dd6b63468bea601aadd3bce26c907cd8f24675c7343a04be7e19210fd1c03f99",
																			"typeString": "literal_string \"Invalid pool index\""
																		}
																	],
																	"id": 1485,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5615:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5615:56:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1492,
															"nodeType": "ExpressionStatement",
															"src": "5615:56:7"
														},
														{
															"assignments": [
																1495
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1495,
																	"mutability": "mutable",
																	"name": "ss",
																	"nameLocation": "5706:2:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1547,
																	"src": "5686:22:7",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
																		"typeString": "struct DEX.Stack_Struct"
																	},
																	"typeName": {
																		"id": 1494,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1493,
																			"name": "Stack_Struct",
																			"nameLocations": [
																				"5686:12:7"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 993,
																			"src": "5686:12:7"
																		},
																		"referencedDeclaration": 993,
																		"src": "5686:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stack_Struct_$993_storage_ptr",
																			"typeString": "struct DEX.Stack_Struct"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1499,
															"initialValue": {
																"baseExpression": {
																	"id": 1496,
																	"name": "stacks",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1479,
																	"src": "5711:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Stack_Struct_$993_memory_ptr_$dyn_memory_ptr",
																		"typeString": "struct DEX.Stack_Struct memory[] memory"
																	}
																},
																"id": 1498,
																"indexExpression": {
																	"id": 1497,
																	"name": "poolIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1458,
																	"src": "5718:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5711:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
																	"typeString": "struct DEX.Stack_Struct memory"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5686:42:7"
														},
														{
															"assignments": [
																1501
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1501,
																	"mutability": "mutable",
																	"name": "poolShare",
																	"nameLocation": "5750:9:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1547,
																	"src": "5742:17:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1500,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5742:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1509,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1502,
																					"name": "ss",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1495,
																					"src": "5763:2:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
																						"typeString": "struct DEX.Stack_Struct memory"
																					}
																				},
																				"id": 1503,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5766:11:7",
																				"memberName": "meme_amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 988,
																				"src": "5763:14:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1504,
																				"name": "precision",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1049,
																				"src": "5780:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5763:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1506,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5762:28:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1507,
																	"name": "originalX",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1249,
																	"src": "5793:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5762:40:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5742:60:7"
														},
														{
															"assignments": [
																1511
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1511,
																	"mutability": "mutable",
																	"name": "creationTime",
																	"nameLocation": "5825:12:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1547,
																	"src": "5817:20:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1510,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5817:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1514,
															"initialValue": {
																"expression": {
																	"id": 1512,
																	"name": "ss",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1495,
																	"src": "5840:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stack_Struct_$993_memory_ptr",
																		"typeString": "struct DEX.Stack_Struct memory"
																	}
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5843:4:7",
																"memberName": "time",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 992,
																"src": "5840:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5817:30:7"
														},
														{
															"assignments": [
																1516
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1516,
																	"mutability": "mutable",
																	"name": "currentDay",
																	"nameLocation": "5869:10:7",
																	"nodeType": "VariableDeclaration",
																	"scope": 1547,
																	"src": "5861:18:7",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1515,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5861:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1521,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1517,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "5882:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5888:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "5882:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5900:6:7",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_86400_by_1",
																		"typeString": "int_const 86400"
																	},
																	"value": "1"
																},
																"src": "5882:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5861:45:7"
														},
														{
															"body": {
																"id": 1545,
																"nodeType": "Block",
																"src": "6051:84:7",
																"statements": [
																	{
																		"expression": {
																			"id": 1543,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1534,
																				"name": "taxShare",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1464,
																				"src": "6069:8:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1542,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1539,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1535,
																								"name": "poolShare",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1501,
																								"src": "6082:9:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "*",
																							"rightExpression": {
																								"baseExpression": {
																									"id": 1536,
																									"name": "dailyTax",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1038,
																									"src": "6094:8:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																										"typeString": "mapping(uint256 => uint256)"
																									}
																								},
																								"id": 1538,
																								"indexExpression": {
																									"id": 1537,
																									"name": "day",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1523,
																									"src": "6103:3:7",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "6094:13:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "6082:25:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1540,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "6081:27:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1541,
																					"name": "precision",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1049,
																					"src": "6111:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "6081:39:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6069:51:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1544,
																		"nodeType": "ExpressionStatement",
																		"src": "6069:51:7"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1528,
																	"name": "day",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1523,
																	"src": "5996:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1529,
																	"name": "currentDay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1516,
																	"src": "6003:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5996:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1546,
															"initializationExpression": {
																"assignments": [
																	1523
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1523,
																		"mutability": "mutable",
																		"name": "day",
																		"nameLocation": "5951:3:7",
																		"nodeType": "VariableDeclaration",
																		"scope": 1546,
																		"src": "5943:11:7",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1522,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5943:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1527,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1524,
																		"name": "creationTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1511,
																		"src": "5957:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5972:6:7",
																		"subdenomination": "days",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_86400_by_1",
																			"typeString": "int_const 86400"
																		},
																		"value": "1"
																	},
																	"src": "5957:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "5943:35:7"
															},
															"loopExpression": {
																"expression": {
																	"id": 1532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "6031:5:7",
																	"subExpression": {
																		"id": 1531,
																		"name": "day",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1523,
																		"src": "6031:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1533,
																"nodeType": "ExpressionStatement",
																"src": "6031:5:7"
															},
															"nodeType": "ForStatement",
															"src": "5921:214:7"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1549,
													"name": "taxShare",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1464,
													"src": "6161:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1462,
												"id": 1550,
												"nodeType": "Return",
												"src": "6154:15:7"
											}
										]
									},
									"functionSelector": "d37a389b",
									"id": 1552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_distributeTax",
									"nameLocation": "5389:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "poolIndex",
												"nameLocation": "5412:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "5404:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5404:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5403:19:7"
									},
									"returnParameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1552,
												"src": "5444:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5444:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5443:9:7"
									},
									"scope": 2110,
									"src": "5380:796:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1641,
										"nodeType": "Block",
										"src": "7268:566:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1562,
																"name": "_k",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1042,
																"src": "7286:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7291:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7286:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768206c6971756964697479",
															"id": 1565,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7294:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
																"typeString": "literal_string \"Not enough liquidity\""
															},
															"value": "Not enough liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
																"typeString": "literal_string \"Not enough liquidity\""
															}
														],
														"id": 1561,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7278:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7278:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1567,
												"nodeType": "ExpressionStatement",
												"src": "7278:39:7"
											},
											{
												"assignments": [
													1569
												],
												"declarations": [
													{
														"constant": false,
														"id": 1569,
														"mutability": "mutable",
														"name": "dx",
														"nameLocation": "7335:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1641,
														"src": "7327:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1568,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7327:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1571,
												"initialValue": {
													"hexValue": "30",
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7340:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7327:14:7"
											},
											{
												"assignments": [
													1573
												],
												"declarations": [
													{
														"constant": false,
														"id": 1573,
														"mutability": "mutable",
														"name": "dy",
														"nameLocation": "7359:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1641,
														"src": "7351:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1572,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7351:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1575,
												"initialValue": {
													"hexValue": "30",
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7364:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7351:14:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1576,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "7379:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7385:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7379:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1596,
													"nodeType": "Block",
													"src": "7444:51:7",
													"statements": [
														{
															"expression": {
																"id": 1594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1588,
																	"name": "dx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1569,
																	"src": "7458:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1589,
																			"name": "_k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1042,
																			"src": "7463:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1590,
																			"name": "_y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1046,
																			"src": "7468:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7463:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1592,
																		"name": "meme_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1554,
																		"src": "7473:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7463:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7458:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1595,
															"nodeType": "ExpressionStatement",
															"src": "7458:26:7"
														}
													]
												},
												"id": 1597,
												"nodeType": "IfStatement",
												"src": "7375:120:7",
												"trueBody": {
													"id": 1587,
													"nodeType": "Block",
													"src": "7388:50:7",
													"statements": [
														{
															"expression": {
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1579,
																	"name": "dx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1569,
																	"src": "7402:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1580,
																			"name": "_k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1042,
																			"src": "7407:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7412:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "7407:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1583,
																		"name": "meme_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1554,
																		"src": "7416:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7407:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7402:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1586,
															"nodeType": "ExpressionStatement",
															"src": "7402:25:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1598,
														"name": "dx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "7508:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7514:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7508:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1614,
													"nodeType": "Block",
													"src": "7559:37:7",
													"statements": [
														{
															"expression": {
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1608,
																	"name": "dy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1573,
																	"src": "7573:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1609,
																		"name": "_k",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "7578:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1610,
																		"name": "dx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1569,
																		"src": "7583:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7578:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7573:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1613,
															"nodeType": "ExpressionStatement",
															"src": "7573:12:7"
														}
													]
												},
												"id": 1615,
												"nodeType": "IfStatement",
												"src": "7504:92:7",
												"trueBody": {
													"id": 1607,
													"nodeType": "Block",
													"src": "7517:36:7",
													"statements": [
														{
															"expression": {
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1601,
																	"name": "dy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1573,
																	"src": "7531:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1602,
																		"name": "_k",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "7536:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7541:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "7536:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7531:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1606,
															"nodeType": "ExpressionStatement",
															"src": "7531:11:7"
														}
													]
												}
											},
											{
												"assignments": [
													1617
												],
												"declarations": [
													{
														"constant": false,
														"id": 1617,
														"mutability": "mutable",
														"name": "eth_price_without_tax",
														"nameLocation": "7613:21:7",
														"nodeType": "VariableDeclaration",
														"scope": 1641,
														"src": "7605:29:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1616,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7605:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1621,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1618,
														"name": "dy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1573,
														"src": "7637:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1619,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "7642:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7637:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7605:39:7"
											},
											{
												"assignments": [
													1623
												],
												"declarations": [
													{
														"constant": false,
														"id": 1623,
														"mutability": "mutable",
														"name": "eth_tax",
														"nameLocation": "7662:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1641,
														"src": "7654:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1622,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7654:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1630,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1624,
																	"name": "eth_price_without_tax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "7673:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1625,
																	"name": "taxRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "7697:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7673:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1627,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7672:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1628,
														"name": "precision",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "7708:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7672:45:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7654:63:7"
											},
											{
												"assignments": [
													1632
												],
												"declarations": [
													{
														"constant": false,
														"id": 1632,
														"mutability": "mutable",
														"name": "eth_price_with_tax",
														"nameLocation": "7736:18:7",
														"nodeType": "VariableDeclaration",
														"scope": 1641,
														"src": "7728:26:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1631,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7728:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1636,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1633,
														"name": "eth_price_without_tax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1617,
														"src": "7757:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1634,
														"name": "eth_tax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1623,
														"src": "7781:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7757:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7728:60:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1637,
														"name": "eth_price_with_tax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "7805:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7826:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "7805:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1560,
												"id": 1640,
												"nodeType": "Return",
												"src": "7798:29:7"
											}
										]
									},
									"functionSelector": "5c572ed0",
									"id": 1642,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1557,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1556,
												"name": "whenNotPaused",
												"nameLocations": [
													"7224:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "7224:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7224:13:7"
										}
									],
									"name": "getMemePrice",
									"nameLocation": "7154:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "meme_amount",
												"nameLocation": "7175:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "7167:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7167:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7166:21:7"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1642,
												"src": "7255:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7255:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7254:9:7"
									},
									"scope": 2110,
									"src": "7145:689:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1721,
										"nodeType": "Block",
										"src": "7915:481:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1650,
																"name": "_k",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1042,
																"src": "7933:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1651,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7938:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7933:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768206c6971756964697479",
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7941:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
																"typeString": "literal_string \"Not enough liquidity\""
															},
															"value": "Not enough liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
																"typeString": "literal_string \"Not enough liquidity\""
															}
														],
														"id": 1649,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7925:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7925:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1655,
												"nodeType": "ExpressionStatement",
												"src": "7925:39:7"
											},
											{
												"assignments": [
													1657
												],
												"declarations": [
													{
														"constant": false,
														"id": 1657,
														"mutability": "mutable",
														"name": "dx",
														"nameLocation": "7982:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1721,
														"src": "7974:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1656,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7974:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1659,
												"initialValue": {
													"hexValue": "30",
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7987:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7974:14:7"
											},
											{
												"assignments": [
													1661
												],
												"declarations": [
													{
														"constant": false,
														"id": 1661,
														"mutability": "mutable",
														"name": "dy",
														"nameLocation": "8006:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1721,
														"src": "7998:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1660,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7998:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1663,
												"initialValue": {
													"hexValue": "30",
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8011:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7998:14:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1664,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "8026:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1665,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8032:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8026:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1684,
													"nodeType": "Block",
													"src": "8091:51:7",
													"statements": [
														{
															"expression": {
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1676,
																	"name": "dx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1657,
																	"src": "8105:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1677,
																			"name": "_k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1042,
																			"src": "8110:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1678,
																			"name": "_y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1046,
																			"src": "8115:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8110:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1680,
																		"name": "meme_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1644,
																		"src": "8120:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8110:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8105:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1683,
															"nodeType": "ExpressionStatement",
															"src": "8105:26:7"
														}
													]
												},
												"id": 1685,
												"nodeType": "IfStatement",
												"src": "8022:120:7",
												"trueBody": {
													"id": 1675,
													"nodeType": "Block",
													"src": "8035:50:7",
													"statements": [
														{
															"expression": {
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1667,
																	"name": "dx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1657,
																	"src": "8049:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1668,
																			"name": "_k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1042,
																			"src": "8054:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8059:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "8054:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1671,
																		"name": "meme_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1644,
																		"src": "8063:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8054:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8049:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1674,
															"nodeType": "ExpressionStatement",
															"src": "8049:25:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1686,
														"name": "dx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1657,
														"src": "8155:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8161:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8155:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1702,
													"nodeType": "Block",
													"src": "8206:37:7",
													"statements": [
														{
															"expression": {
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1696,
																	"name": "dy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1661,
																	"src": "8220:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1697,
																		"name": "_k",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "8225:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1698,
																		"name": "dx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1657,
																		"src": "8230:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8225:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8220:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1701,
															"nodeType": "ExpressionStatement",
															"src": "8220:12:7"
														}
													]
												},
												"id": 1703,
												"nodeType": "IfStatement",
												"src": "8151:92:7",
												"trueBody": {
													"id": 1695,
													"nodeType": "Block",
													"src": "8164:36:7",
													"statements": [
														{
															"expression": {
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1689,
																	"name": "dy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1661,
																	"src": "8178:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1690,
																		"name": "_k",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "8183:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8188:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "8183:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8178:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1694,
															"nodeType": "ExpressionStatement",
															"src": "8178:11:7"
														}
													]
												}
											},
											{
												"assignments": [
													1705
												],
												"declarations": [
													{
														"constant": false,
														"id": 1705,
														"mutability": "mutable",
														"name": "eth_price_without_tax",
														"nameLocation": "8260:21:7",
														"nodeType": "VariableDeclaration",
														"scope": 1721,
														"src": "8252:29:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1704,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8252:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1709,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1706,
														"name": "dy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1661,
														"src": "8284:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1707,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "8289:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8284:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8252:39:7"
											},
											{
												"assignments": [
													1711
												],
												"declarations": [
													{
														"constant": false,
														"id": 1711,
														"mutability": "mutable",
														"name": "eth_tax",
														"nameLocation": "8309:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1721,
														"src": "8301:15:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1710,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8301:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1718,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1712,
																	"name": "eth_price_without_tax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1705,
																	"src": "8320:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1713,
																	"name": "taxRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "8344:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8320:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1715,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8319:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1716,
														"name": "precision",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "8355:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8319:45:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8301:63:7"
											},
											{
												"expression": {
													"id": 1719,
													"name": "eth_tax",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1711,
													"src": "8382:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1648,
												"id": 1720,
												"nodeType": "Return",
												"src": "8375:14:7"
											}
										]
									},
									"id": 1722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateTax",
									"nameLocation": "7849:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "meme_amount",
												"nameLocation": "7870:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "7862:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7862:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7861:21:7"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "7906:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7906:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7905:9:7"
									},
									"scope": 2110,
									"src": "7840:556:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1809,
										"nodeType": "Block",
										"src": "8523:637:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1732,
																"name": "_k",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1042,
																"src": "8541:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1733,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8546:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8541:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f756768206c6971756964697479",
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8549:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
																"typeString": "literal_string \"Not enough liquidity\""
															},
															"value": "Not enough liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9ffa389f9dd3a84666d7e7425c7bc9ef75477a9b3f2d917a4e822ac85908691",
																"typeString": "literal_string \"Not enough liquidity\""
															}
														],
														"id": 1731,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8533:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8533:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1737,
												"nodeType": "ExpressionStatement",
												"src": "8533:39:7"
											},
											{
												"assignments": [
													1739
												],
												"declarations": [
													{
														"constant": false,
														"id": 1739,
														"mutability": "mutable",
														"name": "dx",
														"nameLocation": "8590:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1809,
														"src": "8582:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1738,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8582:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1741,
												"initialValue": {
													"hexValue": "30",
													"id": 1740,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8595:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8582:14:7"
											},
											{
												"assignments": [
													1743
												],
												"declarations": [
													{
														"constant": false,
														"id": 1743,
														"mutability": "mutable",
														"name": "dy",
														"nameLocation": "8614:2:7",
														"nodeType": "VariableDeclaration",
														"scope": 1809,
														"src": "8606:10:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1742,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8606:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1745,
												"initialValue": {
													"hexValue": "30",
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8619:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8606:14:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1746,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "8634:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8640:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8634:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1766,
													"nodeType": "Block",
													"src": "8698:50:7",
													"statements": [
														{
															"expression": {
																"id": 1764,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1758,
																	"name": "dy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1743,
																	"src": "8712:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1759,
																			"name": "_k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1042,
																			"src": "8717:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1760,
																			"name": "_x",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1044,
																			"src": "8722:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8717:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1762,
																		"name": "eth_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1724,
																		"src": "8727:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8717:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8712:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1765,
															"nodeType": "ExpressionStatement",
															"src": "8712:25:7"
														}
													]
												},
												"id": 1767,
												"nodeType": "IfStatement",
												"src": "8630:118:7",
												"trueBody": {
													"id": 1757,
													"nodeType": "Block",
													"src": "8643:49:7",
													"statements": [
														{
															"expression": {
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1749,
																	"name": "dy",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1743,
																	"src": "8657:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1750,
																			"name": "_k",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1042,
																			"src": "8662:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1751,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8667:1:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "8662:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1753,
																		"name": "eth_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1724,
																		"src": "8671:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8662:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8657:24:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1756,
															"nodeType": "ExpressionStatement",
															"src": "8657:24:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1768,
														"name": "dy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "8761:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8767:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8761:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1784,
													"nodeType": "Block",
													"src": "8812:37:7",
													"statements": [
														{
															"expression": {
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1778,
																	"name": "dx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1739,
																	"src": "8826:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1779,
																		"name": "_k",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "8831:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1780,
																		"name": "dy",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1743,
																		"src": "8836:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8831:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8826:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1783,
															"nodeType": "ExpressionStatement",
															"src": "8826:12:7"
														}
													]
												},
												"id": 1785,
												"nodeType": "IfStatement",
												"src": "8757:92:7",
												"trueBody": {
													"id": 1777,
													"nodeType": "Block",
													"src": "8770:36:7",
													"statements": [
														{
															"expression": {
																"id": 1775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1771,
																	"name": "dx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1739,
																	"src": "8784:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1772,
																		"name": "_k",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1042,
																		"src": "8789:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8794:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "8789:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8784:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1776,
															"nodeType": "ExpressionStatement",
															"src": "8784:11:7"
														}
													]
												}
											},
											{
												"assignments": [
													1787
												],
												"declarations": [
													{
														"constant": false,
														"id": 1787,
														"mutability": "mutable",
														"name": "meme_price_without_tax",
														"nameLocation": "8866:22:7",
														"nodeType": "VariableDeclaration",
														"scope": 1809,
														"src": "8858:30:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1786,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8858:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1791,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1788,
														"name": "dx",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "8891:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1789,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "8896:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8891:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8858:40:7"
											},
											{
												"assignments": [
													1793
												],
												"declarations": [
													{
														"constant": false,
														"id": 1793,
														"mutability": "mutable",
														"name": "meme_tax",
														"nameLocation": "8916:8:7",
														"nodeType": "VariableDeclaration",
														"scope": 1809,
														"src": "8908:16:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1792,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8908:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1800,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1796,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1794,
																	"name": "meme_price_without_tax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1787,
																	"src": "8928:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1795,
																	"name": "taxRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "8953:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8928:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1797,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8927:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1798,
														"name": "precision",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "8964:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8927:46:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8908:65:7"
											},
											{
												"assignments": [
													1802
												],
												"declarations": [
													{
														"constant": false,
														"id": 1802,
														"mutability": "mutable",
														"name": "meme_price_with_tax",
														"nameLocation": "9068:19:7",
														"nodeType": "VariableDeclaration",
														"scope": 1809,
														"src": "9060:27:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1801,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9060:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1804,
												"initialValue": {
													"id": 1803,
													"name": "meme_price_without_tax",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1787,
													"src": "9090:22:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9060:52:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1805,
														"name": "meme_price_with_tax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1802,
														"src": "9130:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 1806,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9152:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "9130:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1730,
												"id": 1808,
												"nodeType": "Return",
												"src": "9123:30:7"
											}
										]
									},
									"functionSelector": "1a753fed",
									"id": 1810,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1727,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1726,
												"name": "whenNotPaused",
												"nameLocations": [
													"8479:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "8479:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "8479:13:7"
										}
									],
									"name": "getETHPrice",
									"nameLocation": "8411:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "8431:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "8423:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1723,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8423:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8422:20:7"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "8510:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8510:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8509:9:7"
									},
									"scope": 2110,
									"src": "8402:758:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1813,
										"nodeType": "Block",
										"src": "9192:8:7",
										"statements": []
									},
									"id": 1814,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9173:2:7"
									},
									"returnParameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9192:0:7"
									},
									"scope": 2110,
									"src": "9166:34:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1890,
										"nodeType": "Block",
										"src": "9343:471:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1826,
																"name": "meme_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1816,
																"src": "9361:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9375:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9361:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e6420536f6d65204d656d65",
															"id": 1829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9378:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1e959a285e43b242539206d7aeb580dab96669d53083eb53a901cc352065b41",
																"typeString": "literal_string \"Send Some Meme\""
															},
															"value": "Send Some Meme"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1e959a285e43b242539206d7aeb580dab96669d53083eb53a901cc352065b41",
																"typeString": "literal_string \"Send Some Meme\""
															}
														],
														"id": 1825,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9353:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9353:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1831,
												"nodeType": "ExpressionStatement",
												"src": "9353:42:7"
											},
											{
												"assignments": [
													1833
												],
												"declarations": [
													{
														"constant": false,
														"id": 1833,
														"mutability": "mutable",
														"name": "meme_price",
														"nameLocation": "9413:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "9405:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1832,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9405:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1837,
												"initialValue": {
													"arguments": [
														{
															"id": 1835,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "9439:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1834,
														"name": "getMemePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "9426:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9426:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9405:46:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1839,
																"name": "meme_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1833,
																"src": "9469:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1840,
																"name": "msgValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1820,
																"src": "9483:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9469:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e64204d6f726520455448",
															"id": 1842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9493:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f217f4029b3c2ea1dfaeee069952be2dcf9aed543c82bb251eb99c6e5f4f6f3d",
																"typeString": "literal_string \"Send More ETH\""
															},
															"value": "Send More ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f217f4029b3c2ea1dfaeee069952be2dcf9aed543c82bb251eb99c6e5f4f6f3d",
																"typeString": "literal_string \"Send More ETH\""
															}
														],
														"id": 1838,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9461:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9461:48:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1844,
												"nodeType": "ExpressionStatement",
												"src": "9461:48:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1848,
															"name": "ownerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1818,
															"src": "9534:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1849,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "9548:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1845,
															"name": "meme",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "9520:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$807",
																"typeString": "contract ERC20"
															}
														},
														"id": 1847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9525:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 344,
														"src": "9520:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9520:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1851,
												"nodeType": "ExpressionStatement",
												"src": "9520:40:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1857,
																"name": "msgValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1820,
																"src": "9601:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1858,
																"name": "meme_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1833,
																"src": "9612:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9601:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1854,
																	"name": "ownerAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1818,
																	"src": "9578:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9570:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1852,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9570:8:7",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9570:21:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9592:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "9570:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9570:53:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1861,
												"nodeType": "ExpressionStatement",
												"src": "9570:53:7"
											},
											{
												"expression": {
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1862,
															"name": "dailyTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "9634:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1867,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1863,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "9643:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9649:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "9643:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31",
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9661:6:7",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															},
															"src": "9643:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9634:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1869,
																"name": "meme_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1816,
																"src": "9685:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1868,
															"name": "calculateTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "9672:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1870,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9672:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9634:63:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1872,
												"nodeType": "ExpressionStatement",
												"src": "9634:63:7"
											},
											{
												"expression": {
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1873,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "9708:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1874,
														"name": "meme_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1816,
														"src": "9714:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9708:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1876,
												"nodeType": "ExpressionStatement",
												"src": "9708:17:7"
											},
											{
												"expression": {
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1877,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "9735:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1880,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1878,
																	"name": "_k",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "9741:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1879,
																	"name": "_x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "9746:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9741:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1881,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9740:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9735:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1883,
												"nodeType": "ExpressionStatement",
												"src": "9735:14:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1885,
															"name": "ownerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1818,
															"src": "9769:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1886,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1816,
															"src": "9783:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1887,
															"name": "meme_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1833,
															"src": "9796:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1884,
														"name": "Buy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "9765:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9765:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1889,
												"nodeType": "EmitStatement",
												"src": "9760:47:7"
											}
										]
									},
									"functionSelector": "2afaca20",
									"id": 1891,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1823,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1822,
												"name": "whenNotPaused",
												"nameLocations": [
													"9329:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "9329:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "9329:13:7"
										}
									],
									"name": "buy",
									"nameLocation": "9219:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "meme_amount",
												"nameLocation": "9240:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "9232:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9232:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "ownerAddress",
												"nameLocation": "9269:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "9261:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9261:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "msgValue",
												"nameLocation": "9299:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "9291:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9291:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9222:91:7"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9343:0:7"
									},
									"scope": 2110,
									"src": "9210:604:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1968,
										"nodeType": "Block",
										"src": "9883:467:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1899,
																"name": "meme_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1893,
																"src": "9901:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1900,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9915:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9901:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e6420536f6d65204d656d65",
															"id": 1902,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9918:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1e959a285e43b242539206d7aeb580dab96669d53083eb53a901cc352065b41",
																"typeString": "literal_string \"Send Some Meme\""
															},
															"value": "Send Some Meme"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1e959a285e43b242539206d7aeb580dab96669d53083eb53a901cc352065b41",
																"typeString": "literal_string \"Send Some Meme\""
															}
														],
														"id": 1898,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9893:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9893:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1904,
												"nodeType": "ExpressionStatement",
												"src": "9893:42:7"
											},
											{
												"assignments": [
													1906
												],
												"declarations": [
													{
														"constant": false,
														"id": 1906,
														"mutability": "mutable",
														"name": "meme_price",
														"nameLocation": "9953:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1968,
														"src": "9945:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1905,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9945:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1910,
												"initialValue": {
													"arguments": [
														{
															"id": 1908,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1893,
															"src": "9979:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1907,
														"name": "getMemePrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "9966:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9966:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9945:46:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1912,
																"name": "meme_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "10009:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1913,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10023:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10027:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "10023:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10009:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e64204d6f726520455448",
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10034:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f217f4029b3c2ea1dfaeee069952be2dcf9aed543c82bb251eb99c6e5f4f6f3d",
																"typeString": "literal_string \"Send More ETH\""
															},
															"value": "Send More ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f217f4029b3c2ea1dfaeee069952be2dcf9aed543c82bb251eb99c6e5f4f6f3d",
																"typeString": "literal_string \"Send More ETH\""
															}
														],
														"id": 1911,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10001:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10001:49:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1918,
												"nodeType": "ExpressionStatement",
												"src": "10001:49:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1922,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10075:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10079:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10075:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1924,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1893,
															"src": "10087:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1919,
															"name": "meme",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "10061:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$807",
																"typeString": "contract ERC20"
															}
														},
														"id": 1921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10066:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 344,
														"src": "10061:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10061:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1926,
												"nodeType": "ExpressionStatement",
												"src": "10061:38:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1933,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10138:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10142:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "10138:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1935,
																"name": "meme_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1906,
																"src": "10150:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10138:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1929,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "10117:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10121:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "10117:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10109:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1927,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10109:8:7",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10109:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10129:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "10109:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10109:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1938,
												"nodeType": "ExpressionStatement",
												"src": "10109:52:7"
											},
											{
												"expression": {
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1939,
															"name": "dailyTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1038,
															"src": "10172:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1944,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1940,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "10181:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10187:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "10181:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "31",
																"id": 1942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10199:6:7",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_86400_by_1",
																	"typeString": "int_const 86400"
																},
																"value": "1"
															},
															"src": "10181:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10172:34:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1946,
																"name": "meme_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1893,
																"src": "10223:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1945,
															"name": "calculateTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1722,
															"src": "10210:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10210:25:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10172:63:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1949,
												"nodeType": "ExpressionStatement",
												"src": "10172:63:7"
											},
											{
												"expression": {
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1950,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "10246:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1951,
														"name": "meme_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1893,
														"src": "10252:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10246:17:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1953,
												"nodeType": "ExpressionStatement",
												"src": "10246:17:7"
											},
											{
												"expression": {
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1954,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "10273:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1955,
																	"name": "_k",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "10279:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1956,
																	"name": "_x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "10284:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10279:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1958,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10278:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10273:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1960,
												"nodeType": "ExpressionStatement",
												"src": "10273:14:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1962,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10307:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1963,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10311:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10307:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1964,
															"name": "meme_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1893,
															"src": "10319:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1965,
															"name": "meme_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "10332:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1961,
														"name": "Buy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "10303:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10303:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1967,
												"nodeType": "EmitStatement",
												"src": "10298:45:7"
											}
										]
									},
									"functionSelector": "d96a094a",
									"id": 1969,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1896,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1895,
												"name": "whenNotPaused",
												"nameLocations": [
													"9869:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "9869:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "9869:13:7"
										}
									],
									"name": "buy",
									"nameLocation": "9829:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "meme_amount",
												"nameLocation": "9841:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1969,
												"src": "9833:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9833:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9832:21:7"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9883:0:7"
									},
									"scope": 2110,
									"src": "9820:530:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2037,
										"nodeType": "Block",
										"src": "10453:591:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1979,
																"name": "eth_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1971,
																"src": "10471:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1980,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10484:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10471:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e6420536f6d6520455448",
															"id": 1982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10487:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ca05f8819ffb49eed362c8482e2f89607806b624518b85b488890406834d3efe",
																"typeString": "literal_string \"Send Some ETH\""
															},
															"value": "Send Some ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ca05f8819ffb49eed362c8482e2f89607806b624518b85b488890406834d3efe",
																"typeString": "literal_string \"Send Some ETH\""
															}
														],
														"id": 1978,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10463:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10463:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1984,
												"nodeType": "ExpressionStatement",
												"src": "10463:40:7"
											},
											{
												"assignments": [
													1986
												],
												"declarations": [
													{
														"constant": false,
														"id": 1986,
														"mutability": "mutable",
														"name": "eth_price",
														"nameLocation": "10521:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 2037,
														"src": "10513:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1985,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10513:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1990,
												"initialValue": {
													"arguments": [
														{
															"id": 1988,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "10545:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1987,
														"name": "getETHPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1810,
														"src": "10533:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10533:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10513:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1992,
																"name": "eth_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1986,
																"src": "10588:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1995,
																		"name": "ownerAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1973,
																		"src": "10616:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1993,
																		"name": "meme",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "10601:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$807",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 1994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10606:9:7",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 319,
																	"src": "10601:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10601:28:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10588:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206861766520656e6f756768206d656d65",
															"id": 1998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10643:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b99b2e78c78f1318a3232374cbc7b00c7eadb27370706844a7052723adaf5ddc",
																"typeString": "literal_string \"You don't have enough meme\""
															},
															"value": "You don't have enough meme"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b99b2e78c78f1318a3232374cbc7b00c7eadb27370706844a7052723adaf5ddc",
																"typeString": "literal_string \"You don't have enough meme\""
															}
														],
														"id": 1991,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10567:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10567:114:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2000,
												"nodeType": "ExpressionStatement",
												"src": "10567:114:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2004,
															"name": "ownerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "10709:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2007,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10731:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DEX_$2110",
																		"typeString": "contract DEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DEX_$2110",
																		"typeString": "contract DEX"
																	}
																],
																"id": 2006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10723:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2005,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10723:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10723:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2009,
															"name": "eth_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1986,
															"src": "10738:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2001,
															"name": "meme",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "10691:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$807",
																"typeString": "contract ERC20"
															}
														},
														"id": 2003,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10696:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 420,
														"src": "10691:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10691:57:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2011,
												"nodeType": "ExpressionStatement",
												"src": "10691:57:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2017,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "10789:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2014,
																	"name": "ownerAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1973,
																	"src": "10766:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2013,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10758:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2012,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10758:8:7",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10758:21:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10780:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "10758:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10758:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2019,
												"nodeType": "ExpressionStatement",
												"src": "10758:42:7"
											},
											{
												"expression": {
													"id": 2022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2020,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "10940:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2021,
														"name": "eth_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1971,
														"src": "10946:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10940:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2023,
												"nodeType": "ExpressionStatement",
												"src": "10940:16:7"
											},
											{
												"expression": {
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2024,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "10966:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2025,
																	"name": "_k",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "10972:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2026,
																	"name": "_y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1046,
																	"src": "10977:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10972:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2028,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10971:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10966:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2030,
												"nodeType": "ExpressionStatement",
												"src": "10966:14:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2032,
															"name": "ownerAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1973,
															"src": "11001:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2033,
															"name": "eth_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1986,
															"src": "11015:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2034,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "11026:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2031,
														"name": "Sell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "10996:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10996:41:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2036,
												"nodeType": "EmitStatement",
												"src": "10991:46:7"
											}
										]
									},
									"functionSelector": "4189a68e",
									"id": 2038,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1976,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1975,
												"name": "whenNotPaused",
												"nameLocations": [
													"10435:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "10435:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "10435:13:7"
										}
									],
									"name": "sell",
									"nameLocation": "10365:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "10378:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "10370:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10370:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "ownerAddress",
												"nameLocation": "10398:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 2038,
												"src": "10390:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10390:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10369:42:7"
									},
									"returnParameters": {
										"id": 1977,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10453:0:7"
									},
									"scope": 2110,
									"src": "10356:688:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2108,
										"nodeType": "Block",
										"src": "11105:583:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2046,
																"name": "eth_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2040,
																"src": "11123:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11136:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11123:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656e6420536f6d6520455448",
															"id": 2049,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11139:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ca05f8819ffb49eed362c8482e2f89607806b624518b85b488890406834d3efe",
																"typeString": "literal_string \"Send Some ETH\""
															},
															"value": "Send Some ETH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ca05f8819ffb49eed362c8482e2f89607806b624518b85b488890406834d3efe",
																"typeString": "literal_string \"Send Some ETH\""
															}
														],
														"id": 2045,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11115:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11115:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2051,
												"nodeType": "ExpressionStatement",
												"src": "11115:40:7"
											},
											{
												"assignments": [
													2053
												],
												"declarations": [
													{
														"constant": false,
														"id": 2053,
														"mutability": "mutable",
														"name": "eth_price",
														"nameLocation": "11173:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 2108,
														"src": "11165:17:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2052,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11165:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2057,
												"initialValue": {
													"arguments": [
														{
															"id": 2055,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "11197:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2054,
														"name": "getETHPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1810,
														"src": "11185:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 2056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11185:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11165:43:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2059,
																"name": "eth_price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2053,
																"src": "11240:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2062,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "11268:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "11272:6:7",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "11268:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2060,
																		"name": "meme",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 996,
																		"src": "11253:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC20_$807",
																			"typeString": "contract ERC20"
																		}
																	},
																	"id": 2061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11258:9:7",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 319,
																	"src": "11253:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 2064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11253:26:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11240:39:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206861766520656e6f756768206d656d65",
															"id": 2066,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11293:28:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b99b2e78c78f1318a3232374cbc7b00c7eadb27370706844a7052723adaf5ddc",
																"typeString": "literal_string \"You don't have enough meme\""
															},
															"value": "You don't have enough meme"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b99b2e78c78f1318a3232374cbc7b00c7eadb27370706844a7052723adaf5ddc",
																"typeString": "literal_string \"You don't have enough meme\""
															}
														],
														"id": 2058,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11219:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11219:112:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2068,
												"nodeType": "ExpressionStatement",
												"src": "11219:112:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2072,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11359:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11363:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11359:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2076,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "11379:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DEX_$2110",
																		"typeString": "contract DEX"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DEX_$2110",
																		"typeString": "contract DEX"
																	}
																],
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11371:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2074,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11371:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11371:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2078,
															"name": "eth_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2053,
															"src": "11386:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2069,
															"name": "meme",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "11341:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC20_$807",
																"typeString": "contract ERC20"
															}
														},
														"id": 2071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11346:12:7",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 420,
														"src": "11341:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11341:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2080,
												"nodeType": "ExpressionStatement",
												"src": "11341:55:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2087,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "11435:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2083,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11414:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "11418:6:7",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11414:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11406:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2081,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11406:8:7",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11406:19:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2086,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11426:8:7",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "11406:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11406:40:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2089,
												"nodeType": "ExpressionStatement",
												"src": "11406:40:7"
											},
											{
												"expression": {
													"id": 2092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2090,
														"name": "_y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "11586:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2091,
														"name": "eth_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2040,
														"src": "11592:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11586:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2093,
												"nodeType": "ExpressionStatement",
												"src": "11586:16:7"
											},
											{
												"expression": {
													"id": 2099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2094,
														"name": "_x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "11612:2:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2095,
																	"name": "_k",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "11618:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2096,
																	"name": "_y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1046,
																	"src": "11623:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11618:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2098,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "11617:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11612:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2100,
												"nodeType": "ExpressionStatement",
												"src": "11612:14:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2102,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11647:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11651:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11647:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2104,
															"name": "eth_price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2053,
															"src": "11659:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2105,
															"name": "eth_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "11670:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2101,
														"name": "Sell",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1012,
														"src": "11642:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11642:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2107,
												"nodeType": "EmitStatement",
												"src": "11637:44:7"
											}
										]
									},
									"functionSelector": "e4849b32",
									"id": 2109,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2043,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2042,
												"name": "whenNotPaused",
												"nameLocations": [
													"11091:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "11091:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "11091:13:7"
										}
									],
									"name": "sell",
									"nameLocation": "11059:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "eth_amount",
												"nameLocation": "11072:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 2109,
												"src": "11064:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11064:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11063:20:7"
									},
									"returnParameters": {
										"id": 2044,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11105:0:7"
									},
									"scope": 2110,
									"src": "11050:638:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2111,
							"src": "243:11880:7",
							"usedErrors": []
						}
					],
					"src": "32:15558:7"
				},
				"id": 7
			},
			"MEME.sol": {
				"ast": {
					"absolutePath": "MEME.sol",
					"exportedSymbols": {
						"Context": [
							976
						],
						"ERC20": [
							807
						],
						"ERC20Burnable": [
							929
						],
						"IERC20": [
							885
						],
						"IERC20Metadata": [
							954
						],
						"MEME": [
							2198
						],
						"Ownable": [
							112
						],
						"Pausable": [
							220
						]
					},
					"id": 2199,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2112,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2113,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2199,
							"sourceUnit": 808,
							"src": "60:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 2114,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2199,
							"sourceUnit": 930,
							"src": "117:74:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 2115,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2199,
							"sourceUnit": 221,
							"src": "193:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2116,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2199,
							"sourceUnit": 113,
							"src": "250:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2117,
										"name": "ERC20",
										"nameLocations": [
											"323:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 807,
										"src": "323:5:8"
									},
									"id": 2118,
									"nodeType": "InheritanceSpecifier",
									"src": "323:5:8"
								},
								{
									"baseName": {
										"id": 2119,
										"name": "ERC20Burnable",
										"nameLocations": [
											"330:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 929,
										"src": "330:13:8"
									},
									"id": 2120,
									"nodeType": "InheritanceSpecifier",
									"src": "330:13:8"
								},
								{
									"baseName": {
										"id": 2121,
										"name": "Pausable",
										"nameLocations": [
											"345:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 220,
										"src": "345:8:8"
									},
									"id": 2122,
									"nodeType": "InheritanceSpecifier",
									"src": "345:8:8"
								},
								{
									"baseName": {
										"id": 2123,
										"name": "Ownable",
										"nameLocations": [
											"355:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "355:7:8"
									},
									"id": 2124,
									"nodeType": "InheritanceSpecifier",
									"src": "355:7:8"
								}
							],
							"canonicalName": "MEME",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2198,
							"linearizedBaseContracts": [
								2198,
								112,
								220,
								929,
								807,
								954,
								885,
								976
							],
							"name": "MEME",
							"nameLocation": "315:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2142,
										"nodeType": "Block",
										"src": "406:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2132,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "423:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "427:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "423:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3530303030",
																"id": 2134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "435:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50000_by_1",
																	"typeString": "int_const 50000"
																},
																"value": "50000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "443:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2136,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "449:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 2137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "449:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "443:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "435:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2131,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "417:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "417:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2141,
												"nodeType": "ExpressionStatement",
												"src": "417:43:8"
											}
										]
									},
									"id": 2143,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4d454d45",
													"id": 2127,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "390:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_aa45935facc8cbd8c55ef59eb2083d70572611d9daaaa3b31e42daad65f7f5c8",
														"typeString": "literal_string \"MEME\""
													},
													"value": "MEME"
												},
												{
													"hexValue": "4d454d45",
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "398:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_aa45935facc8cbd8c55ef59eb2083d70572611d9daaaa3b31e42daad65f7f5c8",
														"typeString": "literal_string \"MEME\""
													},
													"value": "MEME"
												}
											],
											"id": 2129,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2126,
												"name": "ERC20",
												"nameLocations": [
													"384:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 807,
												"src": "384:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "384:21:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:2:8"
									},
									"returnParameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "406:0:8"
									},
									"scope": 2198,
									"src": "370:98:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2151,
										"nodeType": "Block",
										"src": "510:27:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2148,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "521:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "521:8:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2150,
												"nodeType": "ExpressionStatement",
												"src": "521:8:8"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2152,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2146,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2145,
												"name": "onlyOwner",
												"nameLocations": [
													"500:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "500:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "500:9:8"
										}
									],
									"name": "pause",
									"nameLocation": "485:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "490:2:8"
									},
									"returnParameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "510:0:8"
									},
									"scope": 2198,
									"src": "476:61:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2160,
										"nodeType": "Block",
										"src": "581:29:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2157,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "592:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "592:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2159,
												"nodeType": "ExpressionStatement",
												"src": "592:10:8"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2161,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2155,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2154,
												"name": "onlyOwner",
												"nameLocations": [
													"571:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "571:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "571:9:8"
										}
									],
									"name": "unpause",
									"nameLocation": "554:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "561:2:8"
									},
									"returnParameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "581:0:8"
									},
									"scope": 2198,
									"src": "545:65:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2175,
										"nodeType": "Block",
										"src": "677:36:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2171,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2163,
															"src": "694:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2172,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2165,
															"src": "698:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2170,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "688:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "688:17:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2174,
												"nodeType": "ExpressionStatement",
												"src": "688:17:8"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 2176,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2168,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2167,
												"name": "onlyOwner",
												"nameLocations": [
													"667:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "667:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "667:9:8"
										}
									],
									"name": "mint",
									"nameLocation": "627:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "640:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2176,
												"src": "632:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "652:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2176,
												"src": "644:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "644:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:28:8"
									},
									"returnParameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "677:0:8"
									},
									"scope": 2198,
									"src": "618:95:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										795
									],
									"body": {
										"id": 2196,
										"nodeType": "Block",
										"src": "857:63:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2191,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2178,
															"src": "895:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2192,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2180,
															"src": "901:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2193,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2182,
															"src": "905:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2188,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "868:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_MEME_$2198_$",
																"typeString": "type(contract super MEME)"
															}
														},
														"id": 2190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "874:20:8",
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 795,
														"src": "868:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "868:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2195,
												"nodeType": "ExpressionStatement",
												"src": "868:44:8"
											}
										]
									},
									"id": 2197,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2185,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2184,
												"name": "whenNotPaused",
												"nameLocations": [
													"820:13:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "820:13:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "820:13:8"
										}
									],
									"name": "_beforeTokenTransfer",
									"nameLocation": "730:20:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2186,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "843:8:8"
									},
									"parameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "759:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "751:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "773:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "765:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "785:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "777:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "750:42:8"
									},
									"returnParameters": {
										"id": 2187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "857:0:8"
									},
									"scope": 2198,
									"src": "721:199:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2199,
							"src": "306:617:8",
							"usedErrors": []
						}
					],
					"src": "33:892:8"
				},
				"id": 8
			}
		}
	}
}